{{language
|exec=machine
|strength=strong
|safety=safe
|checking=both
|gc=yes
|LCT=yes}}
{{implementation|Lisp}}
{{language programming paradigm|functional}}
{{language programming paradigm|procedural}}
{{language programming paradigm|object-oriented}}
{{language programming paradigm|reflective}}

'''Common Lisp''', commonly abbreviated '''CL''', is a dialect of the [[derived from::Lisp]] programming language, standardised by [[ANSI]] X3.226-1994. Developed as a common successor to Maclisp and Lisp Machine Lisp, it is not an implementation but a language specification.

Several implementations of the Common Lisp standard are available, including commercial products and [[open source]] software: [http://www.sbcl.org/ Steel Bank Common Lisp (SBCL)], forked from the earlier CMU Common Lisp (CMUCL), is the most actively maintained open source implementation. CLISP was also a common choice in the past and is used by some Lisp books such as ''Land of Lisp'' (2010) for their code examples, but as of 2022 development has slowed to a crawl. LispWorks is the commonly used commercial alternative to SBCL and offers advanced GUI options, but is quite expensive and may not be worth it if a developer mainly wants to program non-GUI applications.

Common Lisp is a general-purpose programming language, in contrast to Lisp variants such as [[Emacs Lisp]] and AutoLISP which are embedded extension languages in particular products. Unlike many earlier Lisps, Common Lisp (like [[derived from::Scheme]]) uses lexical variable scope.

A "*" (SBCL), ">" (CLISP), or "CL-USER> " prompt seen in front of some examples shows that the code was run in a Lisp [[read-eval-print loop]], or REPL, running interactively in an environment such as [[SLIME]].

==Citations==
* [[wp:Common_lisp|Wikipedia:Common Lisp]]