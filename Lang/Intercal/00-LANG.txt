{{language|Intercal
|site=http://www.catb.org/~esr/intercal/
}}

The language designed to be Turing-complete but as fundamentally unlike any existing language as possible. Expressions that look like line noise. Control constructs that will make you gasp, make you laugh, and possibly make you hurl. Data structures? We don't need no steenking data structures![[#Citation|[1]]]

INTERCAL's main advantage over other programming languages is its strict simplicity. It has few capabilities, and thus there are few restrictions to be kept in mind. Since it is an exceedingly easy language to learn, one might expect it would be a good language for initiating novice programmers. Perhaps surprising, then, is the fact that it would be more likely to initiate a novice into a search for another line of work. As it turns out, INTERCAL is more useful (which isn't saying much) as a challenge to professional programmers. Those who doubt this need only refer back to the sample program in section 2.1. This 22-statement program took somewhere from 15 to 30 minutes to write, whereas the same objectives can be achieved by single-statement programs in either [[SNOBOL]] or [[APL]].[[#Citation|[2]]]

"INTERCAL" is an acronym for "Compiler Language With No Pronounceable Acronym."

==Citations==
#[http://www.catb.org/~esr/intercal/ The INTERCAL Resources Page]
#[http://www.ofb.net/~jlm/intercal.html Overview from The INTERCAL Programming Language Reference Manual by Donand R. Woods and James M. Lyon]

==See Also==
*[[wp:INTERCAL|Wikipedia: Intercal]]
*[http://catb.org/~esr/intercal/stross.html Intercal -- the Language From Hell]
*[http://www.muppetlabs.com/~breadbox/intercal-man/ The INTERCAL Programming Language Revised Reference Manual]
*[http://www.muppetlabs.com/~breadbox/intercal/ INTERCAL "The Performance Art of Programming"]
[[Category:Esoteric Languages]]
*[[eso:INTERCAL|INTERCAL on Esolangs]]