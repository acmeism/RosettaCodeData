{{language|Perl 6
|site=http://perl6.org/
|checking=both
|gc=yes
|strength=gradual
|safety=both
|compat=Nominative, Duck
|parampass=both
|tags=perl6}}
{{language programming paradigm|Dynamic}}
{{language programming paradigm|imperative}}
{{language programming paradigm|procedural}}
{{language programming paradigm|reflective}}
{{language programming paradigm|functional}}
{{language programming paradigm|object-oriented}}
{{language programming paradigm|generic}}
{{infobox_begin}}Can't install Perl&nbsp;6 locally?<br>Try Perl&nbsp;6 on-line!<br>
[https://perl6.github.io/6pad/ Try Perl&nbsp;6 on 6pad].<br>
[https://tio.run/#perl6 Try Perl 6&nbsp;on tio.run].<br>
[https://glot.io/new/perl6 Try Perl 6&nbsp;on glot.io].
{{infobox_end}}
Perl 6 is a member of the Perl family of programming languages. 
Though it resembles previous versions of [[Perl]] to no small degree, Perl 6 is substantially a new language; by design, it isn't backwards-compatible with Perl 5. 
The first official release was at Christmas of 2015.

Damian Conway described the basic philosophy of Perl 6 as follows:

<blockquote>The Perl 6 design process is about keeping what works in Perl 5, fixing what doesn't, and adding what's missing. That means there will be a few fundamental changes to the language, a large number of extensions to existing features, and a handful of completely new ideas. These modifications, enhancements, and innovations will work together to make the future Perl even more insanely great -- without, we hope, making it even more greatly insane.</blockquote>

Major new features include multiple dispatch, declarative classes, grammars, formal parameters to subroutines, type constraints on variables, lazy evaluation, junctions, meta-operators, and the ability to change Perl's syntax at will.

The definition of Perl 6 is specified entirely by a test suite, so we could in theory have multiple implementations.
The current version of the language is 6.d, as defined by the test suite known as "roast" (Repository Of All Spec Tests).  
Compiler releases have date-based versions, and these are typically used in Rosetta Code entries for the "works with" fields.  
The only compiler implementing the full test suite, Rakudo, currently runs on either of two backends, MoarVM or JVM.  
Subsequent language revisions are planned for release on a roughly yearly cycle.  

==Hey! What happened to Perl 6?==
When Perl 6 was conceived, it was intended to be a replacement for Perl 5. (The next version, if you will) As time went on, it became obvious that Perl 5 was still heavily used and desired, and Perl 6 wasn't going to be a drop in replacement for it. Having both languages named Perl led to much confusion outside of the community and much bickering and contention inside. To try to give both languages room to grow, it was decided to rename Perl 6. As of October 2019, "Perl 6" was officially (well, as officially as a volunteer led, open source project can be...) renamed to "Raku".

Since the old name has been in use for many years, it will take some time for the new designation to propagate widely. Expect to see both names in use for some time, but understand that they refer to exactly the same underlying idea. As of March 14, 2020 all of the Perl 6 task entries on Rosetta code have been updated to Raku. There are still many mentions of Perl 6 throughout the site and likely will be for the foreseeable future.

Probably where you want to go is over to the [[:Category:Raku|Raku Page]].

<br clear=right><!-- Stop the category list and infobox from overlapping -->