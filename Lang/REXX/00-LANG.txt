{{language
| LCT=yes
| exec=interpreted 
| express=inferred
| gc=allowed &nbsp;(and in most versions of REXX, it is automatic, but garbage collection isn't mandated).
| safety=safe
| strength=strong
| standardized=yes
| compat=nominative
| checking=dynamic
| parampass=value
| untyped=yes 
| intended=intended for general, application, algorithms, scripting, host/subâ”€system scripting/interfacing, data/text processing, programming as a human activity. 
| goal=the REXX language is designed to make programming easier;&nbsp; to foster high quality programs by making writing them as simple and enjoyable as possible;&nbsp; designing each part of the language for people to use is more important than providing easy implementation;&nbsp; follows the principle of least astonishment [https://en.wikipedia.org/wiki/Principle_of_least_astonishment (POLA)]. }}
{{Wikipedia|REXX}}<br>

<cite>REXX &nbsp; (REstructured eXtended eXecutor) &nbsp; is an interpreted programming language which was developed at IBM. &nbsp; &nbsp; It is a structured high-level programming language which was designed to be both easy to learn and easy to read. &nbsp; &nbsp; Both proprietary and open source interpreters for REXX are available on a wide range of computing platforms, &nbsp; and compilers are available for IBM mainframes.</cite>


'''REXX''' &nbsp; is also spelled:
::* &nbsp; <big> <big>R</big>exx </big>
::* &nbsp; <big> <big>R</big><small>EXX </small> </big>

::::::: &nbsp; but the primary official spelling is &nbsp; '''REXX'''&nbsp;  and is the spelling used here on Rosetta Code.


The '''REXX''' language was influenced by the computer programming languages: &nbsp; '''ALGOL, &nbsp; PL/I, &nbsp; EXEC,''' &nbsp;and&nbsp; '''EXEC 2.'''

<big><big>Versions of REXX:</big></big>
* '''[[wp:ARexx|ARexx]]''' &nbsp; is a classic REXX implementation (with extensions) for the AmigaOS, &nbsp; given in bundle since AmigaOS 2. &nbsp; (Regina REXX has specific support for the extended functions that were introduced in ARexx.) &nbsp; ARexx was written in 1987 by William S. Hawes.


* '''[[Brexx]]''' &nbsp; a classic REXX written by Vassilis N. Vlachoudis, &nbsp; it is free and it's open source and available under the GNU General Public License.


* '''[[CRX REXX]]''' &nbsp; (Compact REXX) is a classic REXX first written by Dr. Brian Marks.


* '''[[CTC REXX]]''' &nbsp; is a classic REXX that is bundled with PC/SPF and written by Command Technology Corporation, &nbsp; a license is required to use this product. &nbsp; This version of REXX can only be used under PC/SPF and it's panels. &nbsp; PC/SPF resembles the IBM program product SPF (which has other names and versions).
 

* '''[[KEXX]]''' &nbsp; is a subset of REXX that is bundled with KEDIT and written by Keven J. Kearney of Mansfield Software Group, Inc., a license is required to use this product. &nbsp; KEXX only executes under the KEDIT licensed product. &nbsp; KEDIT is an XEDIT clone (an editor from IBM for VM/CMS program products).


* '''[[MVS/TSO REXX]]''' &nbsp; is IBM's implementation of classic REXX, &nbsp; a license is required to use the product as well as the operating system it runs under; &nbsp; '''MVS''' and '''TSO''' are used here as generic references.   


* '''[[MVS/TSO REXX compiler]]''' &nbsp; is an IBM implementation of classic REXX, &nbsp; a license is required to use this product as well as the operating system it runs under.


* '''[[NetRexx|NetRexx]]''' &nbsp; is IBM's variant of the REXX programming language to run on the Java virtual machine. &nbsp; It supports a classic REXX syntax, &nbsp; with no reserved keywords, &nbsp; along with considerable additions to support Object-oriented programming in a manner compatible with Java's object model, &nbsp; yet can be used as both a compiled and an interpreted language, &nbsp; with an option of using only data types native to the JVM or the NetRexx run-time package. &nbsp; The syntax and object model of NetRexx differ from Object REXX and Open Object Rexx.


* '''[https://en.wikipedia.org/wiki/Object_REXX Object REXX]''' &nbsp; is/was an object-oriented scripting language initially produced by IBM for OS/2. &nbsp; It is a follow-on to and a significant extension of the "Classic Rexx" language originally created for the CMS component of VM/SP and later ported to MVS, OS/2 and PC DOS. &nbsp; OS/2 version of IBM Object REXX is deeply integrated with SOM. &nbsp; On October 12, 2004, &nbsp; IBM released Object REXX as open source software, &nbsp; giving rise to <u>O</u>pen <u>O</u>bject <u>Rexx</u> (ooRexx).


* '''[[ooRexx|ooRexx]]''' &nbsp; (Open Object Rexx) &nbsp; is an implementation of &nbsp; [[wp:Object REXX|Object REXX]], &nbsp; which is REXX with OO features &nbsp; (some REXX programs are compatible).


* '''[[OS/2 REXX]]''' &nbsp; is a classic REXX that is an IBM implementation of classic REXX, &nbsp; a license is required to use this product as well as the operating system it runs under.


* '''[[OS/400 REXX]]''' &nbsp; is an IBM implementation of classic REXX, &nbsp; a license is required to use this product as well as the operating system it runs under.


* '''[[PC/REXX]]''' &nbsp; is the first classic REXX implemented outside of IBM mainframes, intended for IBM DOS and MS DOS. &nbsp; Written by Mansfield Software Group, Inc., REXX was bundled with KEDIT, &nbsp; a license is required to use this product.


* '''[[Personal REXX]]''' &nbsp; is a classic REXX that is intended for IBM DOS and MS DOS, &nbsp; written by Charles Daney of Quercus Systems, &nbsp; a license is required to use this product. &nbsp; It is also known as REXX/Personal.  


* '''Portable REXX''' &nbsp; (see the &nbsp; '''R4 REXX''' &nbsp; entry, below).
 

* '''[[Regina REXX]]''' &nbsp; is an implementation first created by Anders Christensen (in 1992) and is now maintained by others, notably Mark Hessling. &nbsp; Regina REXX runs on more different platforms than any other REXX, &nbsp; too many to name here. &nbsp; It can be downloaded freely.


* '''[[Reginald REXX]]''' &nbsp; is a REXX developed by Jeff Glatt. &nbsp; It can be downloaded freely. 


* '''[[REXX/imc]]''' &nbsp; a classic REXX developed by Ian M. Collier (imc) for Linux/Unix. 


* '''REXX/Personal''' &nbsp; is another name for &nbsp; '''Personal REXX''' &nbsp; &nbsp; (see above).


* '''[[ROO oo-REXX]]''' &nbsp; an object-oriented REXX developed by Keith Watts of Kilowatt Software, Inc. &nbsp; &nbsp; It can be downloaded freely. &nbsp; '''ROO''' &nbsp; is also known as &nbsp; '''ROO!'''.


* '''[[R4 REXX]]''' &nbsp; a classic REXX developed by Keith Watts of Kilowatt Software, Inc. &nbsp; &nbsp; It was also known as '''Portable REXX'''. &nbsp; It can be downloaded freely.


* '''[[T/REXX, a REXX compiler for CMS]]''' &nbsp; is an implementation of classic REXX written by Leigh Lundin and Mark Woodruff &nbsp; (according to Wikipedia). 


* '''[[VM/CMS REXX]]''' &nbsp; is an IBM implementation of classic REXX that was first implemented (for general use) in the early 1980s. &nbsp; A license is required to use this product as well as the operating system that it runs under. &nbsp; This was the original implementation of REXX written (circa 1979) by Mike Cowlishaw of IBM.


* '''[[VM/CMS REXX compiler]]''' &nbsp; is an IBM implementation of classic REXX, &nbsp; a license is required to use this product as well as the operating system it runs under. 



<br>[Most of the entries were entered mostly from memory and apologies are offered for not knowing more about what wording should be used; &nbsp; the IBM operating systems or Program Products that run REXX are numerous and varied. &nbsp; Their complete (official) names would fill a pageful or two. &nbsp; Some of the REXXes are no longer sold nor available for downloading or purchase, &nbsp; others are no longer maintained. &nbsp; Naming of names is being avoided (especially those licensed products for sale), &nbsp; and it is hoped that this is seen that no products nor vendors are being endorsed, appraised, or critiqued.] &nbsp; &nbsp; &nbsp; -- [[User:Gerard Schildberger|Gerard Schildberger]] 09:28, 1 July 2012 (UTC)



===External Links===
* [https://en.wikipedia.org/wiki/Rexx English Wikipedia <big> REXX </big>]
* [https://github.com/vlachoudis/brexx Brexx interpreter]
* [http://www.oorexx.org/ Open Object Rexx - www.oorexx.org]
* [http://www.netrexx.org The NetRexx Programming Language - www.netrexx.org]
* [http://www.rexxla.org The Rexx Language Association - www.rexxla.org]
* [http://regina-rexx.sourceforge.net/index.html Regina Rexx Interpreter]
* [http://www.kedit.com/ Mansfield Software Group, Inc. (KEDIT)]
* [http://www.quercus-sys.com/ Personal REXX, Quercus Systems]
* [http://www.commandtechnology.com/ CTC Command Technology]
* [http://www.rexxla.org/ CRX Open Source (right column side)]
* [http://www.kilowattsoftware.com/r4Page.htm R4, Kilowatt Software]
* [http://www.kilowattsoftware.com/rooPage.htm ROO, Kilowatt Software]
* [http://publib.boulder.ibm.com/cgi-bin/bookmgr_OS390/BOOKS/HCSE2C00/CCONTENTS?SHELF=hcsh2ab0&DN=SC24-6221-00&DT=20090724140455 z/VM V6R1 REXX/VM Reference]
* [http://publib.boulder.ibm.com/cgi-bin/bookmgr_OS390/BOOKS/HCSB3C00/CCONTENTS?SHELF=hcsh2ab0&DN=SC24-6222-00&DT=20090724131829 z/VM V6R1 REXX/VM User's Guide]
* [http://www.rexxinfo.org/html/rexxinfo1.html#Rexx-Manuals {many references to REXX manuals}]



== Rosetta Code tasks not implemented in REXX ==
[[Reports:Tasks_not_implemented_in_REXX]]