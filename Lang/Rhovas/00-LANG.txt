{{language|Rhovas
|site=https://rhovas.dev
|exec=interpreted
|gc=yes
|safety=safe
|express=explicit
|compat=nominative
|checking=static
|strength=strong
|tags=rhovas
|hopl=no}}
{{language programming paradigm|functional}}
{{language programming paradigm|object-oriented}}
[[runs on vm::java virtual machine| ]]

Rhovas is a programming language intended for API design and enforcement. Using Rhovas, developers can better express the contracts and intention of their code to help create maintainable, correct, and performant software.

Rhovas can be roughly classified as a '''strong''', '''statically typed''', and '''Object-Oriented''' language that ''prefers'' '''Functional''' paradigms. It is most similar to [[Kotlin]] but also takes inspiration from [[Java]], [[C++]], [[JavaScript]]/[[TypeScript]], [[Swift]], [[Rust]], and [[Elixir]], among many others for specific features. Rhovas can be run on either the [[JVM]] or in [[JavaScript]] via Kotlin Multiplatform.

For more information on Rhovas, see the following links:

* [https://rhovas.dev Rhovas Website]: Information about Rhovas, most notably:
** [https://rhovas.dev/learn/motivation Motivation]: A deep-dive into the reasons Rhovas is being created and the problems it intends to solve.
** [https://rhovas.dev/learn/tour Language Tour]: A high-level overview of Rhovas that covers most of the important constructs/features.
** [https://rhovas.dev/editor Online Editor]: An online editor for Rhovas which can be used without having to setup/build this project locally.
* [https://github.com/Rhovas GitHub]: All source code for Rhovas, particularly the [https://github.com/Rhovas/Interpreter Interpreter] and [https://github.com/Rhovas/Website Website].
** [https://github.com/Rhovas/Interpreter/tree/master/src/commonTest/resources/dev/rhovas/interpreter/programs/rosettacode Programs/RosettaCode]: Implementations of RosettaCode problems used for testing both JVM and JS environments.
* [https://discord.gg/gm96xd8 Discord Server]: Discussion on Rhovas including language design, implementation, feedback, and anything related.