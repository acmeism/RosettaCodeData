{{stub}}{{language
|checking=dynamic
|exec=interpreted
|site=http://supercollider.github.io/
|LCT=no}}{{language programming paradigm|object-oriented}}
SuperCollider is an environment and programming language for real time audio synthesis and algorithmic composition. It provides an interpreted object-oriented language (often called sclang) which functions as a network client to a state of the art, realtime sound synthesis server. It is used by musicians, artists, and researchers working with sound.

The programming language was originally devised by James McCartney and has been further developed by an interdisciplinary open source community. Its design follows a pure object-oriented design that relies on objects including functions as first-class citizens. It is dynamically typed, and has functions of both lexical and dynamic scope. SuperCollider comes with an interactive programming library for the runtime rewriting of programs, which includes programming as a performance (live coding). There are several purely functional sublanguages embedded in the system. While mostly used for sound, its structure is general purpose.


[https://github.com/supercollider/supercollider SuperCollider at GitHub]
[http://supercollider.github.io/ SuperCollider Homepage]