{{language|Zoea
|strength=strong
|checking=dynamic
|gc=yes
|exec=interpreted
|hopl=no
|LCT=no
|compat=structural
|parampass=value
|site=http://zoea.co.uk/
|bnf=https://www.zoea.co.uk/language/grammar.html
}}{{language programming paradigm|Declarative}}

[http://zoea.co.uk Zoea]  is   a   simple   declarative   programming   language   based   on   the   concept   of   inductive programming. Instead of writing code in the conventional sense the Zoea developer describes the behaviour of a program as a set of scenarios consisting of inputs and associated outputs. As a result Zoea programs resemble a set of functional test cases. The Zoea compiler turns the Zoea program into internal bytecode that is interpreted at runtime.

The Zoea language takes little time to learn. Programming in Zoea mostly involves creating examples of data that demonstrate the required behaviour.

It is a common view that inductive programming is only suitable for the creation of small programs. Zoea includes a number of features that allow it to produce larger programs. These include the ability to specify one or more intermediate values between an input and an output. It is also possible for smaller programs to be composed to form larger programs.

See also [[Zoea Visual]] which is a visual programming language built on top of Zoea.