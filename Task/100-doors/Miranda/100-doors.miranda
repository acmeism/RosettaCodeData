main :: [sys_message]
main = [Stdout (show (openDoors 100)),
        Stdout "\n"]

openDoors :: num->[num]
openDoors doors =
    map snd (filter fst (zip2 (doorStates doors) [1..]))

doorStates :: num->[bool]
doorStates doors =
    take doors (foldr (zipWith (~=)) (repeat False) (map pass [1..doors]))

pass :: num->[bool]
pass n = tl (concat (repeat (take n (True:repeat False))))

zipWith f x y = map f' (zip2 x y)
                where f' (x,y) = f x y
