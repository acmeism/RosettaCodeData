using system;

// initialize doors as pairs: number, status where 0 means open
let doors = zip (1..100) (repeat 1);

toogle (x,y) = x,~y;

toogleEvery n d = map (tooglep n) d with
                    tooglep n d@((x,_)) = toogle d if ~(x mod n);
                                        = d otherwise; end;

// show description of given doors
status (n,x) = (str n) + (case x of
                            1 = " close";
                            0 = " open"; end);

let result = foldl (\a n -> toogleEvery n a) doors (1..100);

// pretty print the result (only open doors)
showResult = do (puts.status) final when
               final = filter open result with
                         open (_,x) = ~x;
                       end; end;
