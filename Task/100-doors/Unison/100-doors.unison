hundredDoors : [Boolean]
hundredDoors =
  toggleEachNth : Nat -> [Boolean] -> [Boolean]
  toggleEachNth n doors =
    go counter = cases
      [] -> []
      (d +: ds) -> if counter == n
        then (not d) +: go 1 ds
        else d +: go (counter+1) ds

    go 1 doors

  foldr toggleEachNth (replicate 100 'false) (range 1 101)

results = filterMap (cases (open, ix) -> if open then Some (ix+1) else None)
                    (indexed hundredDoors)
