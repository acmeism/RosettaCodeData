  [ this ] is 100prisoners.qky

  [ dup size 2 / split ]                          is halve     (   [ --> [ [ )

  [ stack ]                                       is successes (     --> s   )

  [ [] swap times [ i join ] shuffle ]            is drawers   (   n --> [   )

  [ false unrot
    temp put
    dup shuffle
    halve drop
    witheach
      [ dip dup peek
        temp share = if
        [ dip not
          conclude ] ]
    drop
    temp release ]                                is naive     ( [ n --> b   )

  [ false unrot
    dup temp put
    over size 2 / times
      [ dip dup peek
        dup temp share = if
        [ rot not unrot
          conclude ] ]
    2drop
    temp release ]                                is smart     ( [ n --> b   )

  [ ]'[ temp put
    drawers
    0 successes put
    dup size times
      [ dup i temp share do
        successes tally ]
    size successes take =
    temp release ]                                is prisoners (   n --> b   )

  [ say "100 naive prisoners were pardoned "
    0 10000 times [ 100 prisoners naive + ] echo
    say " times out of 10000 simulations." cr

    say "100 smart prisoners were pardoned "
    0 10000 times [ 100 prisoners smart + ] echo
    say " times out of 10000 simulations." cr ]   is simulate  (     -->     )
