100H: /* CP/M ORIGIN */

BDOS: PROCEDURE(F,PARAM);  /* CALL CP/M BDOS */
    DECLARE F BYTE;
    DECLARE PARAM ADDRESS;
    GO TO 5;
END BDOS;

DECLARE BDOS$EXIT LITERALLY '0'; /* BDOS FUNCTIONS */
DECLARE BDOS$PUTS LITERALLY '9';

PRINT$BYTE: PROCEDURE(N); /* PRINT A DECIMAL BYTE */
    DECLARE (N, D) BYTE, S (5) BYTE INITIAL ('... $');
    DECLARE P ADDRESS, C BASED P BYTE;
    P = .S(3);
DIGIT:
    P = P - 1;
    C = (N MOD 10) + 48;
    N = N / 10;
    IF N > 0 THEN GO TO DIGIT;
    CALL BDOS(BDOS$PUTS, P);
END PRINT$BYTE;

PRINT$STR: PROCEDURE(S); /* PRINT A STRING */
    DECLARE S ADDRESS;
    CALL BDOS(BDOS$PUTS, S);
END PRINT$STR;

N$OF$BOTTLES: PROCEDURE(N); /* PRINT _N_ BOTTLES */
    DECLARE N BYTE;
    IF N = 0 THEN CALL PRINT$STR(.('NO MORE$'));
    ELSE IF N = 1 THEN CALL PRINT$STR(.('1 BOTTLE$'));
    ELSE DO;
        CALL PRINT$BYTE(N);
        CALL PRINT$STR(.('BOTTLES$'));
    END;
END N$OF$BOTTLES;

TAKE$DOWN: PROCEDURE(N); /* PRINT TAKE (ONE/IT) DOWN */
    DECLARE N BYTE;
    CALL PRINT$STR(.('TAKE $'));
    IF N=1 THEN CALL PRINT$STR(.('IT$'));
    ELSE CALL PRINT$STR(.('ONE$'));
    CALL PRINT$STR(.(' DOWN AND PASS IT AROUND',13,10,'$'));
END TAKE$DOWN;

DECLARE OF$BEER DATA (' OF BEER$');
DECLARE ON$WALL DATA (' ON THE WALL',13,10,'$');
DECLARE NEWLINE DATA (13,10,'$');

DECLARE BOTTLES BYTE INITIAL (99);

DO WHILE BOTTLES > 0;
    CALL N$OF$BOTTLES(BOTTLES);
    CALL PRINT$STR(.OF$BEER);
    CALL PRINT$STR(.ON$WALL);
    CALL N$OF$BOTTLES(BOTTLES);
    CALL PRINT$STR(.OF$BEER);
    CALL PRINT$STR(.NEWLINE);
    CALL TAKE$DOWN(BOTTLES);
    BOTTLES = BOTTLES - 1;
    CALL N$OF$BOTTLES(BOTTLES);
    CALL PRINT$STR(.OF$BEER);
    CALL PRINT$STR(.ON$WALL);
    CALL PRINT$STR(.NEWLINE);
END;

CALL BDOS(BDOS$EXIT,0);
EOF
