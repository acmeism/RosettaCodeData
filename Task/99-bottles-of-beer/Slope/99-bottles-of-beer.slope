;; 99 bottles of beer
;;
(define bottles-of-beer (lambda (bottles)
  (if (> bottles -1)
    (begin0
      (for-each
        (lambda (app)
          (display
            (list->string
              (cond
                ((equal? bottles 0)
                  (list "No more beer"))
                ((equal? bottles 1)
                  (list "One bottle of beer"))
                (else
                  (cons bottles " bottles of beer"))) "") app ))
        [" on the wall, " "."])
      (if (> bottles 0)
        (display "\n\tTake one down, pass it around.\n")
        (display "\n\tGo to the store and buy some more.\n"))
      (bottles-of-beer (- bottles 1))))))
;; main
(bottles-of-beer 99)
