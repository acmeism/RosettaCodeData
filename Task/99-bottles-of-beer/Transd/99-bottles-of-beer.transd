#lang transd

class MaterialAssets: {
    what: (λ (textout quantity " " contents " ")),
    consume: (λ (-= quantity 1)),
    thereIs: (λ (ret quantity)),
    quantity: Int(),
    contents: String(),
    @init: (λ _q Int(0) _c String()
        (= quantity _q) (= contents _c))
}

class Storage: {
    where: (λ (textout container)),
    container: String(),
    @init: (λ _c String() (= container _c))
}

class Activity: {
    do: (λ (textout action) (consume stuff)),
    provideStuff: (λ _s MaterialAssets() (rebind stuff _s)),
    action: String(),
    @init: (λ _a String() (= action _a)),
    stuff: MaterialAssets()
}

class PartyMaker: {
    letsRock: (λ
        (while (thereIs stuff)
            (what stuff) (where box) (lout "")
            (what stuff) (lout "")
            (do fun) (lout "")
            (what stuff) (where box) (lout "\n"))
        (lout "OK! What about one more?")
    ),
    stuff: MaterialAssets(),
    box: Storage(),
    fun: Activity(),
    @init: (λ _s MaterialAssets() _b Storage() _f Activity()
        (rebind stuff _s) (rebind box _b) (rebind fun _f)
        (provideStuff fun stuff))
}

MainModule: {
    _start: (λ
        locals: party PartyMaker(
            MaterialAssets(99 "bottles of beer")
            Storage("on the wall")
            Activity("Take one down, pass it around"))

        (letsRock party)
    )
}
