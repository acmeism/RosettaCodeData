import extensions;

singleton AksTest
{
    static long[] c := new long[](100);

    coef(int n)
    {
        int i := 0;
        int j := 0;

        if ((n < 0) || (n > 63)) { AbortException.raise() }; // gracefully deal with range issue

        c[i] := 1l;
        for (int i := 0, i < n, i += 1) {
            c[1 + i] := 1l;
            for (int j := i, j > 0, j -= 1) {
                c[j] := c[j - 1] - c[j]
            };
            c[0] := c[0].Negative
        }
    }

    bool is_prime(int n)
    {
        int i := n;

        self.coef(n);
        c[0] := c[0] + 1;
        c[i] := c[i] - 1;

        i -= 1;
        while (i + 1 != 0 && c[i+1].mod(n) == 0)
        {
            i -= 1
        };

        ^ i < 0
    }

    show(int n)
    {
        int i := n;
        i += 1;
        while(i != 0)
        {
            i -= 1;
            console.print("+",c[i],"x^",i)
        }
    }
}

public program()
{
    for (int n := 0, n < 10, n += 1) {
        AksTest.coef(n);

		console.print("(x-1)^",n," = ");
		AksTest.show(n);
        console.printLine()
    };

    console.print("Primes:");
    for (int n := 1, n <= 63, n += 1) {
        if (AksTest.is_prime(n))
        {
            console.print(n," ")
        }
    };

    console.printLine().readChar()
}
