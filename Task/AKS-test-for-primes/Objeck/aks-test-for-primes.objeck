class AksTest {
  @c : static : Int[];

  function : Main(args : String[]) ~ Nil {
    @c := Int->New[100];

    for(n := 0; n < 10; n++;) {
      Coef(n);
      "(x-1)^ {$n} = "->Print();
      Show(n);
      '\n'->Print();
    };

    "\nPrimes:"->PrintLine();
    for(n := 2; n <= 63; n++;) {
      if(IsPrime(n)) {
        " {$n}"->Print();
      };
    };
    '\n'->Print();
  }

  function : native : Coef(n : Int) ~ Nil {
    i := 0; j := 0;

    if (n < 0 | n > 63) {
      Runtime->Exit(0);
    };

    for(@c[0] := 1; i < n; i++;) {
      j := i;
      for(@c[1 + j] := 1; j > 0; j--;) {
        @c[j] := @c[j-1] - @c[j];
      };
      @c[0] := @c[0] * -1;
    };
  }

  function : native : IsPrime(n : Int) ~ Bool {
    Coef(n);
    @c[0] += 1; @c[n] -= 1;

    i:=n;
    while (i <> 0 & (@c[i] % n) = 0) {
      i--;
    };

    return i = 0;
  }

  function : Show(n : Int) ~ Nil {
    do {
      value := @c[n];
      "+{$value}x^{$n}"->Print();
    } while (n-- <> 0);
  }
}
