#lang transd

MainModule: {
    poly: (位 n Long()
        (with v Vector<Long>([1])
            (for i in Range(n) do
                (append v (/ (* (get v -1) (- (- n i))) (to-Long (+ i 1))))
            )
            (reverse v)
            (ret v)
        )
    ),

    aks_test: (位 n Long() -> Bool()
        (if (< n 2) (ret false))
        (with v (poly n)
            (set-el v 0 (+ (get v 0) 1))
            (ret (not (any Range(in: v 0 -1) (位 (mod @it n)))))
        )
    ),

    _start: (位 (with v Vector<Long>()
        (for p in Seq( 12 ) do
            (set v (poly p))
            (textout "(x - 1)^" p " = ")
            (for i in v do (textout :sign i "x^" @idx " "))
            (textout "\n")
        )
        (textout "\nList of primes in 2-62 interval:\n")
        (for p in Seq( 2 62 ) do
            (if (aks_test p) (textout p " "))
        )
    ))
}
