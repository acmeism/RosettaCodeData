\AKS test for primes
code Rem=2, ChOut=8, CrLf=9, Text=12, IntOut=11;
code real RlOut=48, Float=49, Format=52;
define PasTriMax = 33; \for 32-bit integer type
integer N;

  procedure PascalTriangle(N, PasTri);
  \Calculate the N'th line 0.. middle
  integer N, PasTri;
  integer J, K;
  begin
  PasTri(0):= 1;
  J:= 1;
  while J <= N do
    begin
    J:= J + 1;
    K:= J / 2;
    PasTri(K):= PasTri(K - 1);
    for K:= K downto 1 do PasTri(K):= PasTri(K) + PasTri(K - 1)
    end \while
  end;

  function integer IsPrime(N);
  integer N;
  integer Res, I, PasTri(PasTriMax + 1);
  begin
  if N > PasTriMax then
    begin
    IntOut(0, N);
    Text(0, " is out of range");
    CrLf(0);
    exit;
    end;
  PascalTriangle(N, PasTri);
  Res:= true;
  I:= N / 2;
  while Res & (I > 1) do
    begin
    Res:= Res & (Rem(PasTri(I) / N) = 0);
    I:= I - 1
    end;
  return Res;
  end;

  procedure ExpandPoly(N);
  integer N;
  integer J, BVZ, PasTri(PasTriMax + 1);

    procedure VZOut(D, B);
    integer D, B;
    begin
    if B then ChOut(D, ^-) else ChOut(D, ^+)
    end;

  begin
  if N > PasTriMax then
    begin
    IntOut(0, N);
    Text(0, " is out of range");
    CrLf(0);
    exit
    end;
  case N of
    0: [Text(0, "(x-1)^^0 = 1"); CrLf(0)];
    1: [Text(0, "(x-1)^^1 = x-1"); CrLf(0)]
  other
    begin
    PascalTriangle(N, PasTri);
    Text(0, "(x-1)^^");
    IntOut(0, N);
    Text(0, " = x^^");
    IntOut(0, N);
    BVZ:= true;
    for J:= N - 1 downto N / 2 + 1 do
      begin
      VZOut(0, BVZ);
      IntOut(0, PasTri(N - J));
      Text(0, "*x^^");
      IntOut(0, J);
      BVZ:= ~BVZ;
      end;
    for J:= N / 2 downto 2 do
      begin
      VZOut(0, BVZ);
      IntOut(0, PasTri(J));
      Text(0, "*x^^");
      IntOut(0, J);
      BVZ:= ~BVZ
      end;
    VZOut(0, BVZ);
    IntOut(0, PasTri(1));
    Text(0, "*x");
    BVZ:= ~BVZ;
    VZOut(0, BVZ);
    IntOut(0, PasTri(0));
    CrLf(0);
    end \case other
  end;

begin
for N:= 0 to 9 do ExpandPoly(N);
for N:= 2 to PasTriMax do
  if IsPrime(N) then [Format(3,0); RlOut(0, Float(N))];
CrLf(0);
end
