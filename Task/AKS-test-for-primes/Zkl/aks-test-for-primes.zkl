var BN=Import("zklBigNum");
fcn expand_x_1(p){
    ex := L(BN(1));
    foreach i in (p){ ex.append(ex[-1] * -(p-i) / (i+1)) }
    return(ex.reverse())
 }
fcn aks_test(p){
    if (p < 2) return(False);
    ex := expand_x_1(p);
    ex[0] = ex[0] + 1;
    return(not ex[0,-1].filter('%.fp1(p)));
}
println("# p: (x-1)^p for small p");
foreach p in (12){
    println("%3d: ".fmt(p),expand_x_1(p).enumerate()
       .pump(String,fcn([(n,e)]){"%+d%s ".fmt(e,n and "x^%d".fmt(n) or "")}));
}

println("\n# small primes using the aks test");
println([0..110].filter(aks_test).toString(*));
