PROC FillSumOfDivisors(CARD ARRAY pds CARD size,maxNum,offset)
  CARD i,j

  FOR i=0 TO size-1
  DO
    pds(i)=1
  OD
  FOR i=2 TO maxNum DO
    FOR j=i+i TO maxNum STEP i
    DO
      IF j>=offset THEN
        pds(j-offset)==+i
      FI
    OD
  OD
RETURN

PROC Main()
  DEFINE MAXNUM="20000"
  DEFINE HALFNUM="10000"
  CARD ARRAY pds(HALFNUM+1)
  CARD def,perf,abud,i,sum,offset
  BYTE CRSINH=$02F0 ;Controls visibility of cursor

  CRSINH=1 ;hide cursor
  Put(125) PutE() ;clear the screen
  PrintE("Please wait...")

  def=1 perf=0 abud=0
  FillSumOfDivisors(pds,HALFNUM+1,HALFNUM,0)
  FOR i=2 TO HALFNUM
  DO
    sum=pds(i)
    IF sum<i THEN def==+1
    ELSEIF sum=i THEN perf==+1
    ELSE abud==+1 FI
  OD

  offset=HALFNUM
  FillSumOfDivisors(pds,HALFNUM+1,MAXNUM,offset)
  FOR i=HALFNUM+1 TO MAXNUM
  DO
    sum=pds(i-offset)
    IF sum<i THEN def==+1
    ELSEIF sum=i THEN perf==+1
    ELSE abud==+1 FI
  OD

  PrintF("  Numbers: %I%E",MAXNUM)
  PrintF("Deficient: %I%E",def)
  PrintF("  Perfect: %I%E",perf)
  PrintF("  Abudant: %I%E",abud)
RETURN
