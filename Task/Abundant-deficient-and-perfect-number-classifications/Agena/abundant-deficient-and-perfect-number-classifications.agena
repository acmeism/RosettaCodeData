scope # count abundant, perfect and deficient numbers up to 20 000
    # construct a table of proper divisor sums
    local constant MAX_NUMBER, constant pds := 20_000, seq();
    pds[ 1 ] := 0;
    for i from 2 to MAX_NUMBER do pds[ i ] := 1 od;
    for i from 2 to MAX_NUMBER do
        for j from i + i to MAX_NUMBER by i do pds[ j ] +:= i od;
    od;
    # classify the numbers and count each type
    local aCount, dCount, pCount := 0, 0, 0;
    for i to MAX_NUMBER do
        local constant dSum := pds[ i ];
        if   dSum > i then aCount +:= 1
        elif dSum < i then dCount +:= 1
        else               pCount +:= 1
        fi
    od;
    printf( "Abundant  numbers up to %.0m: %8.0m\n", MAX_NUMBER, aCount );
    printf( "Perfect   numbers up to %.0m: %8.0m\n", MAX_NUMBER, pCount );
    printf( "Deficient numbers up to %.0m: %8.0m\n", MAX_NUMBER, dCount )
end
