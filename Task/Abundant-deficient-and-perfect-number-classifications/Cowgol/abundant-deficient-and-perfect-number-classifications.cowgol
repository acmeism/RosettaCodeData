include "cowgol.coh";

const MAXIMUM := 20000;

var p: uint16[MAXIMUM+1];
var i: uint16;
var j: uint16;

MemZero(&p as [uint8], @bytesof p);
i := 1;
while i <= MAXIMUM/2 loop
    j := i+i;
    while j <= MAXIMUM loop
        p[j] := p[j]+i;
        j := j+i;
    end loop;
    i := i+1;
end loop;

var def: uint16 := 0;
var per: uint16 := 0;
var ab: uint16 := 0;
i := 1;
while i <= MAXIMUM loop
    if p[i]<i then
        def := def + 1;
    elseif p[i]==i then
        per := per + 1;
    else
        ab := ab + 1;
    end if;
    i := i + 1;
end loop;

print_i16(def); print(" deficient numbers.\n");
print_i16(per); print(" perfect numbers.\n");
print_i16(ab); print(" abundant numbers.\n");
