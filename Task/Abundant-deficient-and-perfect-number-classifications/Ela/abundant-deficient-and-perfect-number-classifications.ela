open monad io number list

divisors n = filter ((0 ==) << (n `mod`)) [1 .. (n `div` 2)]
classOf n = compare (sum $ divisors n) n

do
  let classes = map classOf [1 .. 20000]
  let printRes w c = putStrLn $ w ++ (show << length $ filter (== c) classes)
  printRes "deficient: " LT
  printRes "perfect:   " EQ
  printRes "abundant:  " GT
