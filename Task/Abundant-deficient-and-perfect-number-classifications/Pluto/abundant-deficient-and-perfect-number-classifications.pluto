do  -- count abundant, perfect and deficient numbers up to 20 000

    local fmt = require( "fmt" )      -- RC Pluto formatting library

    -- construct a table of proper divisor sums
    local maxNumber <const>, pds <const> = 20_000, {}
    pds[ 1 ] = 0
    for i = 2, maxNumber do pds[ i ] = 1 end
    for i = 2, maxNumber do
        for j = i + i, maxNumber, i do pds[ j ] += i end
    end

    -- classify the numbers and count each type
    local aCount, dCount, pCount = 0, 0, 0
    for i = 1, maxNumber do
        local dSum <const> = pds[ i ]
        if     dSum > i then aCount += 1
        elseif dSum < i then dCount += 1
        else                 pCount += 1
        end
    end
    local formattedMax <const> = string.formatint( maxNumber )
    fmt.write( "Abundant  numbers up to %s: %8s\n", formattedMax, string.formatint( aCount ) )
    fmt.write( "Perfect   numbers up to %s: %8s\n", formattedMax, string.formatint( pCount ) )
    fmt.write( "Deficient numbers up to %s: %8s\n", formattedMax, string.formatint( dCount ) )
end
