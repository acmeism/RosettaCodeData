local int = require "int"
local fmt = require "fmt"
require "table2"

local function abundant_odd(search_from, count_from, count_to, print_one)
    local count = count_from
    local n = search_from
    while count < count_to do
        local divs = int.divisors(n, true)
        local tot = #divs > 0 ? (divs:sum()) : 0
        if tot > n then
            ++count
            if !print_one or count >= count_to then
                local s = fmt.swrite(divs, " + ", "")
                if !print_one then
                    fmt.print("%2d. %5d < %s = %d", count, n, s, tot)
                else
                    fmt.print("%d < %s = %d", n, s, tot)
                end
            end
        end
        n += 2
    end
    return n
end

local MAX <const> = 25
print($"The first {MAX} abundant odd numbers are:")
local n = abundant_odd(1, 0, 25, false)

print("\nThe one thousandth abundant odd number is:")
abundant_odd(n, 25, 1000, true)

print("\nThe first abundant odd number above one billion is:")
abundant_odd(1e9 + 1, 0, 1, true)
