import ballerina/io;

function kPrime(int m, int k) returns boolean {
    int n = m; // make mutable
    int nf = 0;
    foreach int i in 2...n {
        while (n % i) == 0 {
            if nf == k { return false; }
            nf += 1;
            n /= i;
        }
    }
    return nf == k;
}

function gen(int k, int m) returns int[] {
    int[] r = [];
    r.setLength(m);
    int n = 2;
    foreach int i in 0 ..< r.length() {
        while !kPrime(n, k) { n += 1; }
        r[i] = n;
        n += 1;
    }
    return r;
}

public function main() {
    foreach int k in 1...5 {
        io:println(k, " ", gen(k, 10));
    }
}
