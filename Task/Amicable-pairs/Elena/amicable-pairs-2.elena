import extensions;
import system'routines'stex;
import system'collections;

const int N = 20000;

extension op : IntNumber
{
    Enumerator<int> ProperDivisors
        = new Range(1,self / 2).filterBy:(int n => self.mod:n == 0);

    get AmicablePairs()
    {
        auto divsums := new List<int>(
            cast Enumerator<int>(
                new Range(0, self).selectBy:(int i => i.ProperDivisors.summarize(0))));

        ^ new Range(0, divsums.Length)
            .filterBy:(int i)
            {
                auto sum := divsums[i];
                ^ (i < sum) && (sum < divsums.Length) && (divsums[sum] == i)
            }
            .selectBy:(int i => new Tuple<int,int>(i,divsums[i]));
    }
}

public program()
{
    N.AmicablePairs.forEach:(var Tuple<int,int> pair)
    {
        console.printLine(pair.Item1, " ", pair.Item2)
    }
}
