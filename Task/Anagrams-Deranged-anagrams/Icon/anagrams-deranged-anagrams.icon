link strings     # for csort() procedure

procedure main()
    anagrams := table()                     # build lists of anagrams
    every *(word := !&input) > 1 do {
        canon := csort(word)
        /anagrams[canon] := []
        put(anagrams[canon], word)
        }

    longest := 1                            # find a longest derangement
    every *(aList := !anagrams) > 1 do
        if derangement := derange(aList) then
            if longest <:= *derangement[1] then long := derangement

    every writes((!\long||" ")|"\n")        # show longest
end

procedure derange(aList)    # Return a single derangement from this list
    while aWord := get(aList) do return noMatch(aWord, !aList)
end

procedure noMatch(s1,s2)    # Produce pair only if s1,s2 are deranged.
    every i := 1 to *s1 do if s1[i] == s2[i] then fail
    return [s1,s2]
end
