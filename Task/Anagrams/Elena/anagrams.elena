#define system.
#define system'routines.
#define system'io.
#define system'collections.
#define extensions.
#define extensions'routines.

#class(extension) op
{
     #method normalized
         = self toArray ascendant summarize:(String new) literal.
}

#symbol program =
[
    #var aDictionary := Dictionary new.

    File new &path:"unixdict.txt" run &eachLine: aWord
    [
        #var aKey := aWord normalized.
        #var anItem := aDictionary@aKey.
        ($nil == anItem) ?
        [
            anItem := ArrayList new.
            aDictionary@aKey := anItem.
        ].

        anItem += aWord.
    ].

    aDictionary array_list
        sort: (:aFormer:aLater) [ aFormer length > aLater length ]
        top:20 run &each: aPair [ console writeLine:aPair ].
].
