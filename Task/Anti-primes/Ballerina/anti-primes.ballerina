import ballerina/io;

function divisorCount(int x) returns int {
    int n = x;
    if n < 1 { return 0; }
    int count = 0;
    int prod = 1;
    while n % 2 == 0 {
        count += 1;
        n /= 2;
    }
    prod *= 1 + count;
    int i = 3;
    while i * i <= n {
        count = 0;
        while n % i == 0 {
            count += 1;
            n /= i;
        }
        prod *= 1 + count;
        i += 2;
     }
     if n > 2 { prod *= 2; }
     return prod;
}

public function main() {
    io:println("The first 20 anti-primes are:");
    int maxDiv = 0;
    int count = 0;
    int n = 1;
    while count < 20 {
        int d = divisorCount(n);
        if d > maxDiv {
           io:print(n, " ");
           maxDiv = d;
           count += 1;
        }
        n += 1;
    }
    io:println();
}
