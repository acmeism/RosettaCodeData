'Full solution: Create an object with all required fields and
'build-in functions to append a record and to read the last record
$include "Rapidq.inc"

Type TLogFile extends QObject
  Private:
    file as qfilestream

  Public:
    account as string
    password as string
    UID as integer
    GID as integer
    GECOS.fullname as string
    GECOS.office as string
    GECOS.extension as string
    GECOS.homephone as string
    GECOS.email as string
    directory as string
    shell as string

    RSep as string
    GSep as string

    function AppendRecord(LogFile as string) as integer
        with This
            if fileexists(LogFile) then
                Result = .file.open(LogFile, fmOpenWrite)
            else
                Result = .file.open(LogFile, fmCreate)
            end if

            .file.position = .file.size
            .file.writeline .account + .RSep + .password + .RSep + str$(.UID) + .RSep + str$(.GID) + .RSep +_
                            .GECOS.fullname + .GSep + .GECOS.office + .GSep + .GECOS.extension +_
                            .GSep + .GECOS.homephone + .GSep + .GECOS.email + .RSep +_
                            .directory + .RSep + .shell
            .file.close
        end with
    end function

    Function ReadLastRecord(LogFile as string) as string
        dim x as integer
        dim LogRec as string
        dim GECOSRec as string

        With This
            if fileexists(LogFile) then
                .file.open(LogFile, fmOpenRead)
                While not .file.eof
                    LogRec = .file.readline
                Wend
                .file.close

                .account = field$(LogRec, .RSep, 1)
                .password = field$(LogRec, .RSep, 2)
                .UID = val(field$(LogRec, .RSep, 3))
                .GID = val(field$(LogRec, .RSep, 4))
                GECOSRec = field$(LogRec, .RSep, 5)
                .directory = field$(LogRec, .RSep, 6)
                .shell = field$(LogRec, .RSep, 7)
                .GECOS.fullname = field$(GECOSRec, .GSep, 1)
                .GECOS.office = field$(GECOSRec, .GSep, 2)
                .GECOS.extension = field$(GECOSRec, .GSep, 3)
                .GECOS.homephone = field$(GECOSRec, .GSep, 4)
                .GECOS.email = field$(GECOSRec, .GSep, 5)

            else
                showmessage "Can't read file " + Logfile

            end if
        end with
    End function

    Constructor
        RSep = ":"
        GSep = ","
    End Constructor
end type

'--- Now we can use our LogFile object:
dim LogFile as TLogFile

'--- Let's save a record: Set field values
Logfile.account = "jsmith"
Logfile.password = "X"
Logfile.UID = 1001
Logfile.GID = 1000
Logfile.directory = "/home/jsmith"
Logfile.shell = "/bin/bash"
Logfile.GECOS.fullname = "Joe Smith"
Logfile.GECOS.office = "Room 1007"
Logfile.GECOS.extension = "(234)555-8917"
Logfile.GECOS.homephone = "(234)555-0077"
Logfile.GECOS.email = "jsmith@rosettacode.org"
'--- And save it to our logfile
Logfile.appendrecord("c:\A test.txt")

'--- Let's save the second one: Set field values
Logfile.account = "jdoe"
Logfile.password = "X"
Logfile.UID = 1002
Logfile.GID = 1000
Logfile.directory = "/home/jsmith"
Logfile.shell = "/bin/bash"
Logfile.GECOS.fullname = "Jane Doe"
Logfile.GECOS.office = "Room 1004"
Logfile.GECOS.extension = "(234)555-8914"
Logfile.GECOS.homephone = "(234)555-0044"
Logfile.GECOS.email = "jdoe@rosettacode.org"
'--- And save it to our logfile
Logfile.appendrecord("c:\A test.txt")

'--- And append the last one: Set field values
Logfile.account = "xyz"
Logfile.password = "X"
Logfile.UID = 1003
Logfile.GID = 1000
Logfile.directory = "/home/xyz"
Logfile.shell = "/bin/bash"
Logfile.GECOS.fullname = "X Yz"
Logfile.GECOS.office = "Room 1003"
Logfile.GECOS.extension = "(234)555-8913"
Logfile.GECOS.homephone = "(234)555-0033"
Logfile.GECOS.email = "xyz@rosettacode.org"
'--- And save it to our logfile
Logfile.appendrecord("c:\A test.txt")


'--- Read last record: load all CSV fields in our LogFile object props
Logfile.ReadLastRecord("c:\A test.txt")
'--- And simply Read values from the objects properties
Print Logfile.account
Print Logfile.password
Print Logfile.UID
Print Logfile.GID
Print Logfile.directory
Print Logfile.shell
Print Logfile.GECOS.fullname
Print Logfile.GECOS.office
Print Logfile.GECOS.extension
Print Logfile.GECOS.homephone
Print Logfile.GECOS.email
Print ""
input "Press enter to exit:";a$
