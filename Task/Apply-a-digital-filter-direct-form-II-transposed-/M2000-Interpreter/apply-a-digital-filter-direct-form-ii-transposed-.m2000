module Checkit {
	locale 1033  ' use of dot for decimals
	window 12, window ' set 12pt for current display monitor
	form 60 ' 60 chars width, any for heigh
	Print $("0.00000000",12)    ' 12 chars per tab
	' all data push to end of stack, so we use the stack of values as FIFO
	Flush
	' a()
	Data 1, -2.77555756e-16, 3.33333333e-01, -1.85037171e-17
	' b()
	Data 0.16666667, 0.5, 0.5, 0.16666667
	' signal()
	Data -0.917843918645, 0.141984778794, 1.20536903482, 0.190286794412
	Data -0.662370894973, -1.00700480494, -0.404707073677, 0.800482325044
	Data 0.743500089861, 1.01090520172, 0.741527555207, 0.277841675195
	Data 0.400833448236, -0.2085993586, -0.172842103641, -0.134316096293
	Data 0.0259303398477, 0.490105989562, 0.549391221511, 0.9047198589
	Dim Base 0, a(4) as Double , b(4) as Double , signal(20) as Double
	Integer i
	For i = 0 To 3 : Read a(i) : Next i
	For i = 0 To 3 : Read b(i) : Next i
	For i = 0 To 19 : Read signal(i) : Next i
	dim resp()
	resp()=@Filter_a_b(&signal())
	k=each(resp())
	while k
		Print array(k),
		if pos>0 then if (k^+1) mod 5=0 then Print
	end while
	Function Filter_a_b(&c())
		Local Integer j, k
		Local Double tmp
		Local result(0 to len(c())-1) as Double
		For j = 0 To Len(c())-1
			tmp = 0
			For k = 0 To Len(b())-1
				If (j-k < 0) Then Continue For
				tmp += b(k) * c(j-k)
			Next k
			For k = 0 To Len(a())-1
				If (j-k < 0) Then Continue For
				tmp -= a(k) * result(j-k)
			Next k
			result(j) = tmp/a(0)
		Next j
		=result()
	End Function
}
Checkit
