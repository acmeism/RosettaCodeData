scope  # calculate 5^4^3^2 using Mike's Arbitrary Precision Math library
    import mapm; # explicit import needed for: Linux, Mac OS X, Windows and Solaris

    # returns a string containing 5^4^3^2 as calculated by mapm
    local constant calc5up4up3up2 := proc() is
            return mapm.xtostring( mapm.xround( mapm.xnumber( 5 ) ^ mapm.xnumber( 4 ^ ( 3 ^ 2 ) ) ) )
    end;

    # do the calculation with default precision
    local          p     := calc5up4up3up2();

    # find the number of digits before the point
    local          d     := size( p );
    local          point := "." in p;
    if point <> null then d := point - 1 fi;

    # redo the calculation with the actual number of required digits ( plus a bit extra )
    mapm.xdigits( d + 30 );
    p     := calc5up4up3up2();
    d     := size( p );
    point := "." in p;
    if point <> null then d := point - 1 fi;

    io.write( "5^4^3^2 has ", d, " digits: ", p[ 1 to 20 ], "...", p[ d - 19 to d ], "\n" )
end
