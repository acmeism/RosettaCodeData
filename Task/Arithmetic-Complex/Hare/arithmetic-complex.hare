use fmt;
use math::complex::{c128,addc128,mulc128,divc128,negc128,conjc128};

export fn main() void = {
	let x: c128 = (1.0, 1.0);
	let y: c128 = (3.14159265, 1.2);

	// addition
	let (re, im) = addc128(x, y);
	fmt::printfln("{} + {}i", re, im)!;
	// multiplication
	let (re, im) = mulc128(x, y);
	fmt::printfln("{} + {}i", re, im)!;
	// inversion
	let (re, im) = divc128((1.0, 0.0), x);
	fmt::printfln("{} + {}i", re, im)!;
	// negation
	let (re, im) = negc128(x);
	fmt::printfln("{} + {}i", re, im)!;
	// conjugate
	let (re, im) = conjc128(x);
	fmt::printfln("{} + {}i", re, im)!;
};
