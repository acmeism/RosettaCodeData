fp.cprint = ($z) -> fn.printf(%.3f%+.3fi%n, fn.creal($z), fn.cimag($z))

$a = fn.complex(1.5, 3)
$b = fn.complex(1.5, 1.5)

fn.print(a =\s)
fp.cprint($a)

fn.print(b =\s)
fp.cprint($b)

# Addition
fn.print(a + b =\s)
fp.cprint(fn.cadd($a, $b))

# Multiplication
fn.print(a * b =\s)
fp.cprint(fn.cmul($a, $b))

# Inversion
fn.print(1/a =\s)
fp.cprint(fn.cdiv(fn.complex(1, 0), $a))

# Negation
fn.print(-a =\s)
fp.cprint(fn.cinv($a))

# Conjugate
fn.print(conj(a) =\s)
fp.cprint(fn.conj($a))
