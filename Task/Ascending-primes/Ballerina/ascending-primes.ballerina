import ballerina/io;

function isPrime(int n) returns boolean {
    if n < 2 { return false; }
    if n % 2 == 0 { return n == 2; }
    if n % 3 == 0 { return n == 3; }
    int d = 5;
    while d * d <= n {
        if n % d == 0 { return false; }
        d += 2;
        if n % d == 0 { return false; }
        d += 4;
    }
    return true;
}

map<int> ascPrimesSet = {}; // value will always be 1 to simulate a set

function generate(int first, int cand, int digits) {
    if digits == 0 {
        if isPrime(cand) { ascPrimesSet[cand.toString()] = 1; }
        return;
    }
    foreach int i in first...9 {
        int next = cand * 10 + i;
        generate(i + 1, next, digits - 1);
    }
}

public function main() returns error? {
    foreach int digits in 1...9 { generate(1, 0, digits); }
    int[] ascPrimes = ascPrimesSet.keys().map(k => check int:fromString(k)).sort();
    io:println("There are ", ascPrimes.length(), " ascending primes, namely:");
    foreach int i in 0 ..< ascPrimes.length() {
        io:print(ascPrimes[i].toString().padStart(8), " ");
        if (i + 1) % 10 == 0 { io:println(); }
    }
}
