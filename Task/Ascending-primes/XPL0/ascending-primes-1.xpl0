func IsPrime(N);        \Return 'true' if N is prime
int  N, I;
[if N <= 2 then return N = 2;
if (N&1) = 0 then \even >2\ return false;
for I:= 3 to sqrt(N) do
    [if rem(N/I) = 0 then return false;
    I:= I+1;
    ];
return true;
];

func Ascending(N);      \Return 'true' if digits are ascending
int  N, D;
[N:= N/10;
D:= rem(0);
while N do
    [N:= N/10;
    if rem(0) >= D then return false;
    D:= rem(0);
    ];
return true;
];

int Cnt, N;
[Cnt:= 0;
Format(9, 0);
for N:= 2 to 123_456_789 do
    if Ascending(N) then
        if IsPrime(N) then
            [RlOut(0, float(N));
            Cnt:= Cnt+1;
            if rem(Cnt/10) = 0 then CrLf(0);
            ];
]
