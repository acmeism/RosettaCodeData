$ include "seed7_05.s7i";
  include "float.s7i";
  include "math.s7i";
  include "complex.s7i";

const func float: deg2rad (in float: degree) is
  return degree * PI / 180.0;

const func float: rad2deg (in float: rad) is
  return rad * 180.0 / PI;

const func float: meanAngle (in array float: degrees) is func
  result
    var float: mean is 0.0;
  local
    var float: degree is 0.0;
    var complex: sum is complex.value;
  begin
    for degree range degrees do
      sum +:= polar(1.0, deg2rad(degree));
    end for;
    mean := rad2deg(arg(sum / complex conv length(degrees)));
  end func;

const proc: main is func
  begin
    writeln(meanAngle([] (350.0, 10.0)) digits 4);
    writeln(meanAngle([] (90.0, 180.0, 270.0, 360.0)) digits 4);
    writeln(meanAngle([] (10.0, 20.0, 30.0)) digits 4);
  end func;
