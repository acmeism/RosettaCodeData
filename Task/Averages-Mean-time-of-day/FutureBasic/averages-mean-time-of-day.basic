//
// Averages/Mean time of day
// FutureBasic 7.0.34, August 2025 R.W
//
_angles = 1    //tag for MDA array

// Our test data times
CFStringRef tm(4) = {@"Times",@"23:00:17", @"23:40:20", @"00:12:45", @"00:17:19"}

// get average of angle sum
local fn MeanAngle( tag as Int ) as double
  long count
  double sinSum, cosSum
  count = mda_count tag    //count total including zeroeth element
  sinSum = 0.0: cosSum = 0.0
  for long i = 1 to count - 1  //remove zero
    sinSum += sin(mda tag(i) * PI / 180.0)
    cosSum += cos(mda tag(i) * PI / 180.0)
  next
end fn = fn atan2(sinSum / count, cosSum / count) * 180.0 / PI

// Get seconds from time t format = "hh:mm:ss"
local fn timeToSecs(t As CFStringRef) as Int
  Int hours, mins, secs
  hours = IntVal(Left(t, 2))
  mins =  IntVal(Mid(t, 3, 2))
  secs =  IntVal(Right(t, 2))
end fn = 3600 * hours + 60 * mins + secs

// 1 second = 360/(24 * 3600) = 1/240th of a degree
local fn timeToDegrees(t as CFStringRef) as Double
  Int secs
  secs = fn timeToSecs(t)
end fn = secs/240.0

// convert degrees to time string
local fn degreesToTime(d As Double) as CFStringRef
  Int hours, mins, secs
  CFStringRef result,h,m,s, tmp
  result = @"":h=@"":m=@"":s=@"":tmp = @""
  If d < 0 Then d = d + 360.0
  secs  = d * 240.0
  hours = fix(secs / 3600)
  tmp = mid(str(hours),1)
  if hours < 10 then h = concat(@"0",tmp) else h = tmp
  mins = secs % 3600
  secs = mins % 60
  tmp = mid(str(secs),1)
  if secs < 10 then s = concat(@"0",tmp) else s = tmp
  mins = fix(mins / 60)
  tmp = mid(str(mins),1)
  if mins < 10 then m = concat(@"0",tmp)   else m = tmp
  result = concat(result,h,@":",m,@":",s)
end fn = result


window 1

// load MDA array with time to degrees
// from test data
for Int x = 1 to 4
  mda _angles(x) = fn timeToDegrees(tm(x))
next x

double mean
mean = fn meanAngle(_angles)
print
print " Average time is: "; fn degreesToTime(mean)

handleEvents
