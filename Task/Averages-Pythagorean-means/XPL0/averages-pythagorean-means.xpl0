include c:\cxpl\codes;

func real Power(X, Y);          \X raised to the Y power
real X, Y;                      \ (from StdLib.xpl)
return Exp(Y * Ln(X));

int  N, Order;
real R, A, A1, G, G1, H, H1;
[A1:= 0.0;  G1:= 1.0;  H1:= 0.0;
Order:= true;
for N:= 1 to 10 do
        [R:= float(N);          \convert integer N to real R
        A1:= A1 + R;
        A:= A1/R;               \arithmetic mean
        G1:= G1 * R;
        G:= Power(G1, 1.0/R);   \geometric mean (Nth root of G1)
        if G>A then Order:= false;
        H1:= H1 + 1.0/R;
        H:= R/H1;               \harmonic mean
        if H>G then Order:= false;
        ];
RlOut(0, A); CrLf(0);
RlOut(0, G); CrLf(0);
RlOut(0, H); CrLf(0);
if not Order then Text(0, "NOT ");
Text(0, "ALWAYS DECREASING ORDER
");
]
