Const PI = 4 * Atn(1)
Const TAU = 8 * Atn(1)

Type Punto
    x As Integer
    y As Integer
End Type

Sub InitSquares(squares() As Integer, nsteps As Integer)
    For i As Integer = 0 To nsteps - 1
        squares(i) = i * i
    Next
End Sub

Sub BabylonianSpiral(points() As Punto, nsteps As Integer)
    Dim As Integer squares(nsteps)
    InitSquares(squares(), nsteps)

    points(0).x = 0 : points(0).y = 0
    points(1).x = 0 : points(1).y = 1

    Dim As Integer norm = 1, i, j, k, a, b
    Dim As Double theta, value, minvalue
    Dim As Punto minimum

    For paso As Integer = 0 To nsteps - 3
        Dim As Punto prev = points(paso + 1)
        theta = Atan2(prev.y, prev.x)

        Dim As Integer ncandidates = 0
        Dim As Punto candidates(100)

        Do
            norm += 1
            For i = 0 To nsteps - 1
                a = squares(i)
                If a > norm / 2 Then Exit For
                For j = Int(Sqr(norm)) + 1 To 0 Step -1
                    If j < 0 Then Exit For
                    b = squares(j)
                    If a + b < norm Then Exit For
                    If a + b = norm Then
                        Dim As Punto next_points(0 To 7)
                        next_points(0).x = i  : next_points(0).y = j
                        next_points(1).x = -i : next_points(1).y = j
                        next_points(2).x = i  : next_points(2).y = -j
                        next_points(3).x = -i : next_points(3).y = -j
                        next_points(4).x = j  : next_points(4).y = i
                        next_points(5).x = -j : next_points(5).y = i
                        next_points(6).x = j  : next_points(6).y = -i
                        next_points(7).x = -j : next_points(7).y = -i

                        For k = 0 To 7
                            candidates(ncandidates) = next_points(k)
                            ncandidates += 1
                        Next
                    End If
                Next
            Next
        Loop While ncandidates = 0

        minvalue = TAU
        For k = 0 To ncandidates - 1
            value = (theta - Atan2(candidates(k).y, candidates(k).x) + TAU)
            value = value - Int(value / TAU) * TAU
            If value < minvalue Then
                minvalue = value
                minimum = candidates(k)
            End If
        Next

        points(paso + 2) = minimum
    Next

    For i = 0 To nsteps - 2
        points(i + 1).x = points(i).x + points(i + 1).x
        points(i + 1).y = points(i).y + points(i + 1).y
    Next
End Sub

' Main program
Dim As Integer nsteps = 40
Dim As Punto points(0 To nsteps - 1)
BabylonianSpiral(points(), nsteps)

Print !"The first 40 points of the Babylonian spiral are:\n"
For i As Integer = 0 To nsteps - 1
    Print Using "(###_,###) "; points(i).x; points(i).y;
    If (i + 1) Mod 10 = 0 Then Print
Next

Sleep
