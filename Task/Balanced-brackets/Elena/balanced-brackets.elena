#define system.
#define system'routines.
#define extensions.

#symbol randomBrackets =
{
    new : aLength
        = (0 == aLength)
            ? [ emptyLiteralValue ]
            ! [
                #var aBrackets :=
                    Array new &length:(aLength int) set &every: (&index:i) [ #91 ]
                    +
                    Array new &length:(aLength int) set &every: (&index:i)[ #93 ].

                aBrackets randomize:(aLength * 2).

                ^ aBrackets summarize:(String new) literal.
            ].
}.

#class(extension)op
{
    #method isBalanced
    [
        #var aCounter := Integer new:0.

        self seek &each:aChar [ (aCounter += (aChar => #91 ? [ 1 ] #93 ? [ -1 ])) < 0 ].

        ^ (0 == aCounter).
    ]
}

#symbol program =
[
    0 to:9 &doEach: (:aLength)
    [
        #var anStr := randomBrackets new:aLength.

        console writeLine:"""":anStr:"""":((anStr isBalanced) => true ? [ " is balanced" ] false ? [ " is not balanced" ]).
    ].

    console readChar.
].
