go =>

  N = 1000,
  Fib = [fib(I) : I in 1..N],
  check_benford(Fib),
  nl.

% Check a list of numbers for Benford's law
check_benford(L) =>
  Len = L.len,
  println(len=Len),
  Count = [F[1].to_integer() : Num in L, F=Num.to_string()].occurrences(),
  P = new_map([I=D/Len : I=D in Count]),
  println("Benford (percent):"),
  foreach(D in 1..9)
    B = benford(D)*100,
    PI = P.get(D,0)*100,
    Diff = abs(PI - B),
    printf("%d: count=%5d observed: %0.2f%% Benford: %0.2f%% diff=%0.3f\n", D,Count.get(D,0),PI,B,Diff)
  end,
  nl.

benford(D) = log10(1+1/D).

% create an occurrences map of a list
occurrences(List) = Map =>
  Map = new_map(),
  foreach(E in List)
     Map.put(E, cond(Map.has_key(E),Map.get(E)+1,1))
  end.
