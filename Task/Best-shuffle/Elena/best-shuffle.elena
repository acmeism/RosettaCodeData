#define system.
#define system'routines.
#define extensions.

#class(extension)op
{
    #method shuffled
    [
        #var anOriginal := self toArray.
        #var aShuffled := self toArray.

        0 to:(anOriginal length - 1) &doEach: (:i)
        [
            0 to:(anOriginal length - 1) &doEach: (:j)
            [
                ((i != j)and:[anOriginal@i != (aShuffled@j)]and:[anOriginal@j != (aShuffled@i)]) ?
                [
                    aShuffled exchange:i:j.
                ].
            ].
        ].

        ^ aShuffled summarize:(String new) literal.
    ]

    #method score : anOriginalText
    [
        #var aShuffled := self toArray.
        #var anOriginal := anOriginalText toArray.
        #var aScore := Integer new.

        0 to:(anOriginal length - 1) &doEach: (:i)
            [ ((anOriginal @ i) == (aShuffled @ i)) ? [ aScore += 1. ]. ].

        ^ aScore value.
    ]
}

#symbol program =
[
    ("abracadabra", "seesaw", "grrrrrr", "pop", "up", "a") run &each: aWord
    [
        #var aShuffled := aWord shuffled.

        console writeLine:"The best shuffle of ":aWord:" is ":aShuffled:"(":(aShuffled score:aWord):")".
    ].

    console readChar.
].
