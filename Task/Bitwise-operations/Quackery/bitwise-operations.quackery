  [ [] swap
    64 times
      [ 2 /mod
        number$ rot join swap ]
    drop
    echo$ cr ]                                   is echobin (   n -->   )

  [ 64 swap - rot64 ]                            is rrot64  (   n --> n )

  [ say "first integer:   " over       echobin
    say "second integer:  " dup        echobin
    say "bitwise AND:     " 2dup &     echobin
    say "bitwise OR:      " 2dup |     echobin
    say "bitwise XOR:     " 2dup ^     echobin
    say "bitwise NOT:     " over ~     echobin
    say "bitwise LSHIFT:  " 2dup <<    echobin
    say "bitwise RSHIFT:  " 2dup >>    echobin
    say "bitwise LROTATE: " 2dup rot64 echobin
    say "bitwise RROTATE: "     rrot64 echobin ] is task    ( n n -->   )

hex FFFFF hex F task
