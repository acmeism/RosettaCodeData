# only works with ascii strings
#
func is_prefix &needle$[] pos .
   pos -= 1
   for i to len needle$[] - pos
      if needle$[i] <> needle$[pos + i] : return 0
   .
   return 1
.
func suffix_size &needle$[] pos .
   i = pos
   j = len needle$[]
   while i >= 1 and needle$[i] = needle$[j]
      i -= 1
      j -= 1
      size += 1
   .
   return size
.
proc mk_good_tbl &needle$[] &tbl[] .
   nlen = len needle$[]
   len tbl[] nlen
   lastpre = nlen + 1
   for i = nlen downto 1
      if is_prefix needle$[] i = 1 : lastpre = i
      tbl[nlen - i + 1] = lastpre - i + nlen
   .
   for i to nlen - 1
      size = suffix_size needle$[] i
      tbl[size + 1] = nlen - i + size
   .
.
proc mk_bad_tbl &needle$[] &tbl[] .
   len tbl[] 128
   for i to 128 : tbl[i] = len needle$[]
   for i to len needle$[] - 1
      tbl[strcode needle$[i]] = len needle$[] - i
   .
.
func[] find hayst$ needle$ .
   if needle$ = "" : return [ ]
   needle$[] = strchars needle$
   hayst$[] = strchars hayst$
   mk_bad_tbl needle$[] bad_tbl[]
   mk_good_tbl needle$[] good_tbl[]
   nelen = len needle$[]
   i = nelen
   while i <= len hayst$[]
      j = nelen
      while j > 1 and needle$[j] = hayst$[i]
         i -= 1
         j -= 1
      .
      if needle$[j] = hayst$[i]
         r[] &= i
         i += nelen
      else
         i += higher good_tbl[nelen - j + 1] bad_tbl[strcode hayst$[i]]
      .
   .
   return r[]
.
texts$[] = [ "GCTAGCTCTACGAGTCTA" "GGCTATAATGCGTA" "there would have been a time for such a word" "needle need noodle needle" "alfalfa" ]
pat$[] = [ "TCTA" "TAATAAA" "word" "needle" "alfa" ]
for i to len texts$[]
   print pat$[i] & " ? " & texts$[i] & " -> " & find texts$[i] pat$[i]
.
