\\ Brownian tree v.#4. Translated from PureBasic
\\ 3/8/2016, upgraded 11/27/16 aev
\\ Where: size - size of a square matrix; lim - limit of testing dots;
\\        fn - file name (fn=""-only plot, fn!=""-only writing file)..
\\ s=1/2(random seed/seed in the center); p=0..n (level of the "deep" checking).
BrownianTree4(size,lim, fn="",s=1,p=0)={
  my(Myx=matrix(size,size),sz=size-3,x,y);
  \\ seed s=1 for BTPB1, s=2 for BTPB2, BTPB3
  if(s==1,x=random(sz); y=random(sz), x=sz\2; y=sz\2); Myx[y,x]=1;
  print(" *** BT4 SEED: ",x,"/",y);
  for(i=1,lim,
    if(!(i==1&&s==2), x=random(sz)+1; y=random(sz)+1);
    while(insm(Myx,x,y,1)&&
        (Myx[y+1,x+1]+Myx[y+1,x]+Myx[y+1,x-1]+Myx[y,x+1]+
         Myx[y-1,x-1]+Myx[y,x-1]+Myx[y-1,x]+Myx[y-1,x+1])==0,
      x+=random(3)-1; y+=random(3)-1;
      \\ p=0 for BTPB1, BTPB2; p=5 for BTPB3
      if(!insm(Myx,x,y,p), x=random(sz)+1; y=random(sz)+1;);
    );\\wend
    Myx[y,x]=1;
  );\\fend i
  if(fn=="", plotmat(Myx), wrtmat(Myx, fn));
}
\\ Executing 1 or 2 lines below:

BrownianTree4(200,4000);        \\BTPB1.png

{BrownianTree4(200,4000,"c:\\pariData\\BTPB1.dat");
plotff("c:\\pariData\\BTPB1.dat");}   \\BTPB1.png

BrownianTree4(200,4000,,2);     \\BTPB2.png

{BrownianTree4(200,4000,"c:\\pariData\\BTPB2.dat",2);
plotff("c:\\pariData\\BTPB2.dat");}   \\BTPB2.png

BrownianTree4(200,4000,,2,5);   \\BTPB3.png

{BrownianTree4(200,4000,"c:\\pariData\\BTPB3.dat",2,5);
plotff("c:\\pariData\\BTPB3.dat");}   \\BTPB3.png
