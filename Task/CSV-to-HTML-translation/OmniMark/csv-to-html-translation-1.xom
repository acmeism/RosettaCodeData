global switch thead initial {true}
global switch tbody-first initial {true}

define function process-tr (value stream line) as
  do when thead
    output '<thead>%n<tr><th>'
  else when tbody-first
    output '</thead>%n'
    output '<tbody>%n<tr><td>'
    deactivate tbody-first
  else
    output '<tr><td>'
  done
  repeat scan line
    match ',' any-text => char
      output '</th><th>' when thead
      output '</td><td>' unless thead
      using group ents submit char
    match any-text => char
      using group ents submit char
  again
  output '</td>' unless thead
  output '</th>' when thead
  output '</tr>'
  deactivate thead


process-start
  output '<?xml version="1.0" encoding="UTF-8"?>%n' ||
         '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">%n' ||
         '<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">%n' ||
         '<head>%n' ||
         '<title>Monty Pythonâ€™s Life of Brian (1979). Scene 20 (extract).</title>%n' ||
         '<meta name="description" content="Rosetta Code.  Task: CSV to HTML translation (extra credit)" />%n' ||
         '<meta name="keywords" content="OmniMark" />%n' ||
         '<meta name="author" content="Kennypete" />%n' ||
         '<style type="text/css">%nth { background-color: gold }%n</style>%n' ||
         '</head>%n' ||
         '<body>%n' ||
         '<table border=%"1%">%n'

process-end
  output '</tbody>%n' ||
         '</table>%n' ||
         '</body>%n' ||
         '</html>%n'
         ; Output validates to XHTML 1.0 - https://validator.w3.org/check

process
  local stream s
  set s to "Character,Speech%n" ||
           "The multitude,The messiah! Show us the messiah!%n" ||
           "Brians mother,<angry>Now you listen here! He's not the messiah; he's a very naughty boy! Now go away!</angry>%n" ||
           "The multitude,Who are you?%n" ||
           "Brians mother,I'm his mother; that's who!%n" ||
           "The multitude,Behold his mother! Behold his mother!%n"
  using group line submit s

group ents

  find '<'
    output '&lt;'

  find '>'
    output '&gt;'

  find "'"
    output '&apos;'

group line

  find line-start any-text+ => line
    process-tr(line)
