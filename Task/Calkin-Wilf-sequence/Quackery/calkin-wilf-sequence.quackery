  [ $ "bigrat.qky" loadfile ] now!

  [ ' [ [ 1 1 ] ]
    swap 1 - times
      [ dup -1 peek do
        2dup proper 2drop
        2 * n->v
        2swap -v 1 n->v v+ v+
        1/v join nested join ] ] is calkin-wilf (   n --> [ )

  [ 1 & ]                        is odd         (   n --> b )

  [ dup size odd not if
      [ -1 split do
        1 - join
        1 join ] ]               is oddcf       (   [ --> [ )

  [ 0 swap
    reverse witheach
      [ i odd iff
          << done
        dup dip <<
        bit 1 - | ] ]            is rl->n       (   [ --> n )

  [ cf oddcf rl->n ]             is cw-term     ( n/d --> n )

  20 calkin-wilf
  witheach
    [ do vulgar$ echo$ sp ]
  cr cr
  83116 51639 cw-term echo
