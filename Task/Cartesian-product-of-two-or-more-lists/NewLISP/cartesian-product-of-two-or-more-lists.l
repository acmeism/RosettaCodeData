(define (cartesian-product lists)
  (if (null? lists)
    '(())
    (let (subproduct (cartesian-product (rest lists)))
      (apply append
        (map
          (fn (x) (map (curry cons x) subproduct))
          (first lists))))))

(cartesian-product '((1776 1789) (7 12) (4 14 23) (0 1)))

((1776 7 4 0) (1776 7 4 1) (1776 7 14 0) (1776 7 14 1) (1776 7 23 0)
 (1776 7 231) (1776 12 4 0) (1776 12 4 1) (1776 12 14 0) (1776 12 14 1)
 (1776 12 23 0) (1776 12 23 1) (1789 7 4 0) (1789 7 4 1) (1789 7 14 0)
 (1789 7 14 1) (1789 7 23 0) (1789 7 23 1) (1789 12 4 0) (1789 12 4 1)
 (1789 12 14 0) (1789 12 14 1) (1789 12 23 0) (1789 12 23 1))


(cartesian-product '((1 2 3) (30) (500 100)))

((1 30 500) (1 30 100) (2 30 500) (2 30 100) (3 30 500) (3 30 100))


(cartesian-product '((1 2 3) () (500 100)))

()
