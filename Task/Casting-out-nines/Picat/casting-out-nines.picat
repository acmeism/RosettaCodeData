go =>
  Base10 = 10,
  foreach(N in [2,6])
    casting_out_nines(Base10,N)
  end,
  nl,
  Base16 = 16,
  foreach(N in [2,6])
    casting_out_nines(Base16,N)
  end,
  nl.

casting_out_nines(Base,N) =>
  println([base=Base,n=N]),
  C1 = 0,
  C2 = 0,
  Ks = [],
  LimitN = 3,
  foreach(K in 1..Base**N-1)
    C1 := C1 + 1,
    if K mod (Base-1) == (K*K) mod (Base-1) then
      C2 := C2+1,
      if N <= LimitN then
         Ks := Ks ++ [K]
      end
    end
  end,
  if C2 <= 100 then
    println(ks=Ks)
  end,
  printf("Trying %d numbers instead of %d numbers saves %2.3f%%\n", C2, C1, 100 - ((C2/C1)*100)),
  nl.
