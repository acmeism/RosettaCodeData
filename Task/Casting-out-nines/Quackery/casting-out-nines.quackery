  [ true unrot swap
    witheach
      [ over find
        over found not if
          [ dip not
            conclude ] ]
    drop ]                is subset ( [ [ --> [ )

  [ abs 0 swap
    [ 10 /mod rot +
      dup 8 > if [ 9 - ]
      swap dup 0 = until ]
   drop ]                  is co9   ( n --> n   )

  say "Part 1: Examples from Dr Math page." cr cr
  say "6395 1259 + = " 6395 1259 + echo cr
  say "6395 co9    = " 6395 co9    echo cr
  say "1259 co9    = " 1259 co9    echo cr
  say "5 8 + co9   = " 5 8 + co9   echo cr
  say "7654 co9    = " 7654 co9    echo cr cr

  say "6395 1259 * = " 6395 1259 * echo cr
  say "6395 co9    = " 6395 co9    echo cr
  say "1259 co9    = " 1259 co9    echo cr
  say "5 8 * co9   = " 5 8 * co9   echo cr
  say "8051305 co9 = " 7654 co9    echo cr cr

  say "Part 2: Kaprekar numbers." cr cr

  say "Kaprekar numbers less than one hundred:    "
  []
  100 times
    [ i^ kaprekar if
      [ i^ join ] ]
  dup echo cr
  say '0...99 with property "n co9 n 2 ** co9 =": '
  []
  100 times
    [ i^ co9
      i^ 2 ** co9 = if
        [ i^ join ] ]
  dup echo cr
  say "Is the former a subset of the latter? "
  subset iff [ say "Yes." ] else [ say "No." ] cr cr

  say "Part 3: Same as Part 2, but base 17." cr cr

  say "Kaprekar (base 17) numbers less than one hundred: "
  17 base put
  []
  100 times
    [ i^ kaprekar if
      [ i^ join ] ]
  base release
  dup echo cr
  say '0...99 with property "n 16 mod n 2 ** 16 mod =":  '
  []
  100 times
    [ i^ 16 mod
      i^ 2 ** 16 mod = if
        [ i^ join ] ]
  dup echo cr
  say "Is the former a subset of the latter? "
  subset iff [ say "Yes." ] else [ say "No." ]
