class Cholesky {
  function : Main(args : String[]) ~ Nil {
    n := 3;
    m1 := [25.0, 15.0, -5.0, 15.0, 18.0, 0.0, -5.0, 0.0, 11.0];
    c1 := Cholesky(m1, n);
    ShowMatrix(c1, n);

    IO.Console->PrintLine();

    n := 4;
    m2 := [18.0, 22.0,  54.0,  42.0, 22.0, 70.0, 86.0, 62.0,
      54.0, 86.0, 174.0, 134.0, 42.0, 62.0, 134.0, 106.0];
    c2 := Cholesky(m2, n);
    ShowMatrix(c2, n);
  }

  function : ShowMatrix(A : Float[], n : Int) ~ Nil {
    for (i := 0; i < n; i+=1;) {
      for (j := 0; j < n; j+=1;) {
        IO.Console->Print(A[i * n + j])->Print('\t');
      };
      IO.Console->PrintLine();
    };
  }

  function : Cholesky(A : Float[], n : Int) ~ Float[] {
    L := Float->New[n * n];

    for (i := 0; i < n; i+=1;) {
      for (j := 0; j < (i+1); j+=1;) {
        s := 0.0;
        for (k := 0; k < j; k+=1;) {
          s += L[i * n + k] * L[j * n + k];
        };
        L[i * n + j] := (i = j) ?
          (A[i * n + i] - s)->SquareRoot() :
          (1.0 / L[j * n + j] * (A[i * n + j] - s));
      };
    };

    return L;
  }
}
