fun chowla = int by int n
  int sum = 0
  int j = 0
  for int i = 2; i * i <= n; i++ do
    if n % i == 0 do sum += i + when(i == (j = n / i), 0, j) end
  end
  return sum
end
fun sieve = List by int limit
  List c = logic[].with(limit)
  for int i = 3; i * 3 < limit; i += 2
    if c[i] or chowla(i) != 0 do continue end
    for int j = 3 * i; j < limit; j += 2 * i do c[j] = true end
  end
  return c
end
# find and display (1 per line) for the 1st 37 integers
for int i = 1; i <= 37; i++ do writeLine("chowla(" + i + ") = " + chowla(i)) end
int count = 1
int limit = 10000000
int power = 100
List c = sieve(limit)
for int i = 3; i < limit; i += 2
  if not c[i] do count++ end
  if i == power - 1
    writeLine("Count of primes up to " + power + " = " + count)
    power *= 10
  end
end
count = 0
limit = 35000000
int k = 2
int kk = 3
int p
for int i = 2; ; i++
  if (p = k * kk) > limit do break end
  if chowla(p) == p - 1
    writeLine(p + " is a number that is perfect")
    count++
  end
  k = kk + 1
  kk += k
end
writeLine("There are " + count + " perfect numbers <= 35,000,000")
