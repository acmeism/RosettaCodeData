drawCircles := proc(x1, y1, x2, y2, r, $)
	local c1, c2, p1, p2;
	use geometry in
		if x1 = x2 and y1 = y2 then
			if r = 0 then
				printf("The circle is a point at [%a, %a].\n", x1, y1);
			else
				printf("The two points are the same. Infinite circles can be drawn.\n");
			end if;
		elif evalf(distance(point(A, x1, y1), point(B, x2, y2))) >r*2 then
				printf("The two points are too far apart. No circles can be drawn.\n");
		else
			circle(P1Cir, [A, r]);#make a circle around the first point
			circle(P2Cir, [B, r]);#make a circle around the second point
			intersection('i', P1Cir, P2Cir);
			#the intersection of the above 2 circles should give you the centers of the two circles you need to draw
			c1 := plottools[circle](coordinates(`if`(type(i, list), i[1], i)), r);#make the first circle
			c2 := plottools[circle](coordinates(`if`(type(i, list), i[2], i)), r);#make the second circle
			plots[display](c1, c2, scaling = constrained);#draw
		end if;
	end use;
end proc:

drawCircles(0.1234, 0.9876, 0.8765, 0.2345, 2.0);
drawCircles(0.0000, 2.0000, 0.0000, 0.0000, 1.0);
drawCircles(0.1234, 0.9876, 0.1234, 0.9876, 2.0);
drawCircles(0.1234, 0.9876, 0.8765, 0.2345, 0.5);
drawCircles(0.1234, 0.9876, 0.1234, 0.9876, 0.0);
