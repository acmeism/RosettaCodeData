V largest = [0]

F iscolorful(n)
   I n C 0.<10
      R 1B
   V dig = String(n).map(c -> Int(c))
   I 1 C dig | 0 C dig | dig.len > Set(dig).len
      R 0B
   V products = Array(Set(dig))
   L(i) 0 .< dig.len
      L(j) i + 2 .. dig.len
         V p = product(dig[i .< j])
         I p C products
            R 0B
         products.append(p)

   :largest[0] = max(n, :largest[0])
   R 1B

print(‘Colorful numbers for 1:25, 26:50, 51:75, and 76:100:’)
L(i) (1.<101).step(25)
   L(j) 25
      I iscolorful(i + j)
         print(f:‘{commatize(i + j): 5}’, end' ‘’)
   print()

V csum = 0
L(i) 8
   V j = I i == 0 {0} E 10 ^ i
   V k = 10 ^ (i + 1) - 1
   V n = sum((j .. k).map(x -> Int(iscolorful(x))))
   csum += n
   print(‘The count of colorful numbers between ’j‘ and ’k‘ is ’n‘.’)

print(‘The largest possible colorful number is ’largest[0]‘.’)
print(‘The total number of colorful numbers is ’csum‘.’)
