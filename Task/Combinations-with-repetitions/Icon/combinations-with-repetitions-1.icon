# generate all combinations of length n from list L,
# including repetitions
procedure combinations_repetitions (L, n)
  if n = 0
    then suspend [] # if reach 0, then return an empty list
    else if *L > 0
      then {
        # keep the first element
        item := L[1]
        # get all of length n in remaining list
        every suspend (combinations_repetitions (L[2:0], n))
        # get all of length n-1 in remaining list
        # and add kept element to make list of size n
        every i := combinations_repetitions (L, n-1) do
          suspend [item] ||| i
      }
end
