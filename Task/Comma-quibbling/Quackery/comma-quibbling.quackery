[ swap join join ]                    is glue     ( [ [ [ --> [ )

[ [ dup size
    dup 0 = iff
      [ 2drop [] ] done
    dup 1 = iff
      [ drop unpack ] done
    2 = iff
      [ unpack $ ' and ' glue ] done
    behead swap recurse $ ', ' glue ]
  $ '{' swap join $ '}' join ]         is quibble ( [     --> $ )

[] quibble echo$ cr
$ 'ABC' nest$ quibble echo$ cr
$ 'ABC DEF' nest$ quibble echo$ cr
$ 'ABC DEF G H' nest$ quibble echo$
