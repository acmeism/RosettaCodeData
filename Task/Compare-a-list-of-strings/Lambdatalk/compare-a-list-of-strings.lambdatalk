{def allsame
 {def allsame.r
  {lambda {:s :n :i}
   {if {= :i :n}
    then true
    else {if {not {W.equal? {A.get :i :s} {A.get 0 :s}}}
    then false
    else {allsame.r :s :n {+ :i 1}} }}}}
 {lambda {:s}
  {allsame.r :s {- {A.length :s} 1} 0} }}
-> allsame

{def strict_order
 {def strict_order.r
  {lambda {:s :n :i}
   {if {= :i :n}
    then true
    else {if {W.inforequal? {A.get :i :s} {A.get {- :i 1} :s}}
    then false
    else {strict_order.r :s :n {+ :i 1}}}} }}
 {lambda {:s}
  {if {= {A.length :s} 1}
   then true
   else {strict_order.r :s {A.length :s} 1} }}}
-> strict_order

{S.map allsame
       {A.new AA BB CC}
       {A.new AA AA AA}
       {A.new AA CC BB}
       {A.new AA ACB BB CC}
       {A.new single}
} -> false true false false true

{S.map strict_order
       {A.new AA BB CC}
       {A.new AA AA AA}
       {A.new AA CC BB}
       {A.new AA ACB BB CC}
       {A.new single}
} -> true false false true true
