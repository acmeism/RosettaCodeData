/* NetRexx */
options replace format comments java crossref symbols nobinary

runSample(arg)
return

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method isEqual(list = Rexx[]) public static binary returns boolean
  state = boolean (1 == 1) -- default to true
  loop ix = 1 while ix < list.length
    state = list[ix - 1] == list[ix]
    if \state then leave ix
    end ix
  return state

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method isAscending(list = Rexx[]) public static binary returns boolean
  state = boolean (1 == 1) -- default to true
  loop ix = 1 while ix < list.length
    state = list[ix - 1] << list[ix]
    if \state then leave ix
    end ix
  return state

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method runSample(arg) private static

  samples = [ -
      ['AA', 'BB', 'CC'] -
    , ['AA', 'AA', 'AA'] -
    , ['AA', 'CC', 'BB'] -
    , ['single_element'] -
    ]

  loop ix = 0 while ix < samples.length
    sample = samples[ix]
    if isEqual(sample)     then eq  = 'elements are identical'
                           else eq  = 'elements are not identical'
    if isAscending(sample) then asc = 'elements are in ascending order'
                           else asc = 'elements are not in ascending order'
    say 'List:' Arrays.toString(sample)
    say '  'eq
    say '  'asc
    end ix
  return
