require "uchar"
require "gchar"
local fmt = require "fmt"

local function print_counts(s1, s2, c1, c2)
   local l1 = (c1 > c2) ? {s1, c1} : {s2, c2}
   local l2 = (c1 > c2) ? {s2, c2} : {s1, c1}
   print($"{l1[1]} : length {l1[2]}")
   print($"{l2[1]} : length {l2[2]}\n")
end

local function codepoint_counts(s1, s2)
   local c1 = uchar.of(s1):len()
   local c2 = uchar.of(s2):len()
   print("Comparison by codepoints:")
   print_counts(s1, s2, c1, c2)
end

local function byte_counts(s1, s2)
   local c1 = #s1
   local c2 = #s2
   print("Comparison by bytes:")
   print_counts(s1, s2, c1, c2)
end

local function grapheme_counts(s1, s2)
   local c1 = gchar.of(s1):len()
   local c2 = gchar.of(s2):len()
   print("Comparison by grapheme clusters:")
   print_counts(s1, s2, c1, c2)
end

for { {"nino", "niño"}, {"👨‍👩‍👧‍👦", "🤔🇺🇸"} } as pair do
    codepoint_counts(pair[1], pair[2])
    byte_counts(pair[1], pair[2])
    grapheme_counts(pair[1], pair[2])
end

local list = {"abcd", "123456789", "abcdef", "1234567"}
print("Sorting in descending order by length in codepoints:")
fmt.write("%s -> ", fmt.swrite(list))
list:sort(|a, b| -> utf8.len(a) > utf8.len(b))
fmt.lprint(list)
