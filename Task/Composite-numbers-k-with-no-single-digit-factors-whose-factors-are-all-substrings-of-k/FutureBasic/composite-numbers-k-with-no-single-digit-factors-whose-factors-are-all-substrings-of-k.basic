include "NSLog.incl"
_max  = 30000000
uint32 primes(_max / 16)
uint8  list(  _max / 16)

local fn sieve  //List primes via Sieve of Eratosthenes
  uint32 np, num, count = 0
  list(0) = 1

  for num = 3 to _max step 2
    if list(num >> 4) & bit((num & 15) >> 1) then continue
    primes(count) = num
    count++

    np = num * num
    while np < _max
      list(np >> 4) |= bit((np & 15) >> 1)
      np += num << 1
    wend

  next

end fn

local fn AisInB(a as uint32, b as uint32) as bool
  uint32 mag = 100
  while mag < a
    mag *= 10
  wend
  while a <= b
    if a == (b % mag) then exit fn = yes
    b /= 10
  wend
end fn = no

clear local fn factorsInSequence
  uint32 f = 3, num, n, count = 0

  for n = 11^2 to _max step 2

    if   (n mod 3 && n mod 5 && n mod 7) == 0 then continue  //next n
    f = 3 : num = n

    while primes(f)^2 < n
      if num % primes(f) then f++ : continue // not a factor--next f
      if fn AisInB( primes(f), n) == no then break // not in n--next n
      num /= primes(f)
      if (list(num >> 4) & bit((num & 15) >> 1)) == 0
        if fn AisInB(num, n)
          count ++
          nslog( @"%4d: %d", count, n )
          if count < 20 then break else exit fn //next n unless done
        end if
      end if
    wend

  next
end fn

nsLogSetTitle(@"Integers whose factors are substrings")
CFTimeInterval t : t = fn CACurrentMediaTime
fn sieve
nslog( @"\n  Sieve and list of primes built in %.3f sec.\n",(fn CACurrentMediaTime - t))
fn factorsInSequence
nslog( @"\n  Total runtime = %.3f sec.",(fn CACurrentMediaTime - t))

handleevents
