  [ witheach peek ]         is {peek}        (   { p --> x     )

  [ dip dup
      witheach [ peek dup ]
    drop ]                  is depack        (   { p --> *     )

  [ reverse
    witheach
      [ dip swap poke ] ]   is repack        (   * p --> {     )

  [ dup dip
      [ rot dip
        [ depack drop ] ]
    repack ]                is {poke}        ( x { p --> {     )

  [ this ]                  is null          (       --> [     )

  [ stack ]                 is {}.path       (       --> s     )
  protect {}.path

  [ stack ]                 is {}.struct     (       --> s     )
  protect {}.struct

  [ nextword dup
    $ "" = if
      [ $ "Unexpected end of struct."
        message put
        bail ] ]            is {}.checknext  (   [ $ --> [ $ $ )

  [ dup  $ "{" =
    over $ "}" = or
    swap $ "}struct" = or if
      [ $ "Name missing after }."
        message put
        bail ] ]            is {}.checkname  ( [ $ $ --> [ $   )

  [ nested
    namenest take
    join
    namenest put
    ' [ ' ]
    {}.path share nested join
    actiontable take
    1 stuff
    actiontable put ]       is {}.addpath    ( [ $ $ --> [ $   )

  [ nested
    namenest take
    join
    namenest put
    ' [ ' ]
    {}.struct share nested join
    actiontable take
    1 stuff
    actiontable put ]       is  {}.addstruct ( [ $ $ --> [ $   )

  [ {}.path take
    dup -1 peek
    1+
    swap -1 poke
    -1 join
    {}.path put
    [] {}.struct put ]      is {}.{          (   [ $ --> [ $   )

  [ {}.struct size 3 < if
      [ $ "Badly formed struct."
        message put bail ]
    trim {}.checknext
    dup {}.checkname
    {}.path take
    -1 split drop
    {}.path put
    {}.addpath
    {}.struct take
    {}.struct take
    swap nested join
    {}.struct put ]         is {}.}          (   [ $ --> [ $   )

  [ {}.path take
    dup -1 peek
    1+
    swap -1 poke
    {}.path put
    {}.addpath
    {}.struct take
    ' [ null ] join
    {}.struct put ]         is {}.name       (   [ $ --> [ $   )

  [ trim {}.checknext
    {}.struct size
    2 != if
      [ $ "Badly formed struct."
        message put
        bail ]
     {}.addstruct ]         is {}.}struct    (   [ $ --> [ $   )

  [ ' [ -1 ] {}.path put
    [] {}.struct put
    [ trim {}.checknext
      dup $ "{" = iff
        [ drop {}.{ ] again
      dup $ "}" = iff
        [ drop {}.} ] again
      dup $ "}struct" = iff
        [ drop {}.}struct ] done
      {}.name again ]
    {}.struct release
    {}.path release ]   builds struct{       (   [ $ --> [ $   )
