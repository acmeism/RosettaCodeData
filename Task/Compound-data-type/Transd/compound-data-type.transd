#lang transd

// If the Point type needs encapsulation and/or methods, it should be
// implemented as class. Otherwise, the named tuple will do.

class Point: {
    x: Double(), y: Double(),
    @init: (λ _x Double() _y Double() (= x _x) (= y _y)),
    @to-String: (λ ss StringStream() (textout to: ss
        "Point( x: " x "; y: " y " )"))
    // ... other methods can be defined here ...
}

MainModule: {
    Point2: typealias(Tuple<Double Double>()),
    _start: (λ
        (with pt Point(2.5 3.7)
            (lout "Class: " pt)
        )
        (with pt Point2(2.5 3.7)
            (lout "\nNamed tuple: " pt)
        )
    )
}
