defmodule Constrain do
  defp precalculate(range, condition) do
    for x <- range, y <- range, x*x + y*y in condition, do: {x,y}
  end

  def circle do
    range = -15..15
    all_points = precalculate(range, 10*10..15*15)
    IO.puts length(all_points)
    points = Enum.shuffle(all_points) |> Enum.take(100)
    Enum.each(-15..15, fn x ->
      IO.puts Enum.map(range, fn y -> if Enum.member?(points, {x,y}), do: "o ", else: "  " end)
    end)
  end
end

Constrain.circle
