  [ 0 31 of ]                is grid    (       --> [   )

  [ dup * ]                  is squared (     n --> n   )

  [ squared swap squared +
    10 squared 15 squared 1+
    within ]                 is inrange (   n n --> b   )

  [ 32 random 16 -
    32 random 16 -
    2dup inrange not while
    2drop again ]            is randxy  (       --> n n )

  [ 15 + swap 15 +
    dip [ 2dup peek  ]
    bit | unrot poke ]       is plot    ( [ n n --> [   )

  [ witheach
      [ 31 times
          [ dup
            i^ bit & iff
              [ $ "[]" ]
            else
              [ $ "  " ]
            echo$ ]
        drop
        cr ] ]               is draw    (     [ -->     )

  [ grid
    swap times
      [ randxy plot ]
    draw ]                   is circle  (     n -->     )

  100 circle
