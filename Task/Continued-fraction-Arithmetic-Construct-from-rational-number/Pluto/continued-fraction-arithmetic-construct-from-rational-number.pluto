require "rat"
require "math2"
local fmt = require "fmt"

local function to_cont_frac(r)
    local a = r:getNum()
    local b = r:getDen()
    local res = {}
    repeat
        res:insert(math.trunc(a/b))
        a, b  = b, math.fmod(a, b)
    until a == 1
    return res
end

local groups = {
    { {1, 2}, {3, 1}, {23, 8}, {13, 11}, {22, 7}, {-151, 77} },
    { {14142, 1e4}, {141421, 1e5}, {1414214, 1e6}, {14142136, 1e7} },
    { {31, 10}, {314, 100}, {3142, 1e3}, {31428, 1e4}, {314285, 1e5}, {3142857, 1e6},
      {31428571, 1e7}, {314285714,1e8} }
}

local lengths = { {4, 2}, {8, 8}, {9, 9} }
local headings = { "Examples ->", "Sqrt(2) ->", "Pi ->" }
local i = 1
for groups as group do
    print(headings[i])
    for group as pair do
        local l1 = lengths[i][1]
        local l2 = -lengths[i][2]
        fmt.write($"%{l1}d / %{l2}d = ", pair[1], pair[2])
        local r = rat.of(pair[1], pair[2])
        local res = to_cont_frac(r)
        fmt.tprint("%d", res, #res)
        print()
    end
    print()
    ++i
end
