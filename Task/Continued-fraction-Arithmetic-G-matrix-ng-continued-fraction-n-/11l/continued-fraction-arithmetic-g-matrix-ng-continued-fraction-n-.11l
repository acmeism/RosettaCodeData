T NG
   Int a1, a, b1, b
   F (a1, a, b1, b)
      .a1 = a1
      .a  = a
      .b1 = b1
      .b  = b

   F ingress(n)
      (.a, .a1) = (.a1, .a + .a1 * n)
      (.b, .b1) = (.b1, .b + .b1 * n)

   F needterm()
      R (.b == 0 | .b1 == 0) | !(.a I/ .b == .a1 I/ .b1)

   F egress()
      V n = .a I/ .b
      (.a, .b) = (.b, .a - .b * n)
      (.a1, .b1) = (.b1, .a1 - .b1 * n)
      R n

   F egress_done()
      I .needterm()
         (.a, .b) = (.a1, .b1)
      R .egress()

   F done()
      R .b == 0 & .b1 == 0

F r2cf(=n1, =n2)
   [Int] r
   L n2 != 0
      (n1, V t1_n2) = (n2, divmod(n1, n2))
      n2 = t1_n2[1]
      r [+]= t1_n2[0]
   R r

V data = [(‘[1;5,2] + 1/2’,      2,1,0,2, (13, 11)),
          (‘[3;7] + 1/2’,        2,1,0,2, (22,  7)),
          (‘[3;7] divided by 4’, 1,0,0,4, (22,  7))]

L(string, a1, a, b1, b, r) data
   print(‘#<20->’.format(string), end' ‘’)
   V op = NG(a1, a, b1, b)
   L(n) r2cf(r[0], r[1])
      I !op.needterm()
         print(‘ ’op.egress(), end' ‘’)
      op.ingress(n)
   L
      print(‘ ’op.egress_done(), end' ‘’)
      I op.done()
         L.break
   print()
