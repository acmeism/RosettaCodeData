module Convert_decimal_number_to_rational{
	Function Rational(numerator as decimal, denominator as decimal=1) {
		if denominator==0 then denominator=1
		while frac(numerator)<>0 {
			numerator*=10@
			denominator*=10@
		}
		sgn=Sgn(numerator)*Sgn(denominator)
		denominator<=abs(denominator)
		numerator<=abs(numerator)*sgn
		gcd1=lambda (a as decimal, b as decimal) -> {
			if a<b then swap a,b
			g=a mod b
			while g {a=b:b=g: g=a mod b}
			=abs(b)
		}
		gdcval=gcd1(abs(numerator), denominator)
		if gdcval<denominator and gdcval<>0 then
			denominator/=gdcval
			numerator/=gdcval
		end if
		=(numerator,denominator)
	}
	
	Print Rational(0.9054054)#str$(" / ")="4527027 / 5000000"  ' true
	Print Rational(0.518518)#str$(" / ")="259259 / 500000" ' true
	Print Rational(0.75)#str$(" / ")="3 / 4" ' true
}
Convert_decimal_number_to_rational
