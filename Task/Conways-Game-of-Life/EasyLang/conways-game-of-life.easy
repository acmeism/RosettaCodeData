# Game of life
#
n = 70
n += 1
subr init
  for r = 1 to n - 1
    for c = 1 to n - 1
      i = r * n + c + 1
      if randomf < 0.3
        f[i] = 1
      .
    .
  .
.
f = 100 / (n - 1)
subr show
  clear
  for r = 1 to n - 1
    for c = 1 to n - 1
      if f[r * n + c + 1] = 1
        move (c - 1) * f (r - 1) * f
        rect f * 0.9 f * 0.9
      .
    .
  .
.
subr update
  swap f[] p[]
  for r = 1 to n - 1
    sm = 0
    i = r * n + 1
    sr = p[i - n + 1] + p[i + 1] + p[i + n + 1]
    for c = 1 to n - 1
      i += 1
      sl = sm
      sm = sr
      sr = p[i - n + 1] + p[i + 1] + p[i + n + 1]
      s = sl + sm + sr
      if s = 3 or s = 4 and p[i] = 1
        f[i] = 1
      else
        f[i] = 0
      .
    .
  .
.
on timer
  call update
  call show
  timer 0.2
.
on mouse_down
  c = mouse_x div f
  r = mouse_y div f
  i = r * n + c + n + 2
  f[i] = 1 - f[i]
  call show
  timer 3
.
len f[] n * n + n + 1
len p[] n * n + n + 1
call init
timer 0
