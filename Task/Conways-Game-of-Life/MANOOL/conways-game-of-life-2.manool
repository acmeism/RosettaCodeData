{ {extern "manool.org.18/std/0.3/all"} in
: let { N = 40; M = 80 } in
: let { G = 99 } in
: let
  { Display =
    { proc { B } as
    : for { I = Range[N]$ } do
    : do Out.WriteLine[] after
    : for { J = Range[M]$ } do
      Out.Write[{if B[I; J] <> 0 then "*" else " "}]
    }
  }
  in
: var { B = {array N of: array M of 0} } in
  -- initialization
  B[19; 41] = 1
  B[20; 40] = 1
  B[21; 40] = 1
  B[22; 40] = 1
  B[22; 41] = 1
  B[22; 42] = 1
  B[22; 43] = 1
  B[19; 44] = 1
  -- end of initialization
  Out.WriteLine["Before:"]; Display[B]
  { repeat G do
    B =
    { array for { I = Range[N]$ } of
    : var { Up = (I - 1).Mod[N]; Down = (I + 1).Mod[N] } in
    : array for { J = Range[M]$ } of
    : var { Left = (J - 1).Mod[M]; Right = (J + 1).Mod[M] } in
    : var
      { Count =
        B[Up  ; Left ] +
        B[Up  ; J    ] +
        B[Up  ; Right] +
        B[I   ; Right] +
        B[Down; Right] +
        B[Down; J    ] +
        B[Down; Left ] +
        B[I   ; Left ]
      }
      in
    : if Count == 2 then B[I; J] else
    : if Count == 3 then 1 else
      0
    }
  }
  Out.WriteLine["After " G " generations:"]; Display[B]
}
