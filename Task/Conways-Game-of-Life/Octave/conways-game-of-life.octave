clear all
x=55;                 % Size of the Lattice (same as LAWE)

z(1:1:x^2)=0;         % Initialise the binary lattice
z_prime=z;            % prepare the z prime

idx=7*x+2;             % Origin
z(idx+4)=1;            % Populate the binary lattice with the Gosper Glider
z(idx+x+4)=1;
z(idx+1+4)=1;
z(idx+x+1+4)=1;

z(idx+14)=1;
z(idx+14+x)=1;
z(idx+14+x+x)=1;
z(idx+15+x+x+x)=1;
z(idx+15-x)=1;
z(idx+16-x-x)=1;
z(idx+16+x+x+x+x)=1;
z(idx+17-x-x)=1;
z(idx+17+x+x+x+x)=1;

z(idx+18+x)=1;
z(idx+19-x)=1;
z(idx+19+x+x+x)=1;
z(idx+20)=1;
z(idx+20+x)=1;
z(idx+20+x+x)=1;
z(idx+21+x)=1;

z(idx+24)=1;
z(idx+25)=1;
z(idx+24-x)=1;
z(idx+25-x)=1;
z(idx+24-x-x)=1;
z(idx+25-x-x)=1;
z(idx+26-x-x-x)=1;
z(idx+26+x)=1;
z(idx+28-x-x-x)=1;
z(idx+28+x)=1;
z(idx+28-x-x-x-x)=1;
z(idx+28+x+x)=1;

z(idx+38)=1;
z(idx+38-x)=1;
z(idx+39)=1;
z(idx-x+39)=1;




for k=1:1:80;                 % Number of frames
for n=x+2:1:x^2-x-1;          % one time pass

theta=0;                      % Sum the surrounding area (top equation)
for c=n-1:1:n+1;
for m=-1:1:1;
theta=theta+z(m*x+c);
endfor
endfor

z_prime(n)= round(1/5*(z(n)*acos(sin(pi/4*(theta-z(n)-9/2)))  +  (1-z(n)) * acos(sin(pi/4*(theta-z(n) + 3)))));        % bottom equation

endfor

figure(2)
title('GOL','FontWeight','bold');
xlabel("X");
ylabel("Y");
imagesc(reshape(z,x,x)')
z=z_prime;
pause                        % each press advances the algorithm one step
endfor
