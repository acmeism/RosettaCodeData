Init_state=[0 0 0;...
            1 1 1;...
            0 0 0];
console_output=%T;

if (atomsIsLoaded('IPCV') | atomsIsLoaded('SIVP')) & ~console_output then
    Input=imread('initial_state.bmp');  //Comment this three lines in case
    Init_state=~im2bw(Input,0.1);       //there is no input image but
    Init_state=1.0.*Init_state;         //you still want the graphic window
    scf(0); clf();
    imshow(~Init_state);
    set(gca(),"isoview","on");
end

Curr_state=1.0.*Init_state;
Grid_size=size(Init_state);
Gens=4;

function varargout=neighbourhood(A,i,j)
    R_top=i-1;
    if i==1 then
        R_top=1;
    end

    R_bottom=i+1;
    if i==Grid_size(1) then
        R_bottom=Grid_size(1);
    end

    R_left=j-1;
    if j==1 then
        R_left=1;
    end

    C_right=j+1;
    if j==Grid_size(2) then
        C_right=Grid_size(2);
    end

    varargout=list(A(R_top:R_bottom,R_left:C_right));
endfunction

function []=console_print(Grid)
    String_grid=string(Grid);
    for i=1:size(Grid,'r')
        for j=1:size(Grid,'c')
            if Grid(i,j) then
                String_grid(i,j)="#";
            else
                String_grid(i,j)=" ";
            end
        end
    end
    disp(String_grid);
endfunction

neighbours=[];
Next_state=[];

for gen=1:Gens
    Next_state=zeros(Init_state);

    for i=1:Grid_size(1)
        for j=1:Grid_size(2)
            neighbours=zeros(3,3);
            neighbours=neighbourhood(Curr_state,i,j);

            Sum_neighbours=sum(neighbours)-1*Curr_state(i,j);

            Alive=Curr_state(i,j);
            if Alive then
                if Sum_neighbours<2 then
                    Next_state(i,j)=0;
                elseif Sum_neighbours==2 | Sum_neighbours==3 then
                    Next_state(i,j)=1;
                elseif Sum_neighbours>3 then
                    Next_state(i,j)=0;
                end
            else
                if Sum_neighbours==3 then
                    Next_state(i,j)=1;
                end
            end
        end
    end

    if (atomsIsLoaded('IPCV') | atomsIsLoaded('SIVP')) & ~console_output then
        imshow(~Next_state);
        sleep(50);
    else
        sleep(50);
        disp("Generation "+string(gen)+":")
        console_print(Next_state);
    end

    if sum(Next_state)==0 | Curr_state==Next_state then
        disp('ALL CELLS HAVE DIED OR BECAME INERT');
        disp('No. of Generations: '+string(gen))
        break
    end

    Curr_state=Next_state;
end
