IT("Generation 0    ") IN
IT(".O.") IN
IT(".O.") IN
IT(".O.")

#9  = 2		  // number of generations to calculate
#10 = Cur_Line
#11 = Cur_Col-1
for (#2 = 1; #2 <= #9; #2++) {
    Update()
    Get_Key("Next gen...", STATLINE)
    Call("calculate")
    itoa(#2, 20, LEFT)
    GL(1) GC(12) Reg_Ins(20, OVERWRITE)
}
EOF
Return

// Calculate one generation
:calculate:
Goto_Line(2)
While (At_EOF == 0) {
  Search("|A",ERRBREAK)		// find next living cell
  #3 = Cur_Line
  #4 = #7 = #8 = Cur_Col
  if (#4 > 1) {			// increment cell at left
      #7 = #4-1
      Goto_Col(#7)
      Ins_Char(Cur_Char+1,OVERWRITE)
  }
  if (#4 < #11) {		// increment cell at right
      #8 = #4+1
      Goto_Col(#8)
      Ins_Char(Cur_Char+1,OVERWRITE)
  }
  if (#3 > 2) {			// increment 3 cells above
      Goto_Line(#3-1)
      Call("inc_3")
  }
  if (#3 < #10) {		// increment 3 cells below
      Goto_Line(#3+1)
      Call("inc_3")
  }
  Goto_Line(#3)
  Goto_Col(#4+1)
}

Replace("[1QR]", "O", REGEXP+BEGIN+ALL)	    // these cells alive
Replace("[/-7P-X]", ".", REGEXP+BEGIN+ALL)  // these cells dead
Return

// increment values of 3 characters in a row
:inc_3:
for (#1 = #7; #1 <= #8; #1++) {
  Goto_Col(#1)
  Ins_Char(Cur_Char+1,OVERWRITE)
}
Return
