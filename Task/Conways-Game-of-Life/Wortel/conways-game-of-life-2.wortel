@let {
  ; Translation of the APL game of life (http://catpad.net/michael/apl/).
  life &m @let {
    ; create functions that work on two matrices
    makemf  &f @[\@mapm @[\@mapm f ^@,] ^@,]
    addm    !makemf ^+
    orm     !makemf ^||
    andm    !makemf ^&&
    eqm     !makemf ^=

    ; bool matrix to number matrix
    tonum   *^*^@+

    ; create a matrix of value v in the shape of matrix m
    repm    &[v m] @rep #m &,@rep #m.0 v

    ; move a matrix in directions by padding zeroes
    movel   \!*~t0j
    mover   \!*~i0SO
    moveu   &m ~, &,@rep #m.0 0 !~t m
    moved   &m  , &,@rep #m.0 0 !~i m

    ; cache up and down
    mu      !moveu m
    md      !moved m

    ; calculate the neighbours
    neigh   !/addm [
      !movel mu  mu  !mover mu
      !movel m       !mover m
      !movel md  md  !mover md
    ]

    ; ((neigh = 2) AND m) OR (neigh = 3)
    ; (2 neighbours AND alive) OR (3 neighbours)
    !tonum !!orm !!andm m !!eqm neigh !!repm 2 m
                 !!eqm neigh !!repm 3 m
  }

  blinker [
    [0 0 0 0 0]
    [0 0 0 0 0]
    [0 1 1 1 0]
    [0 0 0 0 0]
    [0 0 0 0 0]
  ]

  [[
    !^life 0 blinker
    !^life 1 blinker
    !^life 2 blinker
  ]]
}
