Module FreeCellDeal {
	deal = lambda ->{
		ms_lcg = lambda ms_state=0# (seed As currency = -1) ->{
			If seed <> -1 Then
				ms_state = seed Mod 2 ^ 31
			Else
				ms_state = (214013 * ms_state + 2531011) Mod 2 ^ 31
			End If
			= binary.shift(ms_state, -16)
		}
		fillbytes = lambda n=0ud ->{=n:n++}	
		dim cards(52) as byte<<fillbytes()
		= lambda ms_lcg, cards() (game as integer)-> {
			call void ms_lcg(game)
			dim ncards()
			ncards()=cards()
			for i = 51 to 0
				c = ms_lcg() Mod (i +1)
				Swap ncards(i), ncards(c)
			next
			=ncards()
		}
	}() ' execute now
	dim dealcards()	
	string suit = "CDHS", value = "A23456789TJQK"
	aList=(1, 617)
	nList=each(alist)
	while nList
		Print "Game:"+array(nList)
		dealcards() = deal(array(nlist))
		CardDis$ = lambda$ dealcards(), suit, value (c)-> {
			s = dealcards(51 - c) Mod 4 + 1
			v = dealcards(51 - c) div 4 + 1
			=Mid$(value,v, 1)+Mid$(suit,s, 1)
		}
		c=0
		Do			
			Print CardDis$(c);
			if c mod 8 < 7 then ?  " "; Else ?			
			c++
		until c>51
		? : ?
	end while
}
FreeCellDeal
