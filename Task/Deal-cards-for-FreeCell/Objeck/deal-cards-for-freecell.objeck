class FreeCell {
  function : Main(args : String[]) ~ Nil {
    Deal(1)->PrintLine();
    Deal(617)->PrintLine();
  }

  function : Deal(seed : Int) ~ String {
    deck := Deck->New(seed)->ToString();
    return "Game #{$seed}:\n{$deck}\n";
  }
}

class Deck {
  @cards : Card[];

  New(seed : Int) {
    r := Random->New(seed);

    @cards := Card->New[52];
    for(i := 0; i < 52; i+= 1;) {
      @cards[i] := Card->New(51 - i);
    };

    for(i := 0; i < 51; i += 1;) {
      j := 51 - r->Next() % (52 - i);
      tmp := @cards[i]; @cards[i] := @cards[j]; @cards[j] := tmp;
    };
  }

  method : public : ToString() ~ String {
    buffer := "";

    each(i : @cards) {
      buffer += @cards[i]->ToString();
      buffer += (i % 8 = 7 ? "\n" : " ");
    };

    return buffer;
  }


}

class Random {
  @seed : Int;

  New(seed : Int) {
    @seed := seed;
  }

  method : public : Next() ~ Int {
    @seed := (@seed * 214013 + 2531011) and Int->MaxSize();
    return @seed >> 16;
  }
}

class Card {
  @value : Int;
  @suit : Int;

  New(value : Int) {
    @value := value / 4; @suit := value % 4;
  }

  method : public : ToString() ~ String {
    suits := "♣♦♥♠"; values := "A23456789TJQK";
    value := values->Get(@value); suit := suits->Get(@suit);
    return "{$value}{$suit}";
  }
}
