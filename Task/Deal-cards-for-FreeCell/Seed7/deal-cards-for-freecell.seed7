$ include "seed7_05.s7i";
  include "console.s7i";

const string: suits is "♣♦♥♠";
const string: nums is "A23456789TJQK";

var integer: randomSeed is 1;

const func integer: random is func
  result
    var integer: rand is 1;
  begin
    randomSeed := (randomSeed * 214013 + 2531011) mod 2 ** 31;
    rand := randomSeed >> 16;
  end func;

const proc: show (in array integer: cards) is func
  local
    var integer: index is 0;
  begin
    for index range 1 to 52 do
      write("  " <& suits[succ(cards[index] rem 4)] <& nums[succ(cards[index] div 4)]);
      if index rem 8 = 0 or index = 52 then
        writeln;
      end if;
    end for;
  end func;

const func array integer: deal (in integer: gameNum) is func
  result
    var array integer: cards is 52 times 0;
  local
    var integer: i is 0;
    var integer: j is 0;
    var integer: s is 0;
  begin
    randomSeed := gameNum;
    for i range 1 to 52 do
      cards[i] := 52 - i;
    end for;
    for i range 1 to 51 do
      j := 52 - random mod (53 - i);
      s := cards[i];
      cards[i] := cards[j];
      cards[j] := s;
    end for;
  end func;

const proc: main is func
  local
    var integer: gameNum is 11982;
    var array integer: cards is 0 times 0;
  begin
    OUT := STD_CONSOLE;
    if length(argv(PROGRAM)) >= 1 then
      block
        gameNum := integer parse (argv(PROGRAM)[1]);
      exception
        catch RANGE_ERROR: noop;
      end block;
    end if;
    cards := deal(gameNum);
    writeln("Hand " <& gameNum);
    show(cards);
  end func;
