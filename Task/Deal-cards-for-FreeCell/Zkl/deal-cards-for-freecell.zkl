var suits=T(0x1F0D1,0x1F0C1,0x1F0B1,0x1F0A1); //unicode 🃑,🃁,🂱,🂡

var seed=1; const RMAX32=(1).shiftLeft(31) - 1;
fcn rnd{ (seed=((seed*214013 + 2531011).bitAnd(RMAX32))).shiftRight(16) }

fcn game(n){
   seed=n;
   deck:=(0).pump(52,List,'wrap(n){ if(n>=44) n+=4; // I want JQK, not JCQ
       (suits[n%4] + n/4).toString(8) }).copy();  // int-->UTF-8
   [52..1,-1].pump(Void,'wrap(len){ deck.swap(len-1,rnd()%len); });
   deck.reverse();
   println("Game #",n);
   foreach n in ([0..51,8]){ deck[n,8].concat(" ").println(); }
}

game(1);
game(617);
