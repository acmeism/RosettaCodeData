100H: /* SHOW POSSIBLE DEPARTMENT NUMBERS FOR POLICE, SANITATION AND FIRE    */
      /* THE POLICE DEPARTMENT NUMBER MUST BE EVEN, ALL DEPARTMENT NUMBERS   */
      /* MUST BE IN THE RANGE 1 .. 7 AND THE NUMBERS MUST SUM TO 12          */

   /* CP/M SYSTEM CALL AND I/O ROUTINES                                      */
   BDOS:      PROCEDURE( FN, ARG ); DECLARE FN BYTE, ARG ADDRESS; GOTO 5; END;
   PR$CHAR:   PROCEDURE( C ); DECLARE C BYTE;    CALL BDOS( 2, C );  END;
   PR$STRING: PROCEDURE( S ); DECLARE S ADDRESS; CALL BDOS( 9, S );  END;
   PR$NL:     PROCEDURE;   CALL PR$CHAR( 0DH ); CALL PR$CHAR( 0AH ); END;
   PR$NUMBER: PROCEDURE( N ); /* PRINTS A NUMBER IN THE MINIMUN FIELD WIDTH  */
      DECLARE N ADDRESS;
      DECLARE V ADDRESS, N$STR ( 6 )BYTE, W BYTE;
      V = N;
      W = LAST( N$STR );
      N$STR( W ) = '$';
      N$STR( W := W - 1 ) = '0' + ( V MOD 10 );
      DO WHILE( ( V := V / 10 ) > 0 );
         N$STR( W := W - 1 ) = '0' + ( V MOD 10 );
      END;
      CALL PR$STRING( .N$STR( W ) );
   END PR$NUMBER;

   /* TASK                                                                   */
   DECLARE MAX$DEPARTMENT$NUMBER LITERALLY '7';
   DECLARE DEPARTMENT$SUM        LITERALLY '12';
   DECLARE ( POLICE, SANITATION, FIRE ) BYTE;

   CALL PR$STRING( .'POLICE SANITATION FIRE$' );
   CALL PR$NL;

   DO POLICE = 2 TO MAX$DEPARTMENT$NUMBER BY 2;
      DO SANITATION = 1 TO MAX$DEPARTMENT$NUMBER;
         IF SANITATION <> POLICE THEN DO;
            FIRE = ( DEPARTMENT$SUM - POLICE ) - SANITATION;
            IF  FIRE <= MAX$DEPARTMENT$NUMBER
            AND FIRE <> SANITATION
            AND FIRE <> POLICE
            THEN DO;
               CALL PR$STRING( .'     $'      ); CALL PR$NUMBER( POLICE );
               CALL PR$STRING( .'          $' ); CALL PR$NUMBER( SANITATION );
               CALL PR$STRING( .'    $'       ); CALL PR$NUMBER( FIRE );
               CALL PR$NL;
            END;
         END;
      END;
   END;

EOF
