scope # find some Disarium numbers - numbers whose digit position-power sums
      # are equal to the number, e.g. 135 = 1^1 + 3^2 + 5^3

    # compute the nth powers of 0-9
    local constant power := seq( [], [], [], [], [], [], [], [], []  );
    for d from 0 to 9 do power[ 1, d ] := d od;
    for n from 2 to 9 do
        power[ n, 0 ] := 0;
        for d to 9 do
            power[ n, d ] := power[ n - 1, d ] * d
        od
    od;
    # print the first few Disarium numbers
    local constant maxDisarium      := 19;
    local count, powerOfTen, length :=  0, 10, 1;
    for n from 0 while count < maxDisarium do
        if n = powerOfTen then
            # the number of digits just increased
            powerOfTen *:= 10;
            length     +:=  1
        fi;
        # form the digit power sum
        local v, dps := n, 0;
        for p from length to 1 by -1 do
            dps +:= power[ p, v mod 10 ];
            v \:= 10
        od;
        if dps = n then
            # n is Disarium
            count +:= 1;
            printf( " %d", n )
        fi
    od
end
