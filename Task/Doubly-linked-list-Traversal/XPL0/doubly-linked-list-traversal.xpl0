def \Node\ Prev, Data, Next;    \Element (Node) definition
def SizeofInt = 4;

    proc Insert(NewNode, Node);     \Insert NewNode after Node
    int  NewNode, Node, NextNode;
    [NextNode:= Node(Next);
    NextNode(Prev):= NewNode;
    NewNode(Next):= NextNode;
    NewNode(Prev):= Node;
    Node(Next):= NewNode;
    ];

int Head(3), Tail(3);           \Doubly linked list definition
int N, NewNode, Node;
[\Further define (initialize) the doubly linked list
Head(Next):= Tail;
Tail(Prev):= Head;
\Insert some Nodes containing square data
for N:= 1 to 10 do
    [NewNode:= Reserve(3*SizeofInt);
    NewNode(Data):= N*N;
    Insert(NewNode, Head);
    ];
\Traverse list from Head to Tail
Node:= Head(Next);
while Node # Tail do
    [IntOut(0, Node(Data));  ChOut(0, ^ );
    Node:= Node(Next);
    ];
CrLf(0);
\Traverse list from Tail to Head
Node:= Tail(Prev);
while Node # Head do
    [IntOut(0, Node(Data));  ChOut(0, ^ );
    Node:= Node(Prev);
    ];
CrLf(0);
]
