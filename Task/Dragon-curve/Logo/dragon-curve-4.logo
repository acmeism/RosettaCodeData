; Return the bit above the lowest 1-bit in :n.
; If :n = binary "...z100..00" then the return is "z000..00".
; Eg. n=22 is binary 10110 the lowest 1-bit is the "...1." and the return is
; bit above that "..1.," which is 4.
to bit.above.lowest.1bit :n
  output bitand :n (1 + (bitxor :n (:n - 1)))
end

; Return angle +90 or -90 for dragon curve turn at point :n.
; The curve is reckoned as starting from n=0 so the first turn is at n=1.
to dragon.turn.angle :n
  output ifelse (bit.above.lowest.1bit :n) = 0  [90] [-90]
end

; Draw :steps many segments of the dragon curve.
to dragon :steps
  localmake "step.len 12  ; length of each step
  repeat :steps [
    forward :step.len
    left    dragon.turn.angle repcount  ; repcount = 1 to :steps inclusive
  ]
end

dragon 256
