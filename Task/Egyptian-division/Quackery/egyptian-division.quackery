  [ dup 0 = if
      [ $ "Cannot divide by zero."
        fail ]
    [] unrot
    [ 2dup < not while
      rot over swap join
      unrot dup + again ]
    drop swap
    dup size
    [] 1 rot times
      [ tuck swap join
        swap dup + ]
    drop
    temp put
    0 swap
    witheach
      [ over +
        rot 2dup > iff
          [ nip swap
            0
            temp take
            i^ poke
            temp put ]
          else
            [ swap rot drop ] ]
    - 0 temp take
    witheach +
    swap ]                         is egyptian ( n n --> n n )

  [ over echo
    say " divided by "
    dup echo
    say " is "
    egyptian
    swap echo
    say " remainder "
    echo
    say "." ]                      is task     ( n n -->     )

  580 34 task
