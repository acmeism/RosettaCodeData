templates egyptianDivision
  def dividend: $(1);
  def divisor: $(2);
  def table: [ { powerOf2: 1"1", doubling: ($divisor)"1" } -> \(
    when <{doubling: <..$dividend>}> do
      $ !
      { powerOf2: $.powerOf2 * 2, doubling: $.doubling * 2 } -> #
  \)];
  @: { answer: 0"1", accumulator: 0"1" };
  $table(last..1:-1)... -> #
  $@ !

  when <{doubling: <..$dividend-$@.accumulator>}> do
    @: { answer: $@.answer + $.powerOf2, accumulator: $@.accumulator + $.doubling };
end egyptianDivision

[580"1", 34"1"] -> egyptianDivision -> 'Quotient: $.answer; Remainder: $: 580"1" - $.accumulator;' -> !OUT::write
