F reversed(Int =n)
   V result = 0
   L
      result = 10 * result + n % 10
      n I/= 10
      I n == 0
         R result

V limit = 1'000'000
V is_prime = [0B] * 2 [+] [1B] * (limit - 1)
L(n) 0 .< Int(limit ^ 0.5 + 1.5)
   I is_prime[n]
      L(i) (n * n .< limit + 1).step(n)
         is_prime[i] = 0B

F is_emirp(n)
   I !:is_prime[n]
      R 0B
   V r = reversed(n)
   R r != n & :is_prime[r]

print(‘First 20 emirps:’, end' ‘’)
V count = 0
L(n) 0 .< limit
   I is_emirp(n)
      print(‘ ’n, end' ‘’)
      I ++count == 20
         L.break
print()

print(‘Emirps between 7700 and 8000:’, end' ‘’)
L(n) 7700..8000
   I is_emirp(n)
      print(‘ ’n, end' ‘’)
print()

count = 0
L(n) 0 .< limit
   I is_emirp(n)
      I ++count == 10000
         print(‘The 10000th emirp: ’n)
         L.break
