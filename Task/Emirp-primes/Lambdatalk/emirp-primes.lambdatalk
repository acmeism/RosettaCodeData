{def prime
 {def prime.r
  {lambda {:m :n}
   {if {> {* :m :m} :n}
    then :n
    else {if {= {% :n :m} 0}
    then false
    else {prime.r {+ :m 1} :n}}
 }}}
 {lambda {:n}
  {prime.r 2 :n}
}}
-> prime

{def emirp
 {lambda {:n}
  {let { {:n :n}
         {:p {prime :n}}
         {:q {prime {W.reverse :n}}}
       } {if {and {not {= :p :q}}
                  {not :p .}
                  {not :q .} }
          then :n
          else .}}}}
-> emirp

{def emirps
 {def emirps.loop
  {lambda {:n :m :a :i :j}
   {if {or {>= :j :n} {> :i :m}}
    then :a with :i tests
    else {emirps.loop :n :m
                      {if {W.equal? {emirp :i} :i}
                       then {A.addlast! :i :a} {+ :i 2} {+ :j 1}
                       else :a {+ :i 2} :j}}
 }}}
 {lambda {:i :n :m}
  {emirps.loop :n :m {A.new} :i 0}
}}
-> emirps

{emirps 13 20 500}
-> [13,17,31,37,71,73,79,97,107,113,149,157,167,179,199,311,337,347,359,389] with 391 tests

{emirps 7701 11 10000}
-> [7717,7757,7817,7841,7867,7879,7901,7927,7949,7951,7963] with 7965 tests

{emirps 948300 10 1000000}
-> {emirps 948300 10 1000000} // stackoverflow

{emirp 948349}
-> 948349
