F isEsthetic(=n, b)
   I n == 0 {R 0B}
   V i = n % b
   n I/= b
   L n > 0
      V j = n % b
      I abs(i - j) != 1
         R 0B
      n I/= b
      i = j
   R 1B

F listEsths(Int64 n1, n2, m1, m2; perLine, all)
   [Int64] esths

   F dfs(Int64 n, m, i) -> N
      I i C n .. m
         @esths.append(i)
      I i == 0 | i > m {R}
      V d = i % 10
      V i1 = i * 10 + d - 1
      V i2 = i1 + 2
      I d == 0
         @dfs(n, m, i2)
      E I d == 9
         @dfs(n, m, i1)
      E
         @dfs(n, m, i1)
         @dfs(n, m, i2)

   L(i) 10
      dfs(n2, m2, i)

   print(‘Base 10: ’esths.len‘ esthetic numbers between ’n1‘ and ’m1‘:’)
   I all
      L(esth) esths
         print(esth, end' I (L.index + 1) % perLine == 0 {"\n"} E ‘ ’)
      print()
   E
      L(i) 0 .< perLine
         print(esths[i], end' ‘ ’)
      print("\n............")
      L(i) esths.len - perLine .< esths.len
         print(esths[i], end' ‘ ’)
      print()
   print()

L(b) 2..16
   print(‘Base ’b‘: ’(4 * b)‘th to ’(6 * b)‘th esthetic numbers:’)
   V n = Int64(1)
   V c = Int64(0)
   L c < 6 * b
      I isEsthetic(n, b)
         c++
         I c >= 4 * b
            print(String(n, radix' b), end' ‘ ’)
      n++
   print("\n")

listEsths(1000, 1010, 9999, 9898, 16, 1B)
listEsths(100'000'000, 101'010'101, 130'000'000, 123'456'789, 9, 1B)
listEsths(100'000'000'000, 101'010'101'010, 130'000'000'000, 123'456'789'898, 7, 0B)
listEsths(100'000'000'000'000, 101'010'101'010'101, 130'000'000'000, 123'456'789'898'989, 5, 0B)
listEsths(100'000'000'000'000'000, 101'010'101'010'101'010, 130'000'000'000'000'000, 123'456'789'898'989'898, 4, 0B)
