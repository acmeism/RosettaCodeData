/* Exceptions: Catch an exception thrown in a nested call */
test: proc options (main);
                                                   /* 8/1/2011 */
   declare (m, n) fixed initial (2);
   declare (U0, U1) condition;

foo: procedure () returns (fixed);
   on condition(U0) snap begin;
      put list ('Raised condition U0 in function <bar>.'); put skip;
   end;
   m = bar();
   m = bar();
   return (m);
end foo;

bar: procedure () returns (fixed);
   n = n + 1;
   return (baz());
   return (n);
end bar;
baz: procedure () returns (fixed);
   declare first bit(1) static initial ('1'b);
   n = n + 1;
   if first then do; first = '0'b; signal condition(U0); end;
   else signal condition(U1);
   return (n);
end baz;

   m = foo();
end test;
