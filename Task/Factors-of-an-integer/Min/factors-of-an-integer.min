(mod 0 ==) :divisor?
(() 0 shorten) :new
(new (over swons 'pred dip) pick times nip) :iota

(
  :n
  n sqrt int iota                            ; Only consider numbers up to sqrt(n).
  (n swap divisor?) filter =f1
  f1 (n swap div) map reverse =f2            ; "Mirror" the list of divisors at sqrt(n).
  (f1 last f2 first ==) (f2 rest #f2) when   ; Handle perfect squares.
  f1 f2 concat
) :factors

24 factors puts!
9 factors puts!
11 factors puts!
