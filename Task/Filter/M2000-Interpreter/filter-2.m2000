Module CheckIt {
      Function GetEvenNumbers (A as array){
            If len(A)=0 then =(,) : exit
            Flush  ' empty current stack (of values)
            n=each(A)
            While n {
                  if array(n) mod 2 = 0 then data array(n)
            }
            \\ [] return a stack object, leave an empty stack as current stack
            =Array([])
      }

      Dim A(5), B()
      A(0)=10,3,6,7,11
      B()=GetEvenNumbers(A())
      Print B()  ' print 10,6
      Print GetEvenNumbers((1,2,3,4,5,6,7,8))  ' 2 4 6 8

      Module Filter2EvenNumbers (&A()) {
            If len(A())=0 then  exit
            Stack New {
                  Flush  ' empty current stack (of values)
                  n=each(A())
                  While n {
                        if array(n) mod 2 = 0 then data array(n)
                  }
                  \\ [] return a stack object, leave an empty stack as current stack
                  A()=Array([])
            }
      }
      A(0)=10,3,6,7,11
      Filter2EvenNumbers &A()
      Print A()  ' 10 6
      Module Filter2EvenNumbers (&A()) {
            If len(A())=0 then  exit
            n=each(A())
            x=Dimension(A(), 0)-1  ' base of array (0 or 1)
            k=-x
            While n {
                  if array(n) mod 2 = 0 then x++ : A(x)=Array(n)
            }
            Dim A(x+k)
       }
      Dim A(5)
      A(0)=10,3,6,7,11
      Filter2EvenNumbers &A()
      Print A()  ' 10 6
}
CheckIt
}
CheckIt
