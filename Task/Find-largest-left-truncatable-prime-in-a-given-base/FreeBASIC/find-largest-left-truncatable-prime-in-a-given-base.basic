#include "big_int/big_integer.bi"

Function isProbablePrime(Byref n As BigInt, k As Integer) As Boolean
    If n = 0 Or n = 1 Then Return False
    If n = 2 Then Return True
    If n Mod 2 = 0 Then Return False

    Dim As BigInt d = n - 1
    Dim As Integer s = 0
    While d Mod 2 = 0
        d \= 2
        s += 1
    Wend

    For trial As Integer = 1 To k
        Dim As BigInt a = 2 + Int(Rnd * 9)
        If a > n - 2 Then a = 2

        Dim As BigInt x = 1, b = a, e = d
        While e > 0
            If e Mod 2 = 1 Then x = (x * b) Mod n
            b = (b * b) Mod n
            e \= 2
        Wend

        If x = 1 Or x = n - 1 Then Continue For

        Dim As Boolean composite = True
        For r As Integer = 1 To s - 1
            x = (x * x) Mod n
            If x = n - 1 Then composite = False: Exit For
        Next
        If composite Then Return False
    Next

    Return True
End Function

Function BaseStringToBigInt(s As String, basenum As Integer) As BigInt
    Dim As BigInt n = 0
    For i As Integer = 1 To Len(s)
        n = n * basenum + Asc(Mid(s, i, 1)) - 48
    Next
    Return n
End Function

Function BigIntToString(n As BigInt) As String
    If n = 0 Then Return "0"
    Dim As BigInt tmp = n
    Dim As String s = ""
    Dim As Integer neg = 0

    If tmp < 0 Then
        neg = 1
        tmp = -tmp
    End If
    While tmp > 0
        Dim As Integer d = tmp Mod 10
        s = Chr(48 + d) & s
        tmp \= 10
    Wend

    If neg Then s = "-" & s
    Return s
End Function

Function largestLeftTruncatablePrime(basenum As Integer) As BigInt
    Dim As Integer i, d

    Dim As String digits = ""
    For d = 1 To basenum - 1
        If isProbablePrime(d, 8) Then digits &= Chr(48 + d)
    Next

    Dim As String arr1(), arr2()
    Dim As Integer n1 = 0, n2 = 0

    For i = 1 To Len(digits)
        Redim Preserve arr1(n1)
        arr1(n1) = Mid(digits, i, 1)
        n1 += 1
    Next

    Dim As BigInt maxPrime = 0

    Do While n1 > 0
        n2 = 0
        Erase arr2
        For i = 0 To n1 - 1
            Dim As String s = arr1(i)
            Dim As BigInt n = BaseStringToBigInt(s, basenum)
            If n > maxPrime Then maxPrime = n

            For d = 1 To basenum - 1
                Dim As String s2 = Chr(48 + d) & s
                Dim As BigInt n2val = BaseStringToBigInt(s2, basenum)
                If isProbablePrime(n2val, 8) Then
                    Redim Preserve arr2(n2)
                    arr2(n2) = s2
                    n2 += 1
                End If
            Next
        Next

        n1 = n2
        Erase arr1
        If n2 > 0 Then
            Redim arr1(n2 - 1)
            For i = 0 To n2 - 1
                arr1(i) = arr2(i)
            Next
        End If
    Loop

    Return maxPrime
End Function

' Main program
Randomize Timer

For b As Integer = 3 To 17
    Dim res As BigInt = largestLeftTruncatablePrime(b)
    Print Using "Base ## : "; b;
    Print BigIntToString(res)
Next

Sleep
