real Base;                      \Number Base used [2..14]

proc NumOut(N);                 \Display N in the specified Base
real N;
int  Remain;
[Remain:= fix(Mod(N, Base));
N:= Floor(N/Base);
if N # 0. then NumOut(N);
ChOut(0, Remain + (if Remain <= 9 then ^0 else ^A-10));
];

func Pandigital(N);             \Return 'true' if N is pandigital
real N;
int  Used, Remain;
[Used:= 0;
while N # 0. do
    [Remain:= fix(Mod(N, Base));
    N:= Floor(N/Base);
    Used:= Used ! 1<<Remain;
    ];
return Used = 1<<fix(Base) - 1;
];

real N;
[Base:= 2.;
Format(2, 0);
repeat  N:= Floor(Sqrt(Pow(Base, Base-1.)));
        loop    [if Pandigital(N*N) then
                    [RlOut(0, Base);  Text(0, ": ");
                    NumOut(N);  Text(0, "^^2 = ");
                    NumOut(N*N);  CrLf(0);
                    quit;
                    ];
                N:= N + 1.;
                ];
        Base:= Base + 1.;
until   Base > 14.;
]
