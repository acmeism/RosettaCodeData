/**
 fixed length records, in Neko
*/

var LRECL = 80

var reverse = function(s) {
  var len = $ssize(s)
  if len < 2 return s

  var reverse = $smake(len)
  var pos = 0
  while len > 0 $sset(reverse, pos ++= 1, $sget(s, len -= 1))
  return reverse
}

var file_open = $loader.loadprim("std@file_open", 2)
var file_read = $loader.loadprim("std@file_read", 4)
var file_write = $loader.loadprim("std@file_write", 4)
var file_close = $loader.loadprim("std@file_close", 1)

var input = file_open("infile.dat", "r")
var output = file_open("outfile.dat", "w")

var len
var pos = 0
var record = $smake(LRECL)

while true {
  try {
    len = file_read(input, record, pos, LRECL)
    if len != LRECL $throw("Invalid read")

    len = file_write(output, reverse(record), pos, LRECL)
    if len != LRECL $throw("Invalid write")
  } catch a break;
}
file_close(input)
file_close(output)
