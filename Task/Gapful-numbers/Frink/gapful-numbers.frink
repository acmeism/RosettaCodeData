// Create function to calculate gapful number
gapful[num,totalCounter] :=
{
   // Display a line explaining the current calculation.
   println["First $totalCounter gapful numbers over $num:"]
   // Start a counter to compare with the total count.
   counter = 0
   while counter < totalCounter
   {
      numStr = toString[num] // Convert the integer to a string
      gapfulNumStr = left[numStr,1] + right[numStr,1] // Concatenate the first and last character of the number to form a two digit number
      gapfulNumInt = parseInt[gapfulNumStr] // Turn the concatenated string back into an integer.
      // If the concatenated two digit integer divides into the current num variable with no remainder, print it to the list and increase our counter
      if num mod gapfulNumInt == 0
      {
         print[numStr + " "]
         counter = counter + 1
      }
      // Increase the current number for the next cycle.
      num = num + 1
   }
   p



   rintln[] // Linkbreak
}

// Print the first 30 gapful numbers over 100, the top 15 over 1,000,000 and the first 10 over 1,000,000,000.
gapful[100,30]
gapful[1000000,15]
gapful[1000000000,10]
