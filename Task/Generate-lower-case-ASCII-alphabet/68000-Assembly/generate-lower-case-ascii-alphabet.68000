Ascii_Low:
MOVEM.L D0/A0,-(SP)	;store D0 and A0 on stack

LEA $00100000,A0	;could also have used MOVE.L since the address is static
MOVE.B #$61,D0		;ascii "a"

loop_AsciiLow:
MOVE.B D0,(A0)+		;store letter in address and increment pointer by 1
ADDQ.B #1,D0		;add 1 to D0 to get the next letter
CMP.B #$7B,D0		;Are we done yet? (7B is the first character after lowercase "z")
BNE loop_AsciiLow	;if not, loop again
MOVE.B #0,(A0)		;store the null terminator

MOVEM.L (SP)+,D0/A0	;pop D0 and A0

rts
