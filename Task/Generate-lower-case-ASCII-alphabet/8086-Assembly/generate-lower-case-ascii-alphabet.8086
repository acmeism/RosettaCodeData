	bits	16
	cpu	8086
	org	100h
section	.text
	jmp	demo
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
	;;;	Store the lowercase alphabet starting at [ES:DI]
	;;;	Destroys AX, CX, DI
alph:	mov	cx,13		; 2*13 words = 26 bytes
	mov	ax,'ab'		; Do two bytes at once
.loop:	stosw			; Store AX at ES:DI and add 2 to DI
	add	ax,202h		; Add 2 to both bytes (CD, EF, ...)
	loop	.loop
	mov	al,'$'		; MS-DOS string terminator
	stosb
	ret
	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
demo:	mov	di,buf		; Pointer to buffer
	call	alph		; Generate the alphabet
	mov	dx,buf		; Print the contents of the buffer
	mov	ah,9
	int	21h
	ret
section	.bss
buf:	resb	27		; Buffer to store the alphabet in
