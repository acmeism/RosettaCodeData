\\ old style Basic, including a Binary.Or() function
Module OldStyle {
      10 LET A$=""
      20 DEF FNUP$(I)=""""+CHR$(BINARY.OR(I, 32))+""""
      30 FOR I=ASC("A") TO ASC("Y")
      40 LET A$= A$ + FNUP$(I, 32)+", "
      50 NEXT I
      60 LET A$ = A$+ FNUP$(I, 32)
      70 PRINT A$
}
CALL OldStyle

Module new_style {
	a=("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z")
	map1= lambda ->{push binary.or(asc(letter$), 32)}
	map2= lambda ->{push chr$(number)}
	Print """"+a#map(map1, map2)#str$({", "})+""""
}
new_style
