format ELF64 executable 3
entry begin

segment executable readable
begin:
    mov rcx, 26
    mov rdi, alphabet
    mov rax, 'a'
 .loop0:
    stosb
    inc rax
    loop .loop0
    mov byte[alphabet + 26], 0x0a
 .print0:
    mov rax, 1
    mov rdi, 1
    mov rsi, alphabet
    mov rdx, 27
    syscall
 .end:
    mov rax, 60
    xor rdi, rdi
    syscall

segment readable writeable
alphabet: rb 27
