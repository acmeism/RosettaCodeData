(do ;;; Goldbach's comet - translated from the Lua sample

    (fn range [from to] ; generate a table containing the integers [from .. to]
        (local t {})
        (for [i from to]
             (tset t i i)
        )
        t
    )

    (fn is-prime [p]
        (if   (or (<= p 1) (= 0 (% p 2)))
              (= p 2)
        ;else
              (do (var (prime i root-p) (values true 3 (math.floor (math.sqrt p))))
                  (while (and (<= i root-p) prime)
                         (set (prime i) (values (not= 0 (% p i)) (+ i 1)))
                  )
                  prime
              )
        )
    )

    (fn goldbach [n]
        (var count 0)
        (for [i 1 (math.floor (/ n 2))]
             (when (and (is-prime i) (is-prime (- n i)))
                   (set count (+ count 1))
             )
        )
        count
    )

    (print "The first 100 G numbers:")
    (print (table.concat (icollect [_ v (ipairs (range 1 100))]
                                   (string.format (.. "%2d" (if   (= 0 (% v 10))
                                                                  "\n"
                                                            ;else
                                                                  " "
                                                            )
                                                  )
                                                  (goldbach (+ 2 (* v 2)))
                                   )
                         )
                         ""
           )
    )
    (print (.. "G(1000000) = " (goldbach 1_000_000)))
)
