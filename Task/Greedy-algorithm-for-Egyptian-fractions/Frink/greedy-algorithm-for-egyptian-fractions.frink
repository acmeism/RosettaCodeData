frac[p, q] :=
{
    a = makeArray[[0]]
    if p > q
    {
        a.push[floor[p / q]]
        p = p mod q
    }
    while p > 1
    {
        d = ceil[q / p]
        a.push[1/d]
        [p, q] = [-q mod p, d q]
    }
    if p == 1
        a.push[1/q]
    a
}

showApproximations[false]

egypt[p, q] := join[" + ", frac[p, q]]

rosetta[] :=
{
    lMax = 0
    longest = 0

    dMax = 0
    biggest = 0

    for n = 1 to 99
        for d = n+1 to 99
        {
            egypt = frac[n, d]
            if length[egypt] > lMax
            {
                lMax = length[egypt]
                longest = n/d
            }
            d2 = denominator[last[egypt, 1]@0]
            if d2 > dMax
            {
                dMax = d2
                biggest = n/d
            }
        }

    println["The fraction with the largest number of terms is $longest"]
    println["The fraction with the largest denominator is $biggest"]
}
