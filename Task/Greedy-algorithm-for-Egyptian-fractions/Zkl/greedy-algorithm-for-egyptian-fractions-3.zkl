var [const] BN=Import("zklBigNum");  // libGMP
lenMax,denomMax := List(0,Void),List(0,Void);
foreach n,d in (Walker.cproduct([1..99],[1..99])){ // 9801 fractions
   e,eLen,eDenom := egyptian(BN(n),BN(d)), e.len(), e[-1];
   if(eDenom.isType(List)) eDenom=1;
   if(eLen  >lenMax[0])   lenMax.clear(eLen,T(n,d));
   if(eDenom>denomMax[0]) denomMax.clear(eDenom,T(n,d));
}
println("Term max is %s/%s with %d terms".fmt(lenMax[1].xplode(), lenMax[0]));
dStr:=denomMax[0].toString();
println("Denominator max is %s/%s with %d digits %s...%s"
    .fmt(denomMax[1].xplode(), dStr.len(), dStr[0,5], dStr[-5,*]));
