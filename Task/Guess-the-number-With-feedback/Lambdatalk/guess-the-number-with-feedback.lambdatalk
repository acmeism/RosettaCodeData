{def game

 {def game.rec                                  // recursive part
  {lambda {:n :l :h}
   {let { {:n :n} {:l :l} {:h :h}               // :n, :l, :h redefined
          {:g {round {/ {+ :l :h} 2}}}}         // :g is the middle
    {if {< :g :n}
     then {br}:g too low!
          {game.rec :n {+ :g 1} :h}             // do it again higher
     else {if {> :g :n}
     then {br}:g too high!
          {game.rec :n :l {- :g 1}}             // do it again lower
     else {br}{b :g Got it!} }} }}}             // bingo!

 {lambda {:n}
  {let { {:n :n}                                // :n redefined
         {:N {floor {* :n {random}}}}}          // compute a random number
   Find {b :N} between 0 and :n {game.rec :N 0 :n}
}}}

{game {pow 2 32}}       // 2**32 = 4294967296
