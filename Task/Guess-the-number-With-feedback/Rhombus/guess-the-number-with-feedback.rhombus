#lang rhombus/static

fun get_bound(name :: String, lower_bound :: NonnegInt = 0):
  def input = stdin.read_line()
  def maybe_int = String.maybe_to_int(input)

  cond:
  | maybe_int !is_a NonnegInt:
      println(@str{Sorry, the @(name) must be a positive integer. Please choose a different @(name).})
      get_bound(name)
  | name == "upper bound" && maybe_int <= lower_bound:
      println("The upper bound must be greater than the lower bound!")
      get_bound(name)
  | ~else maybe_int

fun get_guess(lower_bound :: NonnegInt, upper_bound :: NonnegInt):
  def input = stdin.read_line()
  def maybe_int = String.maybe_to_int(input)

  cond:
  | maybe_int !is_a NonnegInt:
      println(@str{Hey, @(maybe_int) is not a positive integer! Please guess again.})
  | maybe_int < lower_bound:
      println(@str{Hey, that guess is less than my lower bound of @(lower_bound). Please guess again.})
      get_guess(lower_bound, upper_bound)
  | maybe_int > upper_bound:
      println(@str{Hey, that guess is greater than my upper bound of @(upper_bound). Please guess again.})
      get_guess(lower_bound, upper_bound)
  | ~else maybe_int

println("I'm going to think of a number, and you will try to guess it. Please choose a lower bound for my number.")
def lower_bound = get_bound("lower bound")

println("Now, please choose an upper bound for my number.")
def upper_bound = get_bound("upper bound", lower_bound)

def target = math.random(lower_bound, upper_bound + 1)
println(@str{Ok, I thought of a number between @(lower_bound) and @(upper_bound). Please enter your guess!})

recur game_loop(attempts :: NonnegInt = 1):
  def guess = get_guess(lower_bound, upper_bound)
  cond
  | guess < target:
      println("Too low, try again.")
      game_loop(attempts + 1)
  | guess > target:
      println("Too high, try again.")
      game_loop(attempts + 1)
  | ~else println(@str{Congratulations, you guessed it in @(attempts) attempts!})
