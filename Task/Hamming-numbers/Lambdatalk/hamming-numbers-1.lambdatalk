{def hamming
 {def hamming.loop
  {lambda {:h :a :i :b :j :c :k :m :n}
   {if {>= :n :m}
    then {A.last :h}
    else {let { {:h {A.set! :n {min :a :b :c} :h}}
                {:a :a} {:i :i}
                {:b :b} {:j :j}
                {:c :c} {:k :k}
                {:m :m} {:n :n}
              } {hamming.loop :h
                 {if {= :a {A.get :n :h}}
                  then {* 2 {A.get {+ :i 1} :h}} {+ :i 1}
                  else :a :i}
                 {if {= :b {A.get :n :h}}
                  then {* 3 {A.get {+ :j 1} :h}} {+ :j 1}
                  else :b :j}
                 {if {= :c {A.get :n :h}}
                  then {* 5 {A.get {+ :k 1} :h}} {+ :k 1}
                  else :c :k}
                 :m
                 {+ :n 1} }
 }}}}
 {lambda {:n}
  {hamming.loop {A.new {S.serie 1 :n}} 2 0 3 0 5 0 :n 1}
}}
-> hamming

{S.map hamming {S.serie 1 20}}
-> 1 2 3 4 5 6 8 9 10 12 15 16 18 20 24 25 27 30 32 36

{hamming 1691}
-> 2125764000  // < 200ms

Currently limited to javascript's integers and by stackoverflow on some computers.
