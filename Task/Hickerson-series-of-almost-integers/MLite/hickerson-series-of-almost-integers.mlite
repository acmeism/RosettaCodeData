local
  fun log (n, k, last = sum, sum) = sum
        | (n, k, last, sum) = log (n, k + 1, sum, sum + ( 1 / (k * n ^ k)))
        | n = log (n, 1, 1, 0);
  val ln2 = log 2
in
  fun hickerson n = (fold (opt *,1) ` iota n) / (2 * ln2 ^ (n+1));
  fun almost_int ([]) = false
               | (h :: h' :: t) where (h <> #".") = almost_int (h' :: t)
               | (h :: h' :: t) = h' = #"0" or h' = #"9"
               | s = almost_int (explode s)
  and show (n, h) = println (n, ntos h, almost_int ` ntos ` h)
         | n = show (n, hickerson n)
end
;
foreach show ` iota 17;
