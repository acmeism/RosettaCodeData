templates q
  def outputFrom: $(1);
  def until: $(2);
  @: [1,1];
  1..$until -> #
  when <$@::length~..> do
    ..|@: $@($ - $@($ - 1)) + $@($ - $@($ - 2));
    $ -> #
  when <$outputFrom..> do
    $@($) !
end q

[1,10] -> q -> '$; ' -> !OUT::write
'
' -> !OUT::write

[1000,1000] -> q -> '$;
' -> !OUT::write

templates countDownSteps
  @: 0;
  def qs: $;
  2..$qs::length -> #
  $@ !
  when <?($qs($) <..~$qs($-1)>)> do @: $@ + 1;
end countDownSteps

[[1, 100000] -> q] -> countDownSteps -> 'Less than previous $; times' -> !OUT::write
