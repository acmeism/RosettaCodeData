scale = 0

/* Format d days after March 21. Assumes March, April, May or June. */
define format(d) {
	if (d > 80) {		print "     Jun ",  d - 71
	} else if (d > 71) { 	print "     Jun 0", d - 71
	} else if (d > 49) {	print "     May ",  d - 40
	} else if (d > 40) {	print "     May 0", d - 40
	} else if (d > 19) {	print "     Apr ",  d - 10
	} else if (d > 10) {	print "     Apr 0", d - 10
	} else {		print "     Mar ",  d + 21
	}
}

/*
 * For year n, print Easter and related holidays.
 * Assumes n >= 1, scale = 0.
 */
define easter(n) {
	auto a, b, d, e, j

	/*
	 * Calculate e = day of Easter, following the 1886 paper,
	 * Kalender-Formeln (Calendar Formulae) by Chr. Zeller.
	 *   http://www.merlyn.demon.co.uk/zel-1886.htm
	 *
	 * With bc, p % 7 gives the wrong result when p < 0. To give the
	 * correct result, this code uses "+ 6 * j" where one might have
	 * used "- j". This works because because 6 == -1 (mod 7).
	 */
	if (n < 1583) {
		/* Julian calendar (before October 1582) */
		b = (19 * (n % 19) + 15) % 30
		d = (b + n + n / 4) % 7
	} else {
		/* Gregorian calendar (after October 1582) */
		j = n / 100
		a = n % 19
		b = (19 * a + 15 + j - (8 * j + 13) / 25 - j / 4) % 30
		d = (b + n + n / 4 + 6 * j + j / 4 + 2) % 7
		if (d == 0 && (b == 29 || (b == 28 && a > 10))) d = 7
	}
	e = b + 7 - d		/* This counts days after 21 March. */

	if(n < 1000) " "
	print n
	z = format(e)		/* Easter */
	z = format(e + 39)	/* Ascension Thursday */
	z = format(e + 49)	/* Pentecost */
	z = format(e + 56)	/* Trinity Sunday */
	z = format(e + 60)	/* Corpus Christi */
	print "\n"
}

print "         Easter     Ascension             Trinity    Corpus\n"
print "  AD     Sunday     Thursday   Pentecost  Sunday     Christi\n"
for (year =  400; year <= 2000; year += 100) z = easter(year)
for (year = 2010; year <= 2020; year +=   1) z = easter(year)
z = easter(2100)
quit
