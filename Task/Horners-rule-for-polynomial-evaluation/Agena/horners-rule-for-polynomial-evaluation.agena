scope # Horner's rule for polynominal evaluation

    # returns the value of the polynominal defined by coefficients,
    #         the coefficients should be in order with x^0 first, x^n last
    local procedure Horner( coefficients :: sequence, x :: number ) :: number
        local xValue := 0;
        for i from size coefficients to 1 by - 1 do xValue := ( xValue * x ) + coefficients[ i ] od;
        return xValue
    end;

    scope # task test case
        local constant coefficients := seq( -19, 7, -4, 6 );
        printf( "%8.2f", Horner( coefficients, 3 ) )
    end
end
