func DigitSum(N, Sum);  \Return sum of digits in N given sum of digits in N-1
int  N, Sum;
[Sum:= Sum+1;
while N > 0 and rem(N/10) = 0 do
   [Sum:= Sum -9;
   N:= N/10;
   ];
return Sum;
];

int Previous, Gap, S, NivenIndex, GapIndex, Niven;
def Tab = 9;

[Previous:= 1;
Gap:= 0;
S:= 0;
NivenIndex:= 0;
GapIndex:= 1;

Text(0, "Index   Gap     Index   Niven^m^j");

Niven:= 1;

while GapIndex <= 23 do
   [S:= DigitSum(Niven, S);
   if rem(Niven/S) = 0 then
      [if Niven > Previous + Gap then
         [Gap:= Niven - Previous;
         IntOut(0, GapIndex);  ChOut(0, Tab);
         IntOut(0, Gap);  ChOut(0, Tab);
         IntOut(0, NivenIndex);  ChOut(0, Tab);
         IntOut(0, Previous);  CrLf(0);
         GapIndex:= GapIndex+1;
         ];
      Previous:= Niven;
      NivenIndex:= NivenIndex+1;
      ];
   Niven:= Niven+1;
   ];
]
