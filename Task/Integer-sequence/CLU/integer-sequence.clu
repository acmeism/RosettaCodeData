% This iterator will generate all integers until the built-in type
% overflows. It is a signed machine-sized integer; so 64 bits on
% a modern machine. After that it will raise an exception.
to_infinity_and_beyond = iter () yields (int)
    i: int := 0
    while true do
        i := i + 1
        yield(i)
    end
end to_infinity_and_beyond

start_up = proc ()
    po: stream := stream$primary_output()

    for i: int in to_infinity_and_beyond() do
        stream$putl(po, int$unparse(i))
    end
end start_up
