module integer_square_root (f=-2) {
    function IntSqrt(x as long long) {
    	long long q=1, z=x, t, r
    	do q*=4&& : until (q>x)
    	while q>1&&
    		q|div 4&&:t=z-r-q:r|div 2&&
    		if t>-1&& then z=t:r+= q
          end while
    	=r
    }
    long i
    print #f, "The integer square root of integers from 0 to 65 are:"
    for i=0 to 65
    	print #f, IntSqrt(i)+" ";
    next
    print #f
    print #f, "Using Long Long Type"
    print #f, "The integer square roots of powers of 7 from 7^1 up to 7^21 are:"
    for i=1 to 21 step 2 {
    	print #f, "IntSqrt(7^"+i+")="+(IntSqrt(7&&^i))+" of 7^"+i+" ("+(7&&^I)+")"
    }
    print #f
    function IntSqrt(x as decimal) {
    	decimal q=1, z=x, t, r
    	do q*=4 : until (q>x)
    	while q>1
    		q/=4:t=z-r-q:r/=2
    		if t>-1 then z=t:r+= q
          end while
    	=r
    }
    print #f, "Using Decimal Type"
    print #f, "The integer square roots of powers of 7 from 7^23 up to 7^33 are:"
    decimal j,p
    for i=23 to 33 step 2 {
    	p=1:for j=1 to i:p*=7@:next
    	print #f, "IntSqrt(7^"+i+")="+(IntSqrt(p))+" of 7^"+i+" ("+p+")"
    }
    print #f


    function IntSqrt(x as double) {
    	double q=1, z=x, t, r
    	do q*=4 : until (q>x)
    	while q>1
    		q/=4:t=z-r-q:r/=2
    		if t>-1 then z=t:r+= q
          end while
    	=r
    }
    print #f, "Using Double Type"
    print #f, "The integer square roots of powers of 7 from 7^19 up to 7^35 are:"
    for i=19 to 35 step 2 {
    	print #f, "IntSqrt(7^"+i+")="+(IntSqrt(7^i))+" of 7^"+i+" ("+(7^i)+")"
    }
    print #f
}
open "" for output as #f  // f = -2 now, direct output to screen
integer_square_root
close #f
open "out.txt" for output as #f
	integer_square_root f
close #f
win "notepad", dir$+"out.txt"
