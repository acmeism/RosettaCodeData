main :: [sys_message]
main = [Stdout "isqrt of 0..65:\n",
        Stdout (table 2 11 [show (isqrt x) | x <- [0..65]]),
        Stdout "\nisqrt of 7^1 .. 7^73:\n",
        Stdout (lay (map isqrtp7 [1,3..73]))]

isqrtp7 :: num->[char]
isqrtp7 x = "isqrt(7^" ++ rjustify 2 (show x) ++ ") = " ++
            rjustify 41 (commatize (isqrt (7^x)))

table :: num->num->[[char]]->[char]
table cw rw xs = lay [concat (map (rjustify cw) r) | r<-split rw xs]

split :: num->[*]->[[*]]
split n [] = []
split n xs = take n xs:split n (drop n xs)

isqrt :: num->num
isqrt x = step qf x 0
          where qf = (hd . dropwhile (<= x) . iterate (*4)) 1
                step 1 z r = r
                step q z r = step q' z' r'', otherwise
                             where q'  = q div 4
                                   t   = z - r - q'
                                   r'  = r div 2
                                   z'  = t, if t>=0
                                       = z, otherwise
                                   r'' = r' + q', if t>=0
                                       = r', otherwise

commatize :: num->[char]
commatize n = show n, if n<1000
            = commatize (n div 1000) ++ ',':part (n mod 1000), otherwise
              where part n = show n,         if n>=100
                           = '0':show n,     if n>=10
                           = '0':'0':show n, otherwise
