$ include "seed7_05.s7i";

const func array integer: executeAllButM (in integer: n, in integer: k, in integer: m) is func
  result
    var array integer: prisoners is [0 .. -1] times 0;
  local
    var integer: killIdx is 0;
    var integer: prisonerNum is 0;
  begin
    for prisonerNum range 0 to pred(n) do
      prisoners &:= prisonerNum;
    end for;
    writeln("Prisoners executed in order:");
    while length(prisoners) > m do
      killIdx := (killIdx + k - 1) rem length(prisoners);
      write(prisoners[killIdx] <& " ");
      ignore(remove(prisoners, killIdx));
    end while;
    writeln;
  end func;

const func string: str (in array integer: intArr) is func
  result
    var string: stri is "";
  local
    var integer: index is 0;
  begin
    for key index range intArr do
      if index <> minIdx(intArr) then
        stri &:= ", ";
      end if;
      stri &:= str(intArr[index]);
    end for;
  end func;

enable_output(array integer);

const proc: main is func
  begin
    writeln("Survivor: " <& executeAllButM(41, 3, 1));
    writeln("Survivors: " <& executeAllButM(41, 3, 3));
  end func;
