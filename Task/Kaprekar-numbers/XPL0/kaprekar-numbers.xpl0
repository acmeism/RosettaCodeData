include c:\cxpl\codes;  \intrinsic 'code' declarations

func Kaprekar(N, B);    \Returns 'true' if N is a Kaprekar number in base B
int  N, B;
real N2, D; int Q, R;
[N2:= sq(float(N));                     \N squared
D:= float(B);                           \(divider)
loop    [Q:= fix(N2/D - Mod(N2,1.));    \get left part (quotient)
        R:= fix(Mod(N2,D));             \get right part (remainder)
        if Q=0 then return false;
        if Q+R=N & R#0 then return true;
        D:= D * float(B);
        ];
];

int N, C;
[Format(1,0);           \show one place before decimal point and none after it
RlOut(0, 1.);           \show Kaprekar numbers less than ten thousand
for N:= 2 to 10_000-1 do
        if Kaprekar(N, 10) then
                [Text(0, " ");  IntOut(0, N)];
CrLf(0);
C:= 1;                  \show count of Kaprekar numbers less than one million
for N:= 2 to 1_000_000-1 do
        if Kaprekar(N, 10) then C:= C+1;
IntOut(0, C);
CrLf(0);
RlOut(0, 1.);           \show Kaprekar numbers less than one million in base 17
for N:= 2 to 1_000_000-1 do
        if Kaprekar(N, 17) then
                [Text(0, " ");  IntOut(0, N)];
CrLf(0);
]
