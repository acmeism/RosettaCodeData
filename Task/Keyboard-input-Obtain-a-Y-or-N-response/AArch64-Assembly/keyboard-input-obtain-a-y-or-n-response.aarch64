/* ARM assembly AARCH64 Raspberry PI 3B */
/*  program enterYN64.s   */

/*******************************************/
/* Constantes                              */
/*******************************************/
/* for this file see task include a file in language AArch64 assembly*/
.include "../includeConstantesARM64.inc"
.equ BUFFERSIZE,    80
//.equ STDIN,    1
//.equ READ,     3

/*******************************************/
/* macros                             */
/*******************************************/
//.include "../../ficmacros64.inc"            // for developper debugging

/*********************************/
/* Initialized data              */
/*********************************/
.data
szMessDebutPgm:    .asciz "Program 64 bits start. \n"
szCarriageReturn:  .asciz "\n"
szMessFinOK:       .asciz "Program normal end. \n"
szMessErreur:      .asciz "Error  !!!\n"
szMessQuest:       .asciz "Enter Y or N :\n"
szMessAnswerY:     .asciz "you have entered Yes.\n"
szMessAnswerN:     .asciz "you have entered No.\n"

.align 8
/*********************************/
/* UnInitialized data            */
/*********************************/
.bss
.align 8

/*********************************/
/*  code section                 */
/*********************************/
.text
.global main
main:
    ldr x0,qAdrszMessDebutPgm
    bl affichageMess            // start message

    ldr x0,qAdrszMessQuest
    bl affichageMess

    bl keyboardInput
    cmp x0,#'Y'
    beq 1f
    cmp x0,#'y'
    beq 1f
    cmp x0,#'N'
    beq 2f
    cmp x0,#'n'
    beq 2f
    b 99f                       // error
1:
    ldr x0,qAdrszMessAnswerY
    bl affichageMess
    b 3f
2:
    ldr x0,qAdrszMessAnswerN
    bl affichageMess
    b 3f
3:

    ldr x0,qAdrszMessFinOK
    bl affichageMess
    b 100f
99:
    ldr x0,qAdrszMessErreur     // error
    bl affichageMess
    mov x0, #1                  // return code error
    b 100f
100:
   mov x8,EXIT
    svc #0                      // system call
qAdrszMessDebutPgm:          .quad szMessDebutPgm
qAdrszMessFinOK:             .quad szMessFinOK
qAdrszMessErreur:            .quad szMessErreur
qAdrszCarriageReturn:        .quad szCarriageReturn
qAdrszMessQuest:             .quad szMessQuest
qAdrszMessAnswerY:           .quad szMessAnswerY
qAdrszMessAnswerN:           .quad szMessAnswerN
/******************************************************************/
/*            string entry                                       */
/******************************************************************/
/* x0 return the first character of human entry */
keyboardInput:
    stp x4,lr,[sp,-16]!
    sub sp,sp,#BUFFERSIZE  // reserve on stack
    mov x4,sp
    mov x0,#STDIN          // Linux input console
    mov x1,x4              // buffer address
    mov x2,#BUFFERSIZE     // buffer size
    mov x8,#READ           // request to read datas
    svc 0                  // call system
    ldrb w0,[x4]           // load first character
100:
    add sp,sp,#BUFFERSIZE  // stack free
    ldp x4,lr,[sp],16
    ret

/***************************************************/
/*      ROUTINES INCLUDE                 */
/***************************************************/
/* for this file see task include a file in language AArch64 assembly*/
.include "../includeARM64.inc"
