using MathProgBase

immutable KPDSupply{S<:String, T<:Integer}
    item::S
    weight::T
    value::T
    quant::T
end
function KPDSupply{S<:String, T<:Integer}(item::S, weight::T, value::T)
    KPDSupply(item, weight, value, one(T))
end

function solve{S<:String, T<:Integer}(gear::Array{KPDSupply{S,T},1},
                                      capacity::T)
    w = map(x->x.weight, gear)
    v = map(x->x.value, gear)
    sol = mixintprog(-v, w', '<', capacity, :Bin, 0, 1)
    sol.status == :Optimal || error("This Problem could not be solved")
    gear[sol.sol .== 1.0]
end
