V p = [1 = 0]
V lvl = [[1]]

F path(n)
   I !n
      R [Int]()
   L n !C :p
      [Int] q
      L(x) :lvl[0]
         L(y) path(x)
            I !(x + y C :p)
               :p[x + y] = x
               q.append(x + y)
      :lvl[0] = q

   R path(:p[n]) [+] [n]

F tree_pow(x, n)
   T Ty = T(x)
   V (r, p) = ([0 = Ty(1), 1 = x], 0)
   L(i) path(n)
      r[i] = r[i - p] * r[p]
      p = i
   R r[n]

F show_pow_i(x, n)
   print("#.: #.\n#.^#. = #.\n".format(n, path(n), x, n, tree_pow(BigInt(x), n)))

F show_pow_f(x, n)
   print("#.: #.\n#.^#. = #.6\n".format(n, path(n), x, n, tree_pow(x, n)))

L(x) 18
   show_pow_i(2, x)
show_pow_i(3, 191)
show_pow_f(1.1, 81)
