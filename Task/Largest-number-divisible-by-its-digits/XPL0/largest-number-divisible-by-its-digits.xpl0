int Digits;     \bit array

func AllDiv(N); \Return 'true' if N is divisible by its digits
int  N, D;
[for D:= 9 downto 2 do
    if 1<<D & Digits then
        if rem(N/D) # 0 then return false;
return true;
];

func Unique(N); \Return 'true' if N contains unique digits
int  N;
[Digits:= 1;    \disallow 0
while N do
    [N:= N/10;
    if 1<<rem(0) & Digits then return false;
    Digits:= 1<<rem(0) ! Digits;
    ];
return true;
];

int N;
[N:= 987654312; \largest possible number divisible by (2*3)
loop    [if Unique(N) then
            if AllDiv(N) then
                [IntOut(0, N);
                quit;
                ];
        N:= N-6;
        ];
]
