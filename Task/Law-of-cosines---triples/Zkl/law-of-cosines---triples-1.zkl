fcn tritri(N=13){
   sqrset:=[0..N].pump(Dictionary().add.fp1(True),fcn(n){ n*n });
   tri90, tri60, tri120 := List(),List(),List();
   foreach a,b in ([1..N],[1..a]){
      aa,bb := a*a,b*b;
      ab,c  := a*b, aa + bb - ab;	// 60*
      if(sqrset.holds(c)){ tri60.append(abc(a,b,c)); continue; }

      c=aa + bb;			// 90*
      if(sqrset.holds(c)){ tri90.append(abc(a,b,c)); continue; }

      c=aa + bb + ab;			// 120*
      if(sqrset.holds(c))  tri120.append(abc(a,b,c));
   }
   List(tri60,tri90,tri120)
}
fcn abc(a,b,c){ List(a,b).sort().append(c.toFloat().sqrt().toInt()) }
fcn triToStr(tri){	// ((c,d,e),(a,b,c))-->"(a,b,c),(c,d,e)"
   tri.sort(fcn(t1,t2){ t1[0]<t2[0] })
      .apply("concat",",").apply("(%s)".fmt).concat(",")
}
