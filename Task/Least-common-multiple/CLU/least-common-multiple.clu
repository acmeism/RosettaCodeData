gcd = proc (m, n: int) returns (int)
    m, n := int$abs(m), int$abs(n)
    while n ~= 0 do m, n := n, m // n end
    return(m)
end gcd

lcm = proc (m, n: int) returns (int)
    if m=0 cor n=0
        then return(0)
        else return(int$abs(m*n) / gcd(m,n))
    end
end lcm

start_up = proc ()
    po: stream := stream$primary_output()
    stream$putl(po, int$unparse(lcm(12, 18)))
end start_up
