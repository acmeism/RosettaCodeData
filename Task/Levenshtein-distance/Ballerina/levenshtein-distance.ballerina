import ballerina/io;

function levenshtein(string s, string t) returns int {
    int ls = s.length();
    int lt = t.length();
    int[][] d = [];
    foreach int i in 0...ls {
        d[i] = [];
        d[i].setLength(lt + 1);
        d[i][0] = i;
    }
    foreach int j in 0...lt { d[0][j] = j; }
    foreach int j in 1...lt {
        foreach int i in 1...ls {
            if s[i - 1] == t[j - 1] {
                d[i][j] = d[i - 1][j - 1];
            } else {
                int min = d[i - 1][j];
                if d[i][j - 1] < min { min = d[i][j - 1]; }
                if d[i - 1][j - 1] < min { min = d[i - 1][j - 1]; }
                d[i][j] = min + 1;
            }
        }
    }
    return d[ls][lt];
}

public function main() {
    io:println(levenshtein("kitten", "sitting"));
    io:println(levenshtein("rosettacode", "raisethysword"));
}
