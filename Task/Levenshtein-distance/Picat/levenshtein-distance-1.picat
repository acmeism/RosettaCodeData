levenshtein(S,T) = Dist =>
  M = 1+S.length,
  N = 1+T.length,

  D = new_array(M,N),

  foreach(I in 1..M)
    D[I,1] := I-1
  end,

  foreach(J in 1..N)
    D[1,J] := J-1
  end,

  foreach(J in 2..N, I in 2..M)
    if S[I-1] == T[J-1] then
      D[I,J] := D[I-1,J-1]            % no operation required
    else
      D[I,J] := min([D[I-1,J  ] + 1,  % a deletion
                     D[I  ,J-1] + 1,  % an insertion
                     D[I-1,J-1] + 1]  % a substitution
                    )
    end
  end,

  Dist = D[M,N].
