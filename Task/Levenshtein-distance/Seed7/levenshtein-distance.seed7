$ include "seed7_05.s7i";

const func integer: levenshteinDistance (in string: s, in string: t) is func
  result
    var integer: distance is 0;
  local
    var array array integer: d is 0 times 0 times 0;
    var integer: i is 0;
    var integer: j is 0;
  begin
    d := [0 .. length(s)] times [0 .. length(t)] times 0;
    for key i range s do
      d[i][0] := i;
    end for;
    for key j range t do
      d[0][j] := j;
      for key i range s do
        if s[i] = t[j] then
          d[i][j] := d[pred(i)][pred(j)];
        else
          d[i][j] := min(min(succ(d[pred(i)][j]), succ(d[i][pred(j)])), succ(d[pred(i)][pred(j)]));
        end if;
      end for;
    end for;
    distance := d[length(s)][length(t)];
  end func;

const proc: main is func
  begin
    writeln("kitten -> sitting: " <& levenshteinDistance("kitten", "sitting"));
    writeln("rosettacode -> raisethysword: " <& levenshteinDistance("rosettacode", "raisethysword"));
  end func;
