string  0;              \use zero-terminated strings

func Min3(A, B, C);     \Return minimum value of the 3 arguments
int  A, B, C, Min;
[Min:= A;
if B < Min then Min:= B;
if C < Min then Min:= C;
return Min;
];

func Lev(S, T);         \Return the Levenshtein distance
char S, T;              \strings
int  LS, LT;            \lengths of strings
int  D(32, 32);         \distance array
int  I, J, Cost;
[for J:= 0 to 31 do     \zero array
    for I:= 0 to 31 do
        D(I, J):= 0;

LS:= 0;  while S(LS) do LS:= LS+1;
LT:= 0;  while T(LT) do LT:= LT+1;

for I:= 1 to LS do
    D(I, 0):= I;
for J:= 1 to LT do
    D(0, J):= J;

for J:= 1 to LT do
    for I:= 1 to LS do
        [Cost:= if S(I-1) = T(J-1) then 0 else 1;
        D(I, J):= Min3( D(I-1, J) + 1,          \deletion
                        D(I, J-1) + 1,          \insertion
                        D(I-1, J-1) + Cost );   \substitution
        ];
return D(LS, LT);
];

[IntOut(0, Lev("kitten", "sitting"));  CrLf(0);
 IntOut(0, Lev("rosettacode", "raisethysword"));  CrLf(0);
]
