Const K  = 7.8e9            ' approx world population
Const n0 = 27               ' number of cases at day 0
Dim Shared As Integer actual(1 To ...) => { _
27, 27, 27, 44, 44, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, _
61, 61, 66, 83, 219, 239, 392, 534, 631, 897, 1350, 2023, _
2820, 4587, 6067, 7823, 9826, 11946, 14554, 17372, 20615, _
24522, 28273, 31491, 34933, 37552, 40540, 43105, 45177, _
60328, 64543, 67103, 69265, 71332, 73327, 75191, 75723, _
76719, 77804, 78812, 79339, 80132, 80995, 82101, 83365, _
85203, 87024, 89068, 90664, 93077, 95316, 98172, 102133, _
105824, 109695, 114232, 118610, 125497, 133852, 143227, _
151367, 167418, 180096, 194836, 213150, 242364, 271106, _
305117, 338133, 377918, 416845, 468049, 527767, 591704, _
656866, 715353, 777796, 851308, 928436, 1000249, 1082054, 1174652 }

Function f1(r As Double) As Double
    Dim As Double sq = 0
    For i As Integer = 1 To Ubound(actual)
        Dim As Double eri = Exp(r*(i-1))
        Dim As Double guess = (n0*eri) / (1+n0*(eri-1) / K)
        Dim As Double diff = guess-actual(i)
        sq += diff*diff
    Next
    Return sq
End Function

Function solve(f As Function (As Double) As Double, guess As Double = 0.5, epsilon As Double = 0.0) As Double
    Dim As Double f0 = f(guess)
    Dim As Double delta = Iif(guess, guess, 1)
    Dim As Double factor = 2 ' double until f0 best then halve until delta <= epsilon
    While delta > epsilon And guess <> guess-delta
        Dim As Double nf = f(guess-delta)
        If nf < f0 Then
            f0 = nf
            guess -= delta
        Else
            nf = f(guess+delta)
            If nf < f0 Then
                f0 = nf
                guess += delta
            Else
                factor = 0.5
            End If
        End If
        delta *= factor
    Wend
    Return guess
End Function

Dim As Double r = solve(@f1)
Dim As Double R0 = Exp(12 * r)
Print Using "r = #.##########, R0 = #.########"; r; R0
Sleep
