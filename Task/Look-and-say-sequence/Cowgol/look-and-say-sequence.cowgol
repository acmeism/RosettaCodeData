include "cowgol.coh";
include "strings.coh";

# Given a string with a member of the look-and-say sequence,
# generate the next member of the sequence.
sub LookSay(cur: [uint8], next: [uint8]) is
    while [cur] != 0 loop
        var count: uint8 := 1;
        var curch: uint8 := [cur];

        # count how many of this character we have
        loop
            cur := @next cur;
            if [cur] != curch then break; end if;
            count := count + 1;
        end loop;

        # add it and its count to the next sequence
        [next] := '0' + count;
        next := @next next;
        [next] := curch;
        next := @next next;
    end loop;
    [next] := 0;
end sub;

# amount of members to print
# (don't forget to enlarge the buffers if you make this bigger)
var members: uint8 := 15;

# define two buffers
var curbuf: uint8[255];
var nextbuf: uint8[255];

# start with "1"
CopyString("1", &curbuf as [uint8]);

# generate and print successive members
while members > 0 loop
    print(&curbuf as [uint8]);
    print_nl();
    LookSay(&curbuf as [uint8], &nextbuf as [uint8]);
    CopyString(&nextbuf as [uint8], &curbuf as [uint8]);
    members := members - 1;
end loop;
