Const luckyMax = 120000

Dim Shared As Integer lucky(luckyMax - 1)

Sub RemoveElement(arr() As Integer, index As Integer)
    If index < Lbound(arr) Or index > Ubound(arr) Then
        Print "Index out of bounds"
        Exit Sub
    End If
    For i As Integer = index To Ubound(arr) - 1
        arr(i) = arr(i + 1)
    Next i
    Redim Preserve arr(Lbound(arr) To Ubound(arr) - 1)
End Sub

Sub filterLucky(lucky() As Integer)
    Dim As Integer n, m, p
    Dim As Integer dellucky()

For n = 2 To Ubound(lucky)
        Redim dellucky(1 To 1)
        For m = lucky(n) To Ubound(lucky) Step lucky(n)
            dellucky(Ubound(dellucky)) = m
            Redim Preserve dellucky(1 To Ubound(dellucky) + 1)
        Next m
        For p = Ubound(dellucky) - 1 To 1 Step -1
            RemoveElement (lucky(), dellucky(p))
        Next p
    Next n
End Sub

Const helptxt = _
"   argument(s)   |  what is displayed  "   & Chr(10) & _
"======================================="   & Chr(10) & _
" j               |  jth lucky number   "   & Chr(10) & _
" j [,] lucky     |  jth lucky number   "   & Chr(10) & _
" j [,] evenLucky |  jth even lucky number" & Chr(10) & _
" j k             |  jth through kth (inclusive) lucky numbers" & Chr(10) & _
" j k lucky       |  jth through kth (inclusive) lucky numbers" & Chr(10) & _
" j k evenLucky   |  jth through kth (inclusive) even lucky numbers" & Chr(10) & _
" j -k            |  all lucky numbers in the range j to k" & Chr(10) & _
" j -k lucky      |  all lucky numbers in the range j to k" & Chr(10) & _
" j -k evenLucky  |  all even lucky numbers in the range j to k "

Sub fatal(msg As String)
    Print msg; Chr(10)
    Print helptxt
    Sleep
    End
End Sub

Sub process(cl() As String)
    If Ubound(cl) = 2 And cl(2) = "," Then cl(2) = ""

    Dim As Integer i, j
    Dim As Integer k, m, n
    Dim As Boolean single_ = true, range = true, oddluck = true

    For i = 1 To Ubound(cl)
        Dim As String cli = cl(i)
        If Val(cli) <> 0 Or cli = "0" Then
            n = Valint(cli)
            If i > 2 Then fatal("too many numbers")
            If i = 1 Then
                If n < 1 Then fatal("first argument must be a positive integer")
                j = n
            Else
                single_ = False
                If n < 0 Then
                    range = False
                    n = -n
                End If
                If n < j Then fatal("second argument cannot be less than first")
                k = n
            End If
        Else
            Select Case Lcase(cli)
            Case "lucky"
                oddluck = true
            Case "evenlucky"
                oddluck = False
            Case Else
                fatal("unrecognised " & cli)
            End Select
            If i <> Ubound(cl) Then fatal(cli & " must be last parameter")
        End If
    Next

    If oddluck Then
        For i = 1 To luckyMax
            lucky(i) = 2 * i - 1
        Next
    Else
        For i = 1 To luckyMax
            lucky(i) = 2 * i
        Next
    End If

    filterLucky(lucky())

    Dim As String evenstr = Iif(oddluck, "", "even ")

    If single_ Then
        If j > Ubound(lucky) Then fatal("the argument, " & j & ", is too big")
        Print "Lucky " & evenstr & "number " & j & " = " & lucky(j)
    Elseif range Then
        If k > Ubound(lucky) Then fatal("the argument, " & k & ", is too big")
        Print "Lucky " & evenstr & "numbers " & j & " to " & k & !" are: \n";
        For i = j To k '- 1
            Print lucky(i);
        Next
        Print
    Else
        If j > lucky(Ubound(lucky) - 1) Then
            fatal("start of range is too big")
        Elseif k > lucky(Ubound(lucky) - 1) Then
            fatal("end of range is too big")
        End If
        m = 0
        While lucky(m) < j
            m += 1
        Wend
        n = m
        While lucky(n) <= k
            n += 1
        Wend
        Print "Lucky " & evenstr & "numbers between " & j & " and " & k & !" are: \n";
        For i = m To n - 1
            Print lucky(i);
        Next
        Print
    End If
End Sub

Sub main()
    Dim As String nargs = Command(-1)
    If Len(nargs) < 1 Then
        Dim As String tests(1 To 8) = {"1 20", "1 20 evenLucky", "20 lucky", "20 evenLucky", "6000 -6100", "6000 -6100 evenLucky", "10000 lucky", "10000 evenLucky"}
        Dim As String testArgs()
        For t As Integer = 1 To Ubound(tests)
            Dim As Integer numArgs = 0
            Dim As String test = tests(t)
            Dim As Integer posic = 1
            While posic <= Len(test)
                Dim As Integer nextPos = Instr(posic, test, " ")
                If nextPos = 0 Then nextPos = Len(test) + 1
                numArgs += 1
                Redim Preserve testArgs(1 To numArgs)
                testArgs(numArgs) = Mid(test, posic, nextPos - posic)
                posic = nextPos + 1
            Wend
            Print
            process(testArgs())
        Next
        Print "tests complete"
        Exit Sub
    Else
        Dim As String testArgs()
        Dim As Integer numArgs = 1
        Do
            Dim As String arg = Command(numArgs)
            If Len(arg) = 0 Then Exit Do
            Redim Preserve testArgs(numArgs)
            testArgs(numArgs) = Command(numArgs)
            numArgs += 1
        Loop

        process(testArgs())
    End If
End Sub

main()

Sleep
