Ludic_numbers: procedure options (main);                /* 18 April 2014 */
   declare V(2:22000) fixed, L(2200) fixed;
   declare (step, i, j, k, n) fixed binary;

Ludic: procedure;
   n = hbound(V,1); k = 1; L(1) = 1;
   do i = 2 to n; V(i) = i; end;

   do forever;

      k = k + 1; L(k), step = V(2);

      do i = 2 to n by step;
         V(i) = 0;
      end;
      call compress;
      if L(k) >= 21511 then leave;
   end;

   put skip list ('The first 25 Ludic numbers are:');
   put skip edit ( (L(i) do i = 1 to 25) ) (F(4));

   k = 0;
   do i = 1 by 1;
      if L(i) < 1000 then k = k + 1; else leave;
   end;

   put skip list ('There are ' || trim(k) || ' Ludic numbers < 1000');
   put skip list ('Six Ludic numbers from the 2000-th:');
   put skip edit ( (L(i) do i = 2000 to 2005) ) (f(7));
   /* Triples are values of the form x, x+2, x+6 */
   put skip list ('Triples are:');
   put skip;
   i = 1;
   put edit ('(', L(1), L(3), L(5), ') ' ) (A, 3 F(4), A);
   do i = 1 by 1 while (L(i+2) <= 250);
      if (L(i) = L(i+1) - 2) & (L(i) = L(i+2) - 6) then
         put edit ('(', L(i), L(i+1), L(i+2), ') ' ) (A, 3 F(4), A);
   end;

compress: procedure;
   j = 2;
   do i = 2 to n;
      if V(i) ^= 0 then do; V(j) = V(i); j = j + 1; end;
   end;
   n = j-1;
end compress;

end Ludic;

call Ludic;

end Ludic_numbers;
