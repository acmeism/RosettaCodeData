go =>
 time(check(ludic)),
 time(check(ludic2)),
 nl.

check(LudicFunc) =>
  println(ludicFunc=LudicFunc),

  Ludic1000 = apply(LudicFunc,1000),

  % first 25
  println(first_25=Ludic1000[1..25]),

  % below 1000
  println(num_below_1000=Ludic1000.length),

  % 2000..2005
  Ludic22000 = apply(LudicFunc,22000),
  println(len_22000=Ludic22000.length),
  println(ludic_2000_2005=[Ludic22000[I] : I in 2000..2005]),

  % Triplets
  Ludic2500 = apply(LudicFunc,2500),
  Triplets=[[N,N+2,N+6] : N in 1..Ludic2500.length,
                                  membchk(N,Ludic2500),
                                  membchk(N+2,Ludic2500),
                                  membchk(N+6,Ludic2500)],
  foreach(Triplet in Triplets)
    println(Triplet)
  end,
  nl.
