val .luhntest = f(.s) {
    val .t = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]
    val .numbers = s2n .s
    val .oddeven = len(.numbers) rem 2

    for[=0] .i of .numbers {
        _for += if(.i rem 2 == .oddeven: .numbers[.i]; .t[.numbers[.i]+1])
    } div 10
}

val .tests = h{
    "49927398716": true,
    "49927398717": false,
    "1234567812345678": false,
    "1234567812345670": true,
}

for .key of .tests {
    val .pass = .luhntest(.key)
    write .key, ": ", .pass
    writeln if(.pass == .tests[.key]: ""; " (LUHN TEST FAILED)")
}
