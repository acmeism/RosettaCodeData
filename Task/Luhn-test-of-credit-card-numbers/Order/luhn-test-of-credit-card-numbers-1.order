#include <order/interpreter.h>

#define ORDER_PP_DEF_8luhn ORDER_PP_FN( \
8fn(8N, 8if(8is_seq(8N), 8luhn_wk(8num_to_seq(8N)), 8false)) )

#define ORDER_PP_DEF_8num_to_seq ORDER_PP_FN( \
8fn(8N, 8seq_push_back(8seq(8seq_last(8N)), 8seq_pop_back(8N))) )

#define ORDER_PP_DEF_8luhn_wk ORDER_PP_FN(                      \
8fn(8N,                                                         \
    8lets((8P, 8unzip(8N, 8nil, 8nil, 8true))                   \
          (8O, 8seq_fold(8plus, 0, 8tuple_at_0(8P)))            \
          (8E, 8seq_fold(8plus, 0,                              \
                         8seq_map(8dig_map, 8tuple_at_1(8P)))), \
          8is_0(8remainder(8plus(8O, 8E), 10)))) )

#define ORDER_PP_DEF_8dig_map ORDER_PP_FN( \
8fn(8X, 8tuple_at(8X, 8tuple(0,2,4,6,8,1,3,5,7,9))) )

#define ORDER_PP_DEF_8unzip ORDER_PP_FN(                             \
8fn(8S, 8L, 8R, 8O,                                                  \
    8if(8is_nil(8S),                                                 \
        8pair(8L, 8R),                                               \
        8if(8O,                                                      \
            8unzip(8seq_tail(8S), 8seq_push_back(8seq_head(8S), 8L), \
                   8R, 8false),                                      \
            8unzip(8seq_tail(8S), 8L,                                \
                   8seq_push_back(8seq_head(8S), 8R), 8true)))) )

ORDER_PP(8seq_to_tuple(
  8seq_map(8luhn, 8seq(8nat(4,9,9,2,7,3,9,8,7,1,6),
                       8nat(4,9,9,2,7,3,9,8,7,1,7),
                       8nat(1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8),
                       8nat(1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,0)))
))
