100H:
BDOS: PROCEDURE(F,A); DECLARE F BYTE, A ADDRESS; GO TO 5; END BDOS;
EXIT: PROCEDURE; GO TO 0; END EXIT;
PRINT: PROCEDURE(S); DECLARE S ADDRESS; CALL BDOS(9,S); END PRINT;

LUHN: PROCEDURE(NUM) BYTE;
    DECLARE MAP DATA (0, 2, 4, 6, 8, 1, 3, 5, 7, 9);
    DECLARE (START, NUM, MASK, TOTAL) ADDRESS;
    DECLARE (CHR BASED NUM, DGT) BYTE;
    START = NUM;

    DO WHILE CHR <> '$'; NUM = NUM + 1; END;
    MASK = NUM := NUM - 1;
    TOTAL = 0;
    DO WHILE NUM >= START;
        DGT = CHR - '0';
        IF NUM XOR MASK THEN DGT = MAP(DGT);
        TOTAL = TOTAL + DGT;
        NUM = NUM - 1;
    END;
    RETURN TOTAL MOD 10 = 0;
END LUHN;

DECLARE TEST (4) ADDRESS, I BYTE;
TEST(0) = .'49927398716$';
TEST(1) = .'49927398717$';
TEST(2) = .'1234567812345678$';
TEST(3) = .'1234567812345670$';

DO I=0 TO LAST(TEST);
    CALL PRINT(TEST(I));
    CALL PRINT(.': $');
    IF LUHN(TEST(I))
        THEN CALL PRINT(.'PASS$');
        ELSE CALL PRINT(.'FAIL$');
    CALL PRINT(.(13,10,'$'));
END;
CALL EXIT;
EOF
