Public Function Modulus10(digits As String) as String
  //
  // Confirm the digits are really, well, digits
  //

  dim validator as new RegEx
  validator.SearchPattern = "\A\d+\z"
  if validator.Search( digits ) is nil then
    //
    // Raise an exception or something
    //
  end if

  static doublingTable() as string = array( "0", "2", "4", "6", "8", "1", "3", "5", "7", "9" )

  dim digitArr() as string = digits.Split( "" )
  for i as integer = digitArr.Ubound downto 0 step 2
    digitArr( i ) = doublingTable( digitArr( i ).Val )
  next

  dim sum as integer
  for each digit as string in digitArr
    sum = sum + digit.Val
  next

  dim check as integer = ( sum * 9 ) mod 10
  return str( check )
End Function

Public Function ValidateMod10(digits As String) as Boolean
  dim checkDigit as string = digits.Right( 1 )
  digits = digits.Left( digits.Len - 1 )

  return Modulus10( digits ) = checkDigit
End Function
