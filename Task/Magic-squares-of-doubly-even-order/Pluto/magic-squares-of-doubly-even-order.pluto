local function magic_square_doubly_even(n)
    assert(n > 0 and n % 4 == 0, "Base must be a positive multiple of 4")

    -- Pattern of count-up vs count-down zones.
    local bits = 0b1001011001101001
    local size = n * n
    local mult = n // 4  -- how many multiples of 4
    local result = {}
    for i = 1, n do
        result[i] = {}
        for j = 1, n do result[i][j] = 0 end
    end
    local i = 0
    for r = 1, n do
        for c = 1, n do
            local bitpos = (c - 1) // mult + (r - 1) // mult * 4
            result[r][c] = ((bits & (1 << bitpos)) != 0) ? i + 1: size - i
            ++i
        end
    end
    return result
end

local n = 8
for magic_square_doubly_even(n) as ia do
    for ia as i do io.write(string.format("%2d  ", i)) end
    print()
end
print($"\nMagic constant {(n * n + 1) * n // 2}")
