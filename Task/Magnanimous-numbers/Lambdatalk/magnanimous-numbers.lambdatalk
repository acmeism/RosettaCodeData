{def isprime
 {def isprime.loop
  {lambda {:n :m :i}
   {if {> :i :m}
    then true
    else {if {= {% :n :i} 0}
    then false
    else {isprime.loop :n :m {+ :i 2}}
 }}}}
 {lambda {:n}
  {if {= :n 1}
   then false
   else {if {or {= :n 2} {= :n 3} {= :n 5} {= :n 7}}
   then true
   else {if {or {< : n 2} {= {% :n 2} 0}}
   then false
   else {isprime.loop :n {sqrt :n} 3}
}}}}}
-> isprime

{def magnanimous
 {def magnanimous.loop
  {lambda {:n :p :r}
   {if {>= :n 10}
    then {let { {:n {floor {/ :n 10}}}
                {:p :p}
                {:r {+ :r {* {% :n 10} :p}}}
              } {if {not {isprime {+ :n :r}}}
                 then false
                 else {magnanimous.loop :n {* :p 10} :r} }
         }
    else true }}}
 {lambda {:n}
  {magnanimous.loop :n 1 0} }}
-> magnanimous

{def mags
 {lambda {:n}
  {S.last
   {S.map {{lambda {:a :i}
           {if {magnanimous :i} then {A.addlast! :i :a} else}}
          {A.new}}
        {S.serie 0 :n}}}}}
-> mags

{A.slice 0 45 {mags 110}}
-> [0,1,2,3,4,5,6,7,8,9,11,12,14,16,20,21,23,25,29,30,32,34,38,41,43,47,49,50,52,56,58,61,65,67,70,74,76,83,85,89,92,94,98,101,110]

{A.slice 240 250 {mags 30000}}
->
[17992,19972,20209,20261,20861,22061,22201,22801,22885,24407]

{A.slice 390 400 {mags 700000}}
->
[486685,488489,515116,533176,551558,559952,595592,595598,600881,602081]

time of CPU in milliseconds
         iPadPro  MacBookAir  MacBookPro
[0,45] 	      30 	      15 	      12
[240,250] 	2430 	    5770 	    3650
[390,400] 117390 	  284230 	  213210
