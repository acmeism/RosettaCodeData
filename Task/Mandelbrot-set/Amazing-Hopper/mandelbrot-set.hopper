#!/usr/bin/hopper
#include <jambo.h>

Main

Initialize '300, ancho, alto'

Set '-2,0.47,-1.12,1.12' Init 'min real, max real, min complex, max complex'

Init zero 'submaxRminR, submaxCminC'

Let ( submaxRminR := 'max real' Minus 'min real')
Let ( submaxCminC := 'maxcomplex' Minus 'mincomplex' )

Init zero 'a2,b2,a,b,ta'

Loop for (i=1, Less equal(i, ancho),++i)

   Let ( ta := Add(min real, Div ( Mul( submaxRminR, Minus one(i)), Minus one(ancho) )) )

   Loop for (j=1, Less equal (j, alto),++j)

       Let ( b := Add( min complex, Div ( Mul (submaxCminC, Minus one(j)), Minus one(alto))) )

       a=ta, a2=a, b2=b

       k=1000, color=256
       Loop if (Sqradd (a,b) Is less than (4), And (k) )
            Add(Sqrdiff(a,b), a2),
            Add(b2, Mul(2, Mul(a, b)))

            Move to (b), Move to (a)

            --color
            --k
       Back
       Color back (color), Print("O")
   Back
   Prnl
Back
Pause

End
