scope /* Find Mian-Chowla numbers: an
       *                    where: ai = 1,
       *                      and: an = smallest integer such that ai + aj is unique
       *                                            for all i, j in 1 .. n && i <= j
       */

    local maxMc, mcCount, mc, isSum := 100, 1, seq(), seq();
    for i while mcCount <= maxMc do
        # assume i will be part of the sequence
        mc[ mcCount ] := i;
        # check the sums
        local isUnique := true
        for mcPos to mcCount while isUnique do
            if isSum[ i + mc[ mcPos ] ] then
                isUnique := false
            fi
        od;
        if isUnique then
            # i is a sequence element - store the sums
            for k to mcCount do isSum[ i + mc[ k ] ] := true od;
            mcCount +:= 1
        fi
    od;

    # print parts of the sequence
    printf( "Mian Chowla sequence elements 1..30:\n" );
    for i to 30 do printf( " %d", mc[ i ] ) od;
    printf( "\nMian Chowla sequence elements 91..100:\n" );
    for i from 91 to 100 do printf( " %d", mc[ i ] ) od

end
