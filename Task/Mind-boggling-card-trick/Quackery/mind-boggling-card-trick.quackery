  [ stack ]                         is discards   (     --> s )
  [ stack ]                         is red-card   (     --> s )
  [ stack ]                         is black-card (     --> s )

  [ dup take rot join swap put ]    is to-pile    ( n s -->   )

  [ $ "" discards put
    $ "" red-card put
    $ "" black-card put
    char R 26 of
    char B 26 of join shuffle
    26 times
     [ behead tuck discards to-pile
       behead rot char R =
       iff red-card else black-card
      to-pile ]
    drop
    discards take witheach
      [ emit sp ] cr
    red-card take shuffle
    black-card take shuffle
    over size over size min random
    say "Swapping " dup echo
    say " cards." cr
    dup dip [ split rot ] split
    dip join rot join
    0 swap witheach
      [ char R = + ]
    0 rot witheach
      [ char B = + ]
    say "The assertion is "
    = iff [ say "true." ]
    else [ say "false." ] cr cr ]   is task       (     -->   )

   5 times task
