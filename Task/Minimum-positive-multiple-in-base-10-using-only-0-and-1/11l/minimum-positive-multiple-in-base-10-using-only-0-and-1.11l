F modp(m, n)
   V result = m % n
   I result < 0
      result += n
   R result

F getA004290(n)
   I n == 1
      R BigInt(1)
   V arr = [[0] * n] * n
   arr[0][0] = 1
   arr[0][1] = 1
   V m = 0
   V ten = BigInt(10)
   V nBi = BigInt(n)
   L
      m++
      I arr[m - 1][Int(modp(-pow(ten, m), nBi))] == 1
         L.break
      arr[m][0] = 1
      L(k) 1 .< n
         arr[m][k] = max(arr[m - 1][k], arr[m - 1][Int(modp(BigInt(k) - pow(ten, m), nBi))])

   V r = pow(ten, m)
   V k = Int(modp(-r, nBi))
   L(j) (m - 1 .< 0).step(-1)
      I arr[j - 1][k] == 0
         r += pow(ten, j)
         k = Int(modp(BigInt(k) - pow(ten, j), nBi))
   I k == 1
      r++
   R r

L(n) Array(1..10) [+] Array(95..105) [+] [297, 576, 594, 891, 909, 999, 1998, 2079, 2251, 2277, 2439, 2997, 4878]
   V result = getA004290(n)
   print(‘A004290(’n‘) = ’result‘ = ’n‘ * ’(result I/ n))
