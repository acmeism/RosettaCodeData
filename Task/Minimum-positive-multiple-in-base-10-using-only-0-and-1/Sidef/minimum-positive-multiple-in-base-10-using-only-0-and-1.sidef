func find_B10(n, b=10) {

    return 0 if (n == 0)

    var P = n.of(-1)
    for (var m = 0; P[0] == -1; ++m) {

        for r in (0..n) {

            next if (P[r] == -1)
            next if (P[r] ==  m)

            with ((powmod(b, m, n) + r) % n) { |t|
                P[t] = m if (P[t] == -1)
            }
        }
    }

    var R = 0
    var r = 0

    do {
        R += b**P[r]
        r = (r - powmod(b, P[r], n))%n
    } while (r > 0)

    return R
}

printf("%5s: %28s  %s\n", 'Number', 'B10', 'Multiplier')

for n in (1..10, 95..105, 297, 576, 594, 891, 909, 999, 1998, 2079, 2251, 2277, 2439, 2997, 4878) {
    printf("%6d: %28s  %s\n", n, var a = find_B10(n), a/n)
}
