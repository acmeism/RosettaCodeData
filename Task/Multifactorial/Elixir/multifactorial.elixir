defmodule RC do
  def multifactorial(n,d) do
    List.foldl(:lists.seq(n,1,-d), 1, fn x,p -> x*p end)
  end
end

Enum.each(1..5, fn d ->
  multifac = Enum.map(1..10, fn n -> RC.multifactorial(n,d) end)
  IO.puts "Degree #{d}: #{inspect multifac}"
end)
