;; wrong - make-vector is evaluated one time - same vector

(define L (make-list 3 (make-vector 4)))
L    â†’ (#(0 0 0 0) #(0 0 0 0) #(0 0 0 0))
(vector-set! (first L ) 1 'ğŸ”´) ;; sets the 'first' vector

L   â†’ (#(0 ğŸ”´ 0 0) #(0 ğŸ”´ 0 0) #(0 ğŸ”´ 0 0))

;; right - three different vectors

(define L(map make-vector (make-list 3 4)))
L    â†’ (#(0 0 0 0) #(0 0 0 0) #(0 0 0 0))
(vector-set! (first L ) 1 'ğŸ”µ) ;; sets the first vector

L   â†’ (#(0 ğŸ”µ 0 0) #(0 0 0 0) #(0 0 0 0)) ;; OK
