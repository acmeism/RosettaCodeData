Many languages have naming conventions regarding the identifiers used in the language, its libraries, and programs written in the language. Such conventions, which may be classified as ''de facto'' or ''de jure'' depending on how they are enforced,  
often take the form of rules regarding prefixes, suffixes, and the use of upper-case and lower-case characters.  

The naming conventions are sometimes a bit haphazard, especially if the language and/or library has gone through periods of evolution. (In this case: give a brief example and description.)

Document (with simple examples where possible) the evolution and current status of these naming conventions. 
For example, name conventions for:
* Procedure and operator names.  (Intrinsic or external)
* Class, Subclass and instance names.
* Built-in versus libraries names.

<br>
If possible, indicate where the naming conventions are implicit, explicit, mandatory or discretionary.  
Any tools that enforced the the naming conventions.  
Any cases where the naming convention as commonly violated.

If possible, indicate where the convention is used to hint at other issues. For example the C standard library uses a prefix of "_" to "hide" raw Operating System calls from the non systems-programmer, whereas Python embeds member functions in between "__" to make a member function "private".

;See also:
* Wikipedia: [[wp:Naming convention (programming)|Naming convention (programming)]]
<br><br>

