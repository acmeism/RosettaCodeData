' gmp version: 17-06-2015
' uses gmp
' compile with: fbc -s console

#Include Once "gmp.bi"
' change the number after max for the maximum n-digits you want (2 to 61)
#Define max 61

Dim As Integer n, n0, n1, n2, n3, n4, n5, n6, n7, n8, n9
Dim As Integer i, j
Dim As UInteger d()
Dim As ZString Ptr gmp_str
gmp_str = Allocate(100)

' create gmp integer array,
Dim d2pow(9, max) As Mpz_ptr
' initialize array and set start value,
For i = 0 To 9
  For j = 0 To max
    d2pow(i, j) = Allocate(Len(__mpz_struct)) : Mpz_init(d2pow(i, j))
  Next j
Next i

' gmp integers for to hold intermediate result
Dim As Mpz_ptr x1 = Allocate(Len(__mpz_struct)) : Mpz_init(x1)
Dim As Mpz_ptr x2 = Allocate(Len(__mpz_struct)) : Mpz_init(x2)
Dim As Mpz_ptr x3 = Allocate(Len(__mpz_struct)) : Mpz_init(x3)
Dim As Mpz_ptr x4 = Allocate(Len(__mpz_struct)) : Mpz_init(x4)
Dim As Mpz_ptr x5 = Allocate(Len(__mpz_struct)) : Mpz_init(x5)
Dim As Mpz_ptr x6 = Allocate(Len(__mpz_struct)) : Mpz_init(x6)
Dim As Mpz_ptr x7 = Allocate(Len(__mpz_struct)) : Mpz_init(x7)
Dim As Mpz_ptr x8 = Allocate(Len(__mpz_struct)) : Mpz_init(x8)

For n = 1 To max

  For i = 1 To 9
    'Mpz_set_ui(d2pow(i,0), 0)
    Mpz_ui_pow_ui(d2pow(i,1), i, n)
    For j = 2 To n
      Mpz_mul_ui(d2pow(i, j), d2pow(i, 1), j)
    Next j
  Next i

  For n9 = n To 0 Step -1
    For n8 = n-n9 To 0 Step -1
      Mpz_add(x8, d2pow(9, n9), d2pow(8, n8))
      For n7 = n-n9-n8 To 0 Step -1
        Mpz_add(x7, x8, d2pow(7, n7))
        For n6 = n-n9-n8-n7 To 0 Step -1
          Mpz_add(x6, x7, d2pow(6, n6))
          For n5 = n-n9-n8-n7-n6 To 0 Step -1
            Mpz_add(x5, x6, d2pow(5, n5))
            For n4 = n-n9-n8-n7-n6-n5 To 0 Step -1
              Mpz_add(x4, x5, d2pow(4, n4))
              For n3 = n-n9-n8-n7-n6-n5-n4 To 0 Step -1
                Mpz_add(x3, x4, d2pow(3, n3))
                For n2 = n-n9-n8-n7-n6-n5-n4-n3 To 0 Step -1
                  Mpz_add(x2, x3, d2pow(2, n2))
                  For n1 = n-n9-n8-n7-n6-n5-n4-n3-n2 To 0 Step -1
                    Mpz_add_ui(x1, x2, n1)
                    n0 = n-n9-n8-n7-n6-n5-n4-n3-n2-n1

                    Mpz_get_str(gmp_str, 10, x1)

                    If Len(*gmp_str) = n Then
                      ReDim d(10)

                      For i = 0 To n-1
                        d(gmp_str[i] - Asc("0")) += 1
                      Next i

                      If n9 = d(9) AndAlso n8 = d(8) AndAlso n7 = d(7) AndAlso n6 = d(6)_
                                   AndAlso n5 = d(5) AndAlso n4 = d(4) AndAlso n3 = d(3)_
                                   AndAlso n2 = d(2) AndAlso n1 = d(1) AndAlso n0 = d(0) Then
                        Print *gmp_str
                      End If
                    ElseIf Len(*gmp_str) < n Then
                      ' all for next loops have a negative step value
                      ' if len(str_x) becomes smaller then n it's time to try the next n value
                      ' GoTo label1   ' old school BASIC
                      ' prefered FreeBASIC style
                      Exit   For, For, For, For, For, For, For, For, For
                      ' leave n1,  n2,  n3,  n4,  n5,  n6,  n7,  n8,  n9 loop
                      ' and continue's after next n9
                    End If

                  Next n1
                Next n2
              Next n3
            Next n4
          Next n5
        Next n6
      Next n7
    Next n8
  Next n9
  ' label1:
Next n

' empty keyboard buffer
While InKey <> "" : Wend
Print : Print "hit any key to end program"
Sleep
End
