function wrap{T<:String,U<:Integer}(str::T, width::U=70, indent::U=4)
    sdent = " "^(indent-1)
    s = sdent
    llen = indent
    for t in split(str, " ")
        s *= " "*t
        llen += length(t) + 1
        width < llen || continue
        s *= "\n"*sdent
        llen = indent
    end
    return rstrip(s)
end

println("Testing num2text")
println()
println("Some easy ones to start with")
println()
tests = [-1:21, 100, 101, 10000, 10001, 1000000, 1010101]
for i in tests
    println(@sprintf("%8d is %s", i, num2text(i)))
end

println()
println("Some larger numbers")
println()
println("The largest signed literal integer (short-scale)")
i = typemax(1)
println("    ", i, " is")
println(wrap(num2text(i)))
println()
println("The largest signed literal integer (long-scale)")
println("    ", i, " is")
println(wrap(num2text(i, false)))
println()
println("The largest unsigned integer (short-scale)")
i = typemax(Uint128)
println("    ", i, " is")
println(wrap(num2text(i)))
println()
println("50! (short-scale)")
i = factorial(big(50))
println("    ", i, " is")
println(wrap(num2text(i)))
println()
println("51! (short-scale)")
i = factorial(big(51))
println("    ", i, " is")
println(wrap(num2text(i)))
println()
println("51! (long-scale)")
println("    ", i, " is")
println(wrap(num2text(i, false)))
