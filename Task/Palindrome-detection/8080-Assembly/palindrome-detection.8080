	org	100h
	jmp	demo
	;;;	Is the $-terminated string at DE a palindrome?
	;;;	Returns: zero flag set if palindrome
palin:	mov	h,d	; Find end of string
	mov	l,e
	mvi	a,'$'
	cmp	m	; The empty string is a palindrome
	rz
pend:	inx	h	; Scan until terminator found
	cmp	m
	jnz	pend
	dcx	h	; Move to last byte of text
ptest:	ldax	d	; Load char at left pointer
	cmp 	m	; Compare to char at right pointer
	rnz		; If not equal, not a palindrome
	inx	d	; Move pointers
	dcx	h
	mov	a,d	; Check if left pointer is before right pointer
	cmp 	h	; High byte
	jc	ptest
	mov	a,e	; Low byte
	cmp	l
	jc	ptest
	xra	a	; Made it to the end - set zero flag
	ret		; Return
	;;;	Test the routine on a few examples
demo:	lxi	h,words	; Word list pointer
loop:	mov	e,m	; Load word pointer
	inx	h
	mov	d,m
	inx	h
	mov	a,e	; Stop when zero reached
	ora	d
	rz
	push	h	; Keep word list pointer
	call	pstr	; Print word
	call	palin	; Check if palindrome
	lxi	d,no
	jnz 	print	; Print "no" if not a palindrome
	lxi	d,yes	; Print "yes" otherwise
print:	call	pstr
	pop	h
	jmp 	loop
	;;;	Print strint using CP/M keeping DEHL registers
pstr:	push	d
	push	h
	mvi	c,9
	call	5
	pop	h
	pop	d
	ret
yes:	db	': yes',13,10,'$'
no:	db	': no',13,10,'$'	
words:	dw	w1,w2,w3,w4,0
w1:	db	'rotor$'
w2:	db	'racecar$'
w3:	db	'level$'
w4:	db	'rosetta$'
