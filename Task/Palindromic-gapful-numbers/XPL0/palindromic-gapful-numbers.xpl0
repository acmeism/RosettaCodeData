func Palindromic(N);    \Return 'true' if N is palindromic
int  N, I, J, S(10);
[I:= 0;
while N > 0 do
    [N:= N/10;
    S(I):= rem(0);
    I:= I+1;
    ];
J:= 0;  I:= I-1;
while J < I do
    [if S(J) # S(I) then return false;
    J:= J+1;  I:= I-1;
    ];
return true;
];

int Lo, Hi, Task, Mul, N, Cnt, Prod;
[Lo:= 0;  Hi:= 20;
for Task:= 1 to 2 do
    [Mul:= 11;
    repeat  N:= 1;  Cnt:= 0;
            loop    [Prod:= N * Mul;
                    if Prod >= 100 then
                      if rem(Prod/10) = Mul/10 then
                        if Palindromic(Prod) then
                            [Cnt:= Cnt+1;
                            if Cnt >= Lo then
                                [IntOut(0, Prod);  ChOut(0, ^ )];
                            if Cnt >= Hi then quit;
                            ];
                        N:= N+1;
                    ];
            CrLf(0);
            Mul:= Mul + 11;
    until   Mul > 99;
    CrLf(0);
    Lo:= 86;  Hi:= 100;
    ];
]
