/* We can also thread the whole mess, which for this case, is a 3.75 speed up
 *   (3 min to 48sec) with 8 cores (Intel 4/4).
 */
fcn palGT(n,N,sz){ palindromicGapfulW(n).drop(N-sz).walk(sz) } // worker thread
foreach N,sz in (T(  T(100_000,1) )){
   println("\nLast %d of %,d palindromic gapful numbers:".fmt(sz,N));
   [1..9].apply('wrap(n){ palGT.future(n,N,sz) })  // create threads
      .apply("noop")		// wait for threads to finish
   : pgpp(_);
}
