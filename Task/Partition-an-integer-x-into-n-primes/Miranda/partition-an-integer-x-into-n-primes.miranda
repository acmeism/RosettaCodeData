main :: [sys_message]
main = [Stdout (lay (map do_test tests))]

tests :: [(num,num)]
tests = [(99809, 1), (18, 2), (19, 3), (20, 4), (2017, 24),
         (22699, 1), (22699, 2), (22699, 3), (22699, 4),
         (40355, 3)]

do_test :: (num,num)->[char]
do_test (x,n)
    = description ++ format_result (partition x n)
      where description = "Partition " ++ show x ++ " with " ++ show n ++ " primes: "


format_result :: maybe [num]->[char]
format_result Nothing = "impossible"
format_result (Just nums) = tl (concat ['+' : show num | num<-nums])

maybe * ::= Nothing | Just *

primes :: [num]
primes = sieve [2..] where sieve (p:x) = p:sieve [n | n<-x; n mod p ~= 0]

partition :: num->num->maybe [num]
partition x n
    = search x n (takewhile (<=x) primes)
      where search x n []     = Nothing
            search x 1 ps     = Just [x], if x $in ps
                              = Nothing, otherwise
            search x n (p:ps) = Just (p : result), if step ~= Nothing
                              = search x n ps, otherwise
                                where step = search (x-p) (n-1) ps
                                      Just result = step

in :: *->[*]->bool
in x []     = False
in x (x:xs) = True
in x (y:xs) = x $in xs
