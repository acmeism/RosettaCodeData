  [ dip number$
    over size -
    space swap of
    swap join echo$ ]          is recho       ( n n -->   )

  [ witheach
     [ 4 recho
       i^ 1+ 10 mod
       0 = if cr ] ]           is prettyecho  (   [ -->   )

  [ primefactors size 1 = ]    is isprime     (   n --> b )

  [ dup [] = if done
    [] [] rot
    witheach
      [ over [] = iff
          join done
        over 0 peek over = iff
          join done
        dip [ nested join ]
        nested ]
    nested join ]              is runs        (   [ --> [ )

  [ stack ]                    is modulus     (     --> s )

  [ dip dup 1 - **
    swap dup 2 < iff
      [ 2drop 1 ] done
    modulus put
    0 temp put
    0 1
    [ 1 temp tally
      tuck +
      modulus share mod
      dup 1 = until
      over 0 = until ]
    2drop
    modulus release
    temp take * ]              is pisanoprime ( n n --> n )

  [ dup 2 < iff
      [ drop 1 ] done
    primefactors
    runs
    [] swap
    witheach
      [ dup 0 peek
        swap size
        pisanoprime
        join ]
    behead swap
    witheach lcm ]             is pisano      (   n --> n )

  [] 15 times
   [ i^ isprime if
       [ i^ 2 pisanoprime
         join ] ]
  prettyecho
  cr cr
  [] 180 times
   [ i^ isprime if
       [ i^ 1 pisanoprime
         join ] ]
  prettyecho
  cr cr
  [] 180 times
    [ i^ 1+ pisano join ]
  prettyecho
