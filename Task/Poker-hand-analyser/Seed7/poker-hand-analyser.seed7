$ include "seed7_05.s7i";
  include "console.s7i";

const string: face is "A23456789TJQK";
const string: suit is "♥♦♣♠";

const func string: analyzeHand (in array integer: faceCnt, in array integer: suitCnt) is func
  result
    var string: handValue is "";
  local
    var boolean: pair1 is FALSE;
    var boolean: pair2 is FALSE;
    var boolean: three is FALSE;
    var boolean: four is FALSE;
    var boolean: flush is FALSE;
    var boolean: straight is FALSE;
    var integer: sequence is 0;
    var integer: x is 0;
  begin
    for x range 1 to 13 do
      case faceCnt[x] of
        when {2}: if pair1 then pair2 := TRUE; else pair1 := TRUE; end if;
        when {3}: three := TRUE;
        when {4}: four := TRUE;
      end case;
    end for;
    for x range 1 to 4 until flush do
      if suitCnt[x] = 5 then
        flush := TRUE;
      end if;
    end for;
    if not pair1 and not three and not four then
      for x range 1 to 13 until sequence = 5 do
        if faceCnt[x] <> 0 then incr(sequence); else sequence := 0; end if;
      end for;
      straight := sequence = 5 or (sequence = 4 and faceCnt[1] <> 0);
    end if;
    if straight and flush then handValue := "straight-flush";
    elsif four            then handValue := "four-of-a-kind";
    elsif pair1 and three then handValue := "full-house";
    elsif flush           then handValue := "flush";
    elsif straight        then handValue := "straight";
    elsif three           then handValue := "three-of-a-kind";
    elsif pair1 and pair2 then handValue := "two-pair";
    elsif pair1           then handValue := "one-pair";
    else                       handValue := "high-card";
    end if;
  end func;

const proc: analyze (in string: cards) is func
  local
    var array integer: faceCnt is 13 times 0;
    var array integer: suitCnt is 4 times 0;
    var string: card is "";
  begin
    for card range split(upper(cards), ' ') do
      incr(faceCnt[pos(face, card[1])]);
      incr(suitCnt[pos(suit, card[2])]);
    end for;
    writeln(cards <& ": " <& analyzeHand(faceCnt, suitCnt));
  end func;

const proc: main is func
  begin
    OUT := STD_CONSOLE;
    analyze("2♥ 2♦ 2♠ k♠ q♦");
    analyze("2♥ 5♥ 7♦ 8♠ 9♦");
    analyze("a♥ 2♦ 3♠ 4♠ 5♠");
    analyze("2♥ 3♥ 2♦ 3♠ 3♦");
    analyze("2♥ 7♥ 2♦ 3♠ 3♦");
    analyze("2♥ 7♥ 7♦ 7♠ 7♣");
    analyze("t♥ j♥ q♥ k♥ a♥");
    analyze("4♥ 4♣ k♣ 5♦ t♣");
    analyze("q♣ t♣ 7♣ 6♣ 4♣");
  end func;
