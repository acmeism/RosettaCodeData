(
  :n 3 :i n sqrt :m true :p
  (i m <=) (
    (n i mod 0 ==) (m @i false @p) when
    i 2 + @i
  ) while p
) :_prime?  ; helper function

(
  (
    ((2 <) (false))
    ((dup even?) (2 ==))
    ((true) (_prime?))
  ) case
) :prime?
