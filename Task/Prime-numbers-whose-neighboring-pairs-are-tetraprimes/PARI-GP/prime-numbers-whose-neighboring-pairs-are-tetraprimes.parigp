tetra(n)=factor(n)[,2]==[1,1,1,1]~
diff(v)=vector(#v-1,i,v[i+1]-v[i])
median(v)=v=vecsort(v); if(#v%2, v[(#v+1)/2], (v[#v/2]+v[#v/2+1])/2) \\ averages the middle two if there are an even number
listPre(lim)=my(v=List()); forprimestep(p=3,lim,4, if(tetra(p-1) && tetra(p-2), listput(v,p))); Vec(v)
listPost(lim)=my(v=List()); forprimestep(p=5,lim,4, if(tetra(p+1) && tetra(p+2), listput(v,p))); Vec(v)
pre5=listPre(1e5) \\ #1
post5=listPost(1e5) \\ #2
#select(p->p%7<3, pre5) \\ #3
#select(p->p%7>4, post5) \\ #3
vecmin(diff(pre5)) \\ #4
vecmin(diff(post5)) \\ #4
median(diff(pre5)) \\ #4
median(diff(post5)) \\ #4
vecmax(diff(pre5)) \\ #4
vecmax(diff(post5)) \\ #4
pre6=listPre(1e6); #pre6 \\ #5
post6=listPost(1e6); #post6 \\ #5
#select(p->p%7<3, pre6) \\ #5
#select(p->p%7>4, post6) \\ #5
vecmin(diff(pre6)) \\ #5
vecmin(diff(post6)) \\ #5
median(diff(pre6)) \\ #5
median(diff(post6)) \\ #5
vecmax(diff(pre6)) \\ #5
vecmax(diff(post6)) \\ #5
pre7=listPre(1e7); #pre7
post7=listPost(1e7); #post7
#select(p->p%7<3, pre7)
#select(p->p%7>4, post7)
vecmin(diff(pre7))
vecmin(diff(post7))
median(diff(pre7))
median(diff(post7))
vecmax(diff(pre7))
vecmax(diff(post7))
