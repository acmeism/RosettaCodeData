Type NumberList
    As Integer count
    As Ulongint values(50000)
End Type

Sub AddToList(Byref list As NumberList, value As Ulongint)
    list.values(list.count) = value
    list.count += 1
End Sub

Function GetPrimes(max As Integer) As NumberList
    Dim primes As NumberList

    If max < 2 Then Return primes

    AddToList(primes, 2)
    Dim As Integer i, j
    For j = 3 To max Step 2
        Dim As Boolean isPrime = True
        For i = 0 To primes.count - 1
            If j Mod primes.values(i) = 0 Then
                isPrime = False
                Exit For
            End If
        Next
        If isPrime Then AddToList(primes, j)
    Next
    Return primes
End Function

Sub SortList(Byref list As NumberList)
    Dim As Integer i, j
    For i = 0 To list.count - 2
        For j = i + 1 To list.count - 1
            If list.values(i) > list.values(j) Then
                Swap list.values(i), list.values(j)
            End If
        Next
    Next
End Sub

Const maxSum = 99
Dim Shared As NumberList descendants(maxSum), ancestors(maxSum)
Dim primes As NumberList = GetPrimes(maxSum)
Dim As Integer p, s, d

' Calculate descendants
For p = 0 To primes.count - 1
    Dim As Ulongint prime = primes.values(p)
    AddToList(descendants(prime), prime)

    For s = 1 To maxSum - prime
        For d = 0 To descendants(s).count - 1
            Dim As Ulongint newDesc = prime * descendants(s).values(d)
            AddToList(descendants(s + prime), newDesc)
        Next
    Next
Next

' Remove last element from prime descendants and 4
For s = 0 To primes.count - 1
    p = primes.values(s)
    If descendants(p).count > 0 Then descendants(p).count -= 1
Next
If descendants(4).count > 0 Then descendants(4).count -= 1

' Calculate totals and print results
Dim As Integer total = 0
For s = 1 To maxSum
    SortList(descendants(s))
    total += descendants(s).count

    ' Calculate ancestors for current s
    For d = 0 To descendants(s).count - 1
        If descendants(s).values(d) <= maxSum Then
            ' Add all ancestors from previous calculations
            For p = 0 To ancestors(s).count - 1
                AddToList(ancestors(descendants(s).values(d)), ancestors(s).values(p))
            Next
            ' Add current value as ancestor
            AddToList(ancestors(descendants(s).values(d)), s)
        End If
    Next

    If s < 21 Or s = 46 Or s = 74 Or s = maxSum Then
        Print Using "##: "; s;
        Print ancestors(s).count; " Ancestors[s]: [";
        For p = 0 To ancestors(s).count - 1
            Print ancestors(s).values(p);
            If p < ancestors(s).count - 1 Then Print ", ";
        Next
        Print "] " & Iif(s = 46 Or s = 74, !"\t", !"\t\t");

        Print Using "#####"; descendants(s).count;
        Print " Descendants[s]: [";
        For p = 0 To Iif(descendants(s).count > 10, 9, descendants(s).count - 1)
            Print descendants(s).values(p);
            If p < Iif(descendants(s).count > 10, 9, descendants(s).count - 1) Then Print ", ";
        Next
        If descendants(s).count > 10 Then Print ", ...";
        Print "]"
    End If
Next

Print !"\nTotal descendants "; total

Sleep
