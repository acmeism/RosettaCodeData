Apollonius: procedure options (main); /* 29 October 2013 */

   define structure
    1 circle,
      2 x float (15),
      2 y float (15),
      2 radius float (15);

   declare (c1 , c2, c3, result) type (circle);

   c1.x = 0; c1.y = 0; c1.radius = 1;
   c2.x = 4; c2.y = 0; c2.radius = 1;
   c3.x = 2; c3.y = 4; c3.radius = 2;

   result = Solve_Apollonius(c1, c2, c3,  1,  1,  1);
   put skip edit ('External tangent:', result.x, result.y, result.radius) (a, 3 f(12,8));

   result = Solve_Apollonius(c1, c2, c3, -1, -1, -1);
   put skip edit ('Internal tangent:', result.x, result.y, result.radius) (a, 3 f(12,8));



Solve_Apollonius: procedure (c1, c2, c3, s1, s2, s3) returns(type(circle));
   declare (c1, c2, c3) type(circle);
   declare res type (circle);
   declare (s1, s2, s3) fixed binary;

   declare (
             v11, v12, v13, v14,
             v21, v22, v23, v24,
             w12, w13, w14,
             w22, w23, w24,
             p, q, m, n, a, b, c, det) float (15);

   v11 = 2*c2.x - 2*c1.x;
   v12 = 2*c2.y - 2*c1.y;
   v13 = c1.x**2 - c2.x**2 + c1.y**2 - c2.y**2 - c1.radius**2 + c2.radius**2;
   v14 = 2*s2*c2.radius - 2*s1*c1.radius;

   v21 = 2*c3.x - 2*c2.x;
   v22 = 2*c3.y - 2*c2.y;
   v23 = c2.x**2 - c3.x**2 + c2.y**2 - c3.y**2 - c2.radius**2 + c3.radius**2;
   v24 = 2*s3*c3.radius - 2*s2*c2.radius;

   w12 = v12/v11;
   w13 = v13/v11;
   w14 = v14/v11;

   w22 = v22/v21-w12;
   w23 = v23/v21-w13;
   w24 = v24/v21-w14;

   p = -w23/w22;
   q = w24/w22;
   m = -w12*P - w13;
   n = w14 - w12*q;

   a = n*n + q*q - 1;
   b = 2*m*n - 2*n*c1.x + 2*p*q - 2*q*c1.y + 2*s1*c1.radius;
   c = c1.x**2 + m*m - 2*m*c1.x + p*p + c1.y**2 - 2*p*c1.y - c1.radius**2;

   det = b*b - 4*a*c;
   res.radius = (-b-sqrt(det)) / (2*a);
   res.x = m + n*res.radius;
   res.y = p + q*res.radius;

   return (res);
end Solve_Apollonius;
end Apollonius;
