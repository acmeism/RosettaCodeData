val .getproper = f(.x) for[=[]] .i of .x \ 2 { if .x div .i: _for ~= [.i] }
val .cntproper = f(.x) for[=0] .i of .x \ 2 { if .x div .i: _for += 1 }

val .listproper = f(.x) {
    if .x < 1: return null
    for .i of .x {
        writeln $"\.i:2; -> ", .getproper(.i)
    }
    writeln()
}

writeln "The proper divisors of the following numbers are :"
.listproper(10)

var .max = 0
var .most = []
for .n in 2 .. 20_000 {
    val .cnt = .cntproper(.n)
    if .cnt == .max {
        .most = more .most, .n
    } else if .cnt > .max {
        .max, .most = .cnt, [.n]
    }
}

writeln $"The following number(s) <= 20000 have the most proper divisors (\.max;)"
writeln .most
