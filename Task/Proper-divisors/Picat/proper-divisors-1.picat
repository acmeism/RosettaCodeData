go =>
  println(11111=proper_divisors(11111)),
  nl,
  foreach(N in 1..10)
    println(N=proper_divisors(N))
  end,
  nl,

  find_most_divisors(20_000),
  nl.

% Proper divisors of number N
proper_divisors(N) = Divisors =>
  Div1 = [ I : I in 1..ceiling(sqrt(N)), N mod I == 0],
  Divisors = (Div1 ++ [N div I : I in Div1]).sort_remove_dups().delete(N).


% Find the number(s) with the most proper divisors below Limit
find_most_divisors(Limit) =>
  MaxN = [],
  MaxNumDivisors = [],
  MaxLen = 1,

  foreach(N in 1..Limit, not prime(N))
    D = proper_divisors(N),
    Len = D.len,
    % Get all numbers with most proper divisors
    if Len = MaxLen then
      MaxN := MaxN ++ [N],
      MaxNumDivisors := MaxNumDivisors ++ [[N=D]]
    elseif Len > MaxLen then
      MaxLen := Len,
      MaxN := [N],
      MaxNumDivisors := [N=D]
    end
  end,

  println(maxN=MaxN),
  println(maxLen=MaxLen),
  nl.
