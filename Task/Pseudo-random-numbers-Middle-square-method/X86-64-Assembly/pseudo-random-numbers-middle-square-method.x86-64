format ELF64 executable 3
entry begin

define seed 675248
define iterations 5

segment executable readable
begin:
    mov rax, seed
    mov rsi, iterations
 .loop0:
    mul rax
    xor rdx, rdx
    mov rdi, 1000000000
    div rdi
    mov rax, rdx
    xor rdx, rdx
    mov rdi, 1000
    div rdi
    mov rdi, rax
    call printq
    dec rsi
    jnz .loop0
 .end:
    mov rax, 60
    xor rdi, rdi
    syscall
printq:
    push rax
    push rsi
    sub rsp, 24
    mov byte[rsp + 23], 0x0a
    mov r8, 22
    mov rsi, 10
    mov rax, rdi
    or  rax, rax
    jns .loop0
    neg rax
 .loop0:
    xor rdx, rdx
    div rsi
    add rdx, '0'
    mov byte[rsp + r8], dl
    or  rax, rax
    jz .check
    dec r8
    jmp .loop0
 .check:
    or rdi, rdi
    jns .out0
    dec r8
    mov byte[rsp + r8], '-'
 .out0:
    mov rax, 1
    mov rdi, 1
    mov rsi, rsp
    add rsi, r8
    mov rdx, 24
    sub rdx, r8
    syscall
    add rsp, 24
    pop rsi
    pop rax
    ret
