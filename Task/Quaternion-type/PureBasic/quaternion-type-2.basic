Procedure.s ShowQ(*x.Quaternion, NN = 0)
  ProcedureReturn "{" + StrF(*x\a, NN) + "," + StrF(*x\b, NN) + "," + StrF(*x\c, NN) + "," + StrF(*x\d, NN) + "}"
EndProcedure

If OpenConsole()
  Define.Quaternion Q0, Q1, Q2, res, res2
  Define.f          r = 7

  Q0\a = 1: Q0\b = 2: Q0\c = 3: Q0\d = 4
  Q1\a = 2: Q1\b = 3: Q1\c = 4: Q1\d = 5
  Q2\a = 3: Q2\b = 4: Q2\c = 5: Q2\d = 6

  PrintN("Q0 = " + ShowQ(Q0, 0))
  PrintN("Q1 = " + ShowQ(Q1, 0))
  PrintN("Q2 = " + ShowQ(Q2, 0))

  PrintN("Normal of Q0 = " + StrF(QNorm(Q0)))
  PrintN("Neg(Q0)  = " + ShowQ(QNeg(Q0, res)))
  PrintN("Conj(Q0) = " + ShowQ(QConj(Q0, res)))
  PrintN("r + Q0   = " + ShowQ(QAddReal(r, Q0, res)))
  PrintN("Q0 + Q1  = " + ShowQ(QAddQuaternion(Q0, Q1, res)))
  PrintN("Q1 + Q2  = " + ShowQ(QAddQuaternion(Q1, Q2, res)))
  PrintN("Q1 * Q2  = " + ShowQ(QMulQuaternion(Q1, Q2, res)))
  PrintN("Q2 * Q1  = " + ShowQ(QMulQuaternion(Q2, Q1, res2)))
  Print( "Q1 * Q2"): If Q_areEqual(res, res2): Print(" = "): Else: Print(" <> "): EndIf: Print( "Q2 * Q1")

  Print(#CRLF$ + #CRLF$ + "Press ENTER to exit"): Input()
  CloseConsole()
EndIf
