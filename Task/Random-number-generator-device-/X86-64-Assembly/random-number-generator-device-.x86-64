;to compile:   nasm -f elf64 rngdevice.asm -o rngdevice.o
;              gcc -z noexecstack -no-pie -s rngdevice.o -o rngdevice
;                               or
;              tcc rngdevice.o -o rngdevice

global main
extern printf

section .text
main:
 .open:
    mov    rax,    2    ;syscall 2. Open.
    mov    rdi, urandom ; filename.
    mov    rsi, 0       ; read only.
    syscall
    mov    qword [file_ptr], rax
 .read:
    mov    rax,    0    ;syscall 0. read.
    mov    rdi, qword [file_ptr] ;file pointer
    mov    rsi, rand_nbr         ;memory to hold number read
    mov    rdx,    4             ; number of bytes to read. 4 is dword
    syscall
 .print_it:
    xor    rax,    rax
    mov    rdi,    format
    mov    esi,    dword [rand_nbr]
    sub    rsp,    8
    call   printf
    add    rsp,    8
 .close:
    mov    rax,    3
    mov    rdi, file_ptr
    syscall
 .return_0:
    xor    rax,    rax
    ret

section .data
urandom:   db    "/dev/urandom", 0 ;random number device
format:    db    "%i", 0x0a, 0
section .bss
file_ptr:  resq    1
rand_nbr:  resd    1
