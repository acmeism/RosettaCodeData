[ dup 1
    [ 2dup > while
      + 1 >>
      2dup / again ]
    drop nip ]                  is sqrt        (   n --> n )

[ dup sqrt 2 ** = not ]         is !square     (   n --> b )

[ number$ reverse
  $->n drop ]                    is revnumber   (   n --> n )

[ 0 swap
  [ base share /mod
    rot + swap
    dup 0 = until ]
  drop ]                        is digitalroot (   n --> n )

 [ true swap
   dup revnumber
   2dup > not iff
     [ 2drop not ] done
   2dup + !square iff
     [ 2drop not ] done
   2dup - !square iff
     [ 2drop not ] done
   2drop ]                     is rare         (   n --> b )

  [ 0
    [ 1+ dup rare if
        [ dup echo cr
          dip [ 1 - ] ]
      over 0 = until ]
    2drop ]                    is echorarenums (   n --> b )

5 echorarenums
