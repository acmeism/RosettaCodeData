module check(a$, id as list){
	Document Export$	
	nl$={
	}
	dim L$() : L$()=piece$(a$,nl$)
	if len(L$())=0 then exit
	for i=0 to len(L$())-1
		a$=trim$(L$(i))
		b$=left$(a$, 1)
		select case b$
		case ";"
			examineValue(true)
		case >"#"
			examineValue(false)
		end select
	next
	Report Export$  // result or Clipboard Export$
	Sub examineValue(NotUsed as boolean)
		local i
		if NotUsed then
			a$=trim$(mid$(a$,2))+" "
			b$=leftpart$(a$," ")
		else
			a$+=" "
			b$=leftpart$(a$," ")
		end if
		a$=trim$(rightpart$(a$," "))
		// optional = removed
		if left$(a$,1)="=" then a$=trim$(mid$(a$,2))
		// if not exist ignore it
		if exist(id,ucase$(b$)) then
			if len(a$)=0 then  // we have a boolean
				Export$=b$+" = "+if$(NotUsed->"false", "true")+nl$
			else.if instr(a$,",")>0 then // multiple value
				local a$()
				a$()=piece$(a$,",")
				for i=0 to len(a$())-1
					Export$=format$("{0}({1}) = {2}",b$,i+1, trim$(a$(i)))+nl$
				next
			else
				Export$=b$+" = "+a$+nl$
			end if
		end if
	End Sub
}
valid=list:="FULLNAME", "FAVOURITEFRUIT", "NEEDSPEELING", "SEEDSREMOVED", "OTHERFAMILY"
binary{
UEsDBBQAAAgIAO8FflU2rdfqSAIAANQDAAARAAAAY29uZmlndXJhdGlvbi50eHRT
VgjJyCxWyCxWSFRIzs9Ly0wvLUosyczPU0jLzElVyMxTKC5JzEtJLErBJp2WX5Sb
WMLLpczLpazgk5mXWqyQlJqemZeXmZeuUJ5ZkqGQqJCRWJyhkF+kkKhQnJqbmZyf
k5+nkFiUqpCZnpdflJqikFSpUJKRqpBYUJCTmQw2G2RYQVF+elFirp6CU05iXrZC
DthskLbEnOJ8PHrhGnm5QMbAPAdSlVaak5OXmJuqUJBYlJibWpJaxMvlFurj4+fo
66rglp+v4JRYlAQSRNaYqJCWWJZfWpRZkqqQVlSaWcLL5eYY5h8a5Bni6hYU6hmi
kJSYl5iXiK4rKT8/JzUxT6EkI7FEoTgjvzQnRSEpVaE4tYSXy8/V1SU4wNXVx9PP
HUkfTEtmsUJyfm5ual5JaopCfmkJL5e1QjBIS5Crr3+YqwtEizNKbOQXgCmQ9yDB
lJdfopCcWAyyMa84sySzLFVHIam0BC0SkUJCWSElsSQRbDmKNoXEvBSF3MRKkOsL
ilKLU4vKiAl4R5ibEnMUUgtLE3OKFYoz0/MUkhPzQCaVFqemKJTkKxSngpxQkorL
XWBHgcxLK8rPBVuJ5FM9eHinFOUXFCCcVZBYVJxapKcAdQqa4VATQH4qScxOVcgt
zSnJLMhBShfFcHeBjQTFRmKxHjiNpyamgNI2KFBKihIzc8AJPSOzJLW4IDE5VSGx
KL80LwXJ/dAYQREDB3RaZmpOSjHITPyZASVc/UM8XIPcHH09fSIVgjJKoSlWR8Ej
saioEp5+AVBLAQItABQAAAgIAO8FflU2rdfqSAIAANQDAAARAAAAAAAAAAAAIAAA
AAAAAABjb25maWd1cmF0aW9uLnR4dFBLBQYAAAAAAQABAD8AAAB3AgAAAAA=} as zip1
Declare zip compressor
method zip,"OpenZipBuf", zip1
method zip, "ExtractOneToBuffer", "configuration.txt" as buf
If true then
         // save buf to file, the load to document as ANSI 1033
	open "configuration.txt" for output as #f
	put #f,buf, 1
	close #f
	document b$ : Load.doc b$, "configuration.txt", 1033
	check b$, valid
else
	check chr$(eval$(buf)), valid
end if
