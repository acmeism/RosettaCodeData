:- module read_a_file_line_by_line.
:- interface.

:- import_module io.

:- pred main(io::di, io::uo) is det.

:- implementation.

:- import_module int, list, require, string, stream.

main(!IO) :-
    io.open_input("test.txt", OpenResult, !IO),
    (
        OpenResult = ok(File),
        stream.input_stream_fold2_state(File, process_line, 0, Result, !IO),
        (
            Result = ok(_)
        ;
            Result = error(_, Error),
            error(io.error_message(Error))
        )
    ;
        OpenResult = error(Error),
        error(io.error_message(Error))
    ).

:- pred process_line(line::in, int::in, int::out, io::di, io::uo) is det.

process_line(line(Line), !LineCount, !IO) :-
    !:LineCount = !.LineCount + 1,
    io.format("%d: %s", [i(!.LineCount), s(Line)], !IO).
