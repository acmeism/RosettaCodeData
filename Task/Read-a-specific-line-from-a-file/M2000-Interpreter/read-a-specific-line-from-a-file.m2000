Module Read_a_specific_line_from_a_file {
	select case rnd
	case <0.4
		document ExportThis$=format$("1.\n2.\n3.\n4.\n5.\n6.\n\n8.")
	case <0.8
		document ExportThis$=format$("1.\n2.\n3.\n4.\n5.\n6.\n7. la cédille (cedilla) – ç\n8.")
	case else
		document ExportThis$=format$("1.\n2.\n3.\n4.\n5.\n6.")
	end select
	' Print len(ExportThis$)=55
	If Doc.par(ExportThis$)>6 then
		If len(Paragraph$(ExportThis$, 7))=0 then
			print "Empty 7th Line"
		else
			Print Paragraph$(ExportThis$, 7)
		end if	
	else
		Print "There is no 7th line"
	end if
	' expot with  varius encoding, BOM included/excluded, line seperators.
	' We use here Ansi codepage 1033
	Save.Doc ExportThis$, "Input.txt", 1033
	' set locale - used from open to convert to UTF16LE (default intenal type)
	locale 1033
	' open used for binary/text ansi/utf16le
	open "input.txt" for input as #f
	integer m=1
	boolean ok
	while not eof(#f) and not ok
		line input #f, L$
		if m=7 then
			ok=true
			if L$="" then
				print "Empty 7th Line"
			else
				Print L$
			end if
		end if
		m++
	end while
	if not ok then Print "There is no 7th line"
	close #f
	' Print filelen("Input.txt")=55
	Document ImportDoc$
	Load.Doc ImportDoc$, "Input.txt", 1033
	' Print len(ImportDoc$)=55
	If Doc.par(ImportDoc$)>6 then
		If len(Paragraph$(ImportDoc$, 7))=0 then
			print "Empty 7th Line"
		else
			Print Paragraph$(ImportDoc$, 7)
		end if
	else
		Print "There is no 7th line"
	end if
}

Read_a_specific_line_from_a_file
