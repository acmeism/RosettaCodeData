include c:\cxpl\codes;  \intrinsic 'code' declarations
def MaxLen = 82;        \maximum length of line that can be stored (incl CR+LF)

func ReadLine(N, L);    \Read line N from input file and return it in string L
int  N;  char L;
int  I, C;
[for I:= 1 to N-1 do    \skip to start of specified line
        repeat  C:= ChIn(1);
                if C = $1A\EOF\ then
                        [Text(0, "File only has ");  IntOut(0, I);
                        Text(0, " lines^M^J");  return false];
        until   C = $0A\LF\;
I:= 0;
repeat  C:= ChIn(1);
        if C = $1A\EOF\ then
                [Text(0, "Line is empty (EOF)^M^L");  return false];
        L(I):= C;  I:= I+1;
until   C=$0A\LF\ or I>=MaxLen;
if I >= MaxLen then Text(0, "Line might be truncated^M^J");
if I = 2 then Text(0, "Line is empty^M^J");
L(I-1):= L(I-1) ! $80;          \terminate string
return true;
];

char LineN(MaxLen);
if ReadLine(7, LineN) then Text(0, LineN)
