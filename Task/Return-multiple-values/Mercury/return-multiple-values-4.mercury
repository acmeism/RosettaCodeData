:- module addsub.

:- interface.
:- import_module io.
:- pred main(io::di, io::uo) is det.

:- implementation.
:- import_module int, list, string.

:- type my_result ---> twin(int, int).

main(!IO) :-
    command_line_arguments(Args, !IO),
    filter_map(to_int, Args, CleanArgs),
    (length(CleanArgs, 2) ->
        X = det_index1(CleanArgs,1),
        Y = det_index1(CleanArgs,2),
        twin(S, D) = addsub(X, Y),
        format("%d + %d = %d\n%d - %d = %d\n",
               [i(X), i(Y), i(S), i(X), i(Y), i(D)], !IO)
    ;
        write_string("Please pass two integers on the command line.\n", !IO)
    ).

:- func addsub(int, int) = my_result.
addsub(X, Y) = twin(X + Y, X - Y).

:- end_module addsub.
