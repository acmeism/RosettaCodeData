MODULE Quad EXPORTS Main;

IMPORT IO, Fmt, Math;

TYPE Roots = ARRAY [1..2] OF LONGREAL;

VAR r: Roots;

PROCEDURE Solve(a, b, c: LONGREAL): Roots =
  VAR sd: LONGREAL := Math.sqrt(b * b - 4.0D0 * a * c);
      x: LONGREAL;
  BEGIN
    IF b < 0.0D0 THEN
      x := (-b + sd) / (2.0D0 * a);
      RETURN Roots{x, c / (a * x)};
    ELSE
      x := (-b - sd) / (2.0D0 * a);
      RETURN Roots{c / (a * x), x};
    END;
  END Solve;

BEGIN
  r := Solve(1.0D0, -10.0D5, 1.0D0);
  IO.Put("X1 = " & Fmt.LongReal(r[1]) & " X2 = " & Fmt.LongReal(r[2]) & "\n");
END Quad.
