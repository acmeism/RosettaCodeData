func DivSum(N, AllDiv); \Return sum of divisors
int  N, AllDiv; \all divisors vs. only prime divisors
int  F, F0, S, Q;
[F:= 2;  F0:= 0;  S:= 0;
repeat  Q:= N/F;
        if rem(0) = 0 then
            [if AllDiv then S:= S+F
            else if F # F0 then
                [S:= S+F;  F0:= F];
            N:= Q;
            ]
        else F:= F+1;
until   F > N;
return S;
];

proc Ruth(AllDiv);      \Show Ruth-Aaron numbers
int  AllDiv;
int  C, S, S0, N;
[C:= 0;  S0:= 0;
N:= 2;
repeat  S:= DivSum(N, AllDiv);
        if S = S0 then
            [IntOut(0, N-1);
            C:= C+1;
            if rem(C/10) = 0 then CrLf(0) else ChOut(0, ^ );
            ];
        S0:= S;
        N:= N+1;
until   C >= 30;
];

[Ruth(true);
CrLf(0);
Ruth(false);
]
