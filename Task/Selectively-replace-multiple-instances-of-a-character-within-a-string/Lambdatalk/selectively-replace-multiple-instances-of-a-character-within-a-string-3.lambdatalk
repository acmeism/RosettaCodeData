{def replacements

 {def replacements.rec
  {lambda {:word :rules}
   {if {A.empty? :rules}
    then {A.join :word}
    else {replacements.rec {A.set! {A.get 2 {A.first :rules}}
                                   {A.get 1 {A.first :rules}}
                                   :word}
                           {A.rest :rules}} }}}

 {lambda {:word :rules}
  {replacements.rec
   {A.split :word}
   {A.map {replacements.rules :word} {A.new :rules}} }}}
-> replacements

{replacements abracadabra aA1 aB2 aC4 aD5 bE1 rF2}
-> AErBcadCbFD
  (AErBcadCbFD)

{replacements caaarrbabad aA1 aB2 aC4 aD5 bE1 rF2}
-> cABarFECbDd
  (cABarFECbDd)
