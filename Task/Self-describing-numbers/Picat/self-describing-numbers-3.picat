self_desc_cp_len(Len, Num) =>

  Sequence = new_list(Len),
  Sequence :: 0..Len-1,

  Len #= sum(Sequence),
  scalar_product({ I : I in 0..Len-1}, Sequence, Len),
  to_num(Sequence,10,Num),
  foreach(I in 0..Len-1) count(I,Sequence,#=,Sequence[I+1]) end,

  solve([ffc,inout], Sequence).

%
% Converts a number Num to/from a list of integer List given a base Base
%
to_num(List, Base, Num) =>
   Len = length(List),
   Num #= sum([List[I]*Base**(Len-I) : I in 1..Len]).
