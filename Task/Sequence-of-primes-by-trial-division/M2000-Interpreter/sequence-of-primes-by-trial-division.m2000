Module primes_by_trial_division{
	inventory Known1=2@, 3@
	Global IsPrime=lambda  Known1 (x as decimal) -> {
		=false
		if exist(Known1, x) then =true : exit
		if x<=5 OR frac(x) then {if x == 2 OR x == 3 OR x == 5 then Append Known1, x  : =true
		Break}
		if frac(x/2) else exit
		if frac(x/3) else exit
		x1=sqrt(x):d = 5@	      	
		do
			if frac(x/d) else exit
			d += 2: if d>x1 then Append Known1, x : =true : exit
			if frac(x/d) else exit
			d += 4: if d<= x1 else Append Known1, x :  =true: exit
		always
	}
	takePrimes=lambda IsPrime, i=2 (n)-> {
		flush
		while n>0: if isPrime(i) then data i: n--
		i++:end while
		=array([])
	}
	report "["+takePrimes(10)#str$(", ")+"]"
	m=takePrimes(90)  // skip 90 primes
	report "["+takePrimes(100)#str$(", ")+"]"
}
primes_by_trial_division
