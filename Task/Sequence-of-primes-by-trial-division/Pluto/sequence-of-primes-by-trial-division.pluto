do  -- get sequences of primes using trial division

    local fmt = require( "fmt" )                     -- RC formatting module

    -- returns true if n is prime, false otherwise
    local function isPrime( n : number ) : boolean
        local result : boolean = n == 2 or ( n % 2 == 1 and n > 1 )
        for k = 3, math.floor( math.sqrt( n ) ), 2 do
            if not result then break end
            result = n % k != 0
        end
        return result
    end

    -- returns the sequence of primes between pStart and pEnd
    local function primeSequence( pStart : number, pEnd : number ) : table
        local result : table <const> = {}
        for p = pStart, pEnd do
            if isPrime( p ) then result:insert( p ) end
        end
        return result
    end

    -- test primeSequence
    fmt.tprint( " %3d", primeSequence(  -9, 174 ), 20, "", "" )
    print( " ..." )
    fmt.tprint( " %3d", primeSequence( 410, 550 ), 20, "", "" )

end
