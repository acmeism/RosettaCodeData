//
//       SIERPINSKY PENTAFLAKE
//
// FutureBasic 7.0.34, August 2025 R.W.
//

Int mySize, margin, radius, pentas, myside
mySize = 560/2: margin = 6: pentas = 6
radius = mySize - 2 * margin
dim as double myScale
//long side
CGFloat red, green, blue
CGFloat deg72
deg72 = 72.0 * PI / 180    // 72 degrees in radians
colorref Colr

// Create main window

void local fn BuildMainWindow(wTag as NSInteger)
  colorref wco
  CGRect r
  SInt32 wndStyleMask
  wco = fn ColorBlack
  wndStyleMask  = NSWindowStyleMaskTitled
  wndStyleMask += NSWindowStyleMaskClosable
  r = fn CGRectMake( 0, 0, 560, 540 )
  window wTag, @" Sierpinsky PentaFlake ", r, wndStyleMask
  WindowSetBackgroundColor(wTag, wco)
  ViewSetFlipped( _WindowContentViewTag, YES )
  windowcenter (wTag)
  AppSetAppearance(fn AppearanceNamed(NSAppearanceNameDarkAqua))
end fn

// Draw the pentagon recursively

local fn DrawPentagon( xpos as int, ypos as int, side as Int, depth as long )
  int i
  Float angle, dist
  angle = 3 * deg72
  if depth == 0
    // get some funky colors
    red = 0.2 + (rnd(65536)-1)/65536.0
    green = 0.2 + (rnd(65536)-1)/65536.0
    blue = 1   // on the bluish hue
    Colr = fn ColorWithRGB(red,green,blue,1.0)
    pen 1.0, Colr
    line xpos, ypos
    Oval fill (xpos, ypos, 1.0, 1.0),Colr
    for i = 0 to 4
      xpos = xpos + int(side * cos(angle))
      ypos = ypos - int(side * sin(angle))
      line to xpos, ypos
      angle = angle + deg72
    next
  else
    side = side * myScale
    dist = side * (1 + cos(deg72) * 2)
    for i = 0 to 4
      xpos = xpos + int(dist * cos(angle))
      ypos = ypos - int(dist * sin(angle))
      fn DrawPentagon( xpos, ypos, side, depth - 1 )
      angle = angle + deg72
    next
  end if
end fn
//
//----------- main ----------------
//

fn BuildMainWindow(1)

myScale = 1 / (2 + cos(deg72) * 2)
myside = radius * sin(pi/5) * 2

fn DrawPentagon( mySize, 3 * margin, myside, pentas-1 )

handleEvents
