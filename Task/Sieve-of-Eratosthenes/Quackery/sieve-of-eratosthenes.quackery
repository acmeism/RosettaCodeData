  [ dup 1
    [ 2dup > while
      + 1 >>
      2dup / again ]
    drop nip ]                  is sqrt         ( n --> n )

  [ stack [ 3 ~ ] constant ]    is primes       (   --> s )

  ( If a number is prime, the corresponding bit on the
    number on the primes ancillary stack is set.
    Initially all the bits are set except for 0 and 1,
    which are not prime numbers by definition.
    "eratosthenes" unsets all bits above those specified
    by it's argument. )

  [ bit ~
    primes take & primes put ]  is -composite   ( n -->   )

  [ bit primes share & 0 != ]   is isprime      ( n --> b )

  [ dup dup sqrt times
      [ i^ 1+
        dup isprime if
          [ dup 2 **
            [ dup -composite
              over +
              rot 2dup >
              dip unrot until ]
            drop ]
        drop ]
     drop
     1+ bit 1 -
     primes take &
     primes put ]                 is eratosthenes ( n -->   )

  100 eratosthenes

  100 times [ i^ isprime if [ i^ echo sp ] ]
