Dim Shared board(Any, Any) As Integer
Dim Shared start(1) As Integer
Dim Shared given(99) As Integer
Dim Shared givenCount As Integer

Sub SortArray(arr() As Integer, n As Integer)
    Dim As Integer i, j
    For i = 0 To n - 2
        For j = 0 To n - 2 - i
            If arr(j) > arr(j + 1) Then Swap arr(j), arr(j + 1)
        Next j
    Next i
End Sub

Sub setup(entrada() As String)
    Dim As Integer nRows = Ubound(entrada)
    Dim As Integer nCols = Len(entrada(0)) \ 3  ' Asumiendo que cada celda tiene 2 caracteres y un espacio
    Dim As String cell
    Dim As Integer valor, r, c, i, j

    ' Inicializar el tablero
    For i = Lbound(board) To Ubound(board)
        For j = Lbound(board) To Ubound(board)
            board(i, j) = -1
        Next j
    Next i

    ' Procesar la entrada
    For r = 0 To nRows - 1
        For c = 0 To nCols - 1
            cell = Mid(entrada(r), c * 3 + 1, 2)
            cell = Trim(cell)
            Select Case cell
            Case "_"
                board(r + 1, c + 1) = 0
            Case "."
                ' No hacer nada, ya estÃ¡ inicializado a -1
            Case Else
                valor = Cint(cell)
                board(r + 1, c + 1) = valor
                given(givenCount) = valor
                givenCount += 1
                If valor = 1 Then
                    start(0) = r + 1
                    start(1) = c + 1
                End If
            End Select
        Next c
    Next r

    SortArray(given(), givenCount)
End Sub

Function solve(r As Integer, c As Integer, n As Integer, sgte As Integer) As Boolean
    If n > given(givenCount - 1) Then Return True

    Dim As Integer back = board(r, c)
    If back <> 0 Andalso back <> n Then Return False
    If back =  0 Andalso given(sgte) = n Then Return False
    If back = n Then sgte += 1

    board(r, c) = n
    For i As Integer = -1 To 1
        For j As Integer = -1 To 1
            If solve(r + i, c + j, n + 1, sgte) Then Return True
        Next j
    Next i

    board(r, c) = back
    Return False
End Function

Sub printSolution()
    For r As Integer = 1 To Ubound(board)
        For c As Integer = 1 To Ubound(board)
            Select Case board(r, c)
            Case -1
                Print " .  ";
            Case Is > 0
                Print Using "##  "; board(r, c);
            Case Else
                Print "__  ";
            End Select
        Next c
        Print
    Next r
End Sub

Sub main()
    Dim entrada(9) As String
    entrada(0) = ".  .  .  .  .  .  .  .  .  .  "
    entrada(1) = ".  _  33 35 _  _  .  .  .  .  "
    entrada(2) = ".  _  _  24 22 _  .  .  .  .  "
    entrada(3) = ".  _  _  _  21 _  _  .  .  .  "
    entrada(4) = ".  _  26 _  13 40 11 .  .  .  "
    entrada(5) = ".  27 _  _  _  9  _  1  .  .  "
    entrada(6) = ".  .  .  _  _  18 _  _  .  .  "
    entrada(7) = ".  .  .  .  .  _  7  _  _  .  "
    entrada(8) = ".  .  .  .  .  .  .  5  _  .  "
    entrada(9) = ".  .  .  .  .  .  .  .  .  .  "

    Redim board(Ubound(entrada)+1, (Len(entrada(0))/3)) As Integer
    setup(entrada())
    Print "Initial board:"
    printSolution()
    Print !"\nSolved board:"
    solve(start(0), start(1), 1, 0)
    printSolution()
End Sub

main()

Sleep
