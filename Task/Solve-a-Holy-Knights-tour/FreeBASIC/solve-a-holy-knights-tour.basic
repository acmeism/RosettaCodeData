Dim Shared As String p1
p1 = ".xxx.....x.xx....xxxxxxxxxx..x.xx.x..xxxsxxxxxx...xx.x.....xxx.."
Dim Shared As Integer p1W = 8
Dim Shared As String p2
p2 = ".....s.x..........x.x.........xxxxx.........xxx.......x..x.x..x..xxxxx...xxxxx..xx.....xx..xxxxx...xxxxx..x..x.x..x.......xxx.........xxxxx.........x.x..........x.x....."
Dim Shared As Integer p2W = 13
Dim Shared As Integer puzzle(), movesCnt, wid
Dim Shared As Integer moves(7, 1) => { {-1, -2}, {1, -2}, {-1, 2}, {1, 2}, {-2, -1}, {-2, 1}, {2, -1}, {2, 1} }

Function isValid(x As Integer, y As Integer) As Boolean
    Return (x > 0 And x <= wid And y > 0 And y <= wid And puzzle(x + y * wid - wid) = 0)
End Function

Function solve(x As Integer, y As Integer, s As Integer) As Boolean
    If s > movesCnt Then Return True

    Dim As Integer i, test, a, b

    For i = 0 To 7
        test = 0
        a = x + moves(i, 0)
        b = y + moves(i, 1)
        If isValid(a, b) Then
            puzzle(a + b * wid - wid) = s
            If solve(a, b, s + 1) Then Return True
            puzzle(a + b * wid - wid) = 0
        End If
    Next

    Return False
End Function

Sub printSolution
    Dim As Integer i, j, lp

    For j = 1 To wid
        For i = 1 To wid
            lp = puzzle(i + j * wid - wid)
            If lp = -1 Then
                Print "   ";
            Else
                Print Using " ##"; lp;
            End If
        Next
        Print
    Next
    Print
End Sub

Dim Shared As Integer sx, sy

Sub fill(pz As String, w As Integer)
    wid = w
    movesCnt = Len(pz)
    Redim puzzle(wid * wid) As Integer
    Dim As Integer i, lp

    For i = 1 To Len(pz)
        lp = Asc(Mid(pz, i, 1))
        If lp = Asc("x") Then
            puzzle(i) = 0
        Elseif lp = Asc(".") Then
            puzzle(i) = -1
            movesCnt -= 1
        Else
            puzzle(i) = 1
            sx = 1 + (i - 1) Mod wid
            sy = (i + wid - 1) \ wid
        End If
    Next
End Sub

' [[ entry point ]] --
Print
fill(p1, p1W)
If solve(sx, sy, 2) Then printSolution
Print
fill(p2, p2W)
If solve(sx, sy, 2) Then printSolution

Sleep
