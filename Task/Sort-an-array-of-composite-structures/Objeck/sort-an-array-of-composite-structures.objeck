use Collection;

class Entry implements Compare {
  @name : String;
  @value : Float;

  New(name : String, value : Float) {
    @name := name;
    @value := value;
  }

  method : public : Compare(rhs : Compare) ~ Int  {
    return @name->Compare(rhs->As(Entry)->GetName());
  }

  method : public : GetName() ~ String {
    return @name;
  }

  method : public : HashID() ~ Int {
    return @name->HashID();
  }

  method : public : ToString() ~ String {
    return "name={$@name}, value={$@value}";
  }
}

class Sorter {
  function : Main(args : String[]) ~ Nil {
    entries := CompareVector->New();
    entries->AddBack(Entry->New("Krypton", 83.798));
    entries->AddBack(Entry->New("Beryllium", 9.012182));
    entries->AddBack(Entry->New("Silicon", 28.0855));
    entries->AddBack(Entry->New("Cobalt", 58.933195));
    entries->AddBack(Entry->New("Selenium", 78.96));
    entries->AddBack(Entry->New("Germanium", 72.64));

    entries->Sort();
    each(i : entries) {
      entries->Get(i)->As(Entry)->ToString()->PrintLine();
    };
  }
}
