/* NetRexx */
options replace format comments java crossref symbols nobinary

runSample(arg)
return

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method sortDisjoint(oldList, indices) public static
  newList = oldList.space()
  if indices.words() > 1 then do -- only do work if we need to
    subList = ArrayList()
    idxList = ArrayList()
    -- pick the input list apart
    loop ix = 1 to indices.words()
      iw = indices.word(ix)
      nw = oldList.word(iw)
      -- protect against bad outcomes...
      if iw > oldList.words() then signal ArrayIndexOutOfBoundsException()
      if iw < 1               then signal ArrayIndexOutOfBoundsException()
      subList.add(nw)
      idxList.add(iw)
      end ix
    Collections.sort(subList) -- sort sublist
    Collections.sort(idxList) -- sort indices
    -- put it all back together
    loop kx = 0 to subList.size() - 1
      kk = Rexx subList.get(kx)
      ii = Rexx idxList.get(kx)
      newList = newList.subword(1, ii - 1) kk newList.subword(ii + 1)
      end kx
    end
  return newList

-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
method runSample(arg) private static
  parse arg vList ',' iList
  if vList = '' then vList = 7 6 5 4 3 2 1 0
  if iList = '' then iList = 7 2 8
  rList = sortDisjoint(vList, iList)
  say 'In: ' vList.space
  say 'Out:' rList.space
  say 'Idx:' iList.space
  return
