get "libhdr"

let max(A, len) = valof
$(  let x = 0
    for i=0 to len-1
        if x<A!i do x := A!i
    resultis x
$)

let beadsort(A, len) be
$(  let size = max(A, len)
    let tvec = getvec(size-1)
    for i=0 to size-1 do tvec!i := 0
    for i=0 to len-1
        for j=0 to A!i-1 do tvec!j := tvec!j + 1
    for i=len-1 to 0 by -1
    $(  let n = 0
        for j=0 to size-1
            if tvec!j > 0
            $(  tvec!j := tvec!j - 1
                n := n + 1
            $)
        A!i := n
    $)
    freevec(tvec)
$)

let write(s, A, len) be
$(  writes(s)
    for i=0 to len-1 do writed(A!i, 4)
    wrch('*N')
$)

let start() be
$(  let array = table 10,1,5,5,9,2,20,6,8,4
    let length = 10
    write("Before: ", array, length)
    beadsort(array, length)
    write("After:  ", array, length)
$)
