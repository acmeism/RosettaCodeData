package Bubble
is

   type Arr is array(Integer range <>) of Integer;

   --  Sorted is a proof function with the definition:
   --    Sorted(A, From_I, To_I)
   --      <->
   --    (for all I in Integer range From_I .. To_I - 1 =>
   --               (A(I) <= A(I + 1))) .
   --
   --# function Sorted (A            : Arr;
   --#                  From_I, To_I : Integer) return Boolean;

   procedure Sort (A : in out Arr);
   --# derives A from *;
   --# post Sorted(A, A'First, A'Last);

end Bubble;


package body Bubble
is
   procedure Sort (A : in out Arr)
   is
      Finished : Boolean;
      Temp     : Integer;
   begin
      if A'Last > A'First then
         loop
            Finished := True;
            for J in Integer range A'First .. A'Last - 1
            --# assert Finished -> Sorted(A, A'First, J);
            loop
               if A (J + 1) < A (J) then
                  Finished := False;
                  Temp := A (J + 1);
                  A (J + 1) := A (J);
                  A (J) := Temp;
               end if;
            end loop;
            --# assert A'Last /= A'First
            --#   and  (Finished -> Sorted(A, A'First, A'Last));
            exit when Finished;
         end loop;
      end if;
   end Sort;

end Bubble;
