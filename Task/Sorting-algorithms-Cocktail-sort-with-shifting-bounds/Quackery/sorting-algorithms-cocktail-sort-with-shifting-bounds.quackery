  [ stack ]                   is limit    (     --> s )
  [ stack ]                   is offset   (     --> s )

  [ offset share +
    2dup 1+ peek dip peek > ] is compare  ( [ n --> b )

  [ offset share +
    dup 1+ unrot
    2dup peek
    dip
      [ 2dup 1+ peek
        unrot poke
        swap ]
    unrot poke ]              is exchange ( [ n --> [ )

  [ dup size 1 - limit put
    0 offset put
    [ 0 swap
      limit share times
        [ dup i^ compare if
          [ i^ exchange
            dip 1+ ] ]
      over while
      limit share times
        [ dup i compare if
          [ i exchange
            dip 1+ ] ]
      over while
      -2 limit tally
      1 offset tally
      nip again ]
   nip
   limit release
   offset release ]          is cocktail (   [ --> [ )

  randomise
  [] 20 times [ 89 random 10 + join ]
  dup echo cr
  cocktail echo
