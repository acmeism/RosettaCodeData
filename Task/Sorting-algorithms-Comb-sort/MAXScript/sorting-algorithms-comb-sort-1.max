fn combSort arr =
(
	local gap = arr.count
	local swaps = 1
	while not (gap == 1 and swaps == 0) do
	(
		gap = (gap / 1.25) as integer
		if gap < 1 do
		(
			gap = 1
		)
		local i = 1
		swaps = 0
		while not (i + gap > arr.count) do
		(
			if arr[i] > arr[i+gap] do
			(
				swap arr[i] arr[i+gap]
				swaps = 1
			)
			i += 1
			
		)
		
		
	)
	return arr
)
