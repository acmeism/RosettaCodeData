#include "share/atspre_staload.hats"

(*------------------------------------------------------------------*)
(* Interface                                                        *)

extern fn {a : t@ype}           (* The "less than" template. *)
insertion_sort$lt : (a, a) -<> bool (* Arguments by value. *)

extern fn {a : t@ype}
insertion_sort
          {n   : int}
          (arr : &array (a, n) >> _,
           n   : size_t n)
    :<!wrt> void

(*------------------------------------------------------------------*)
(* Implementation                                                   *)

implement {a}
insertion_sort {n} (arr, n) =
  let
    macdef lt = insertion_sort$lt<a>

    fun
    sort {i : int | 1 <= i; i <= n}
         .<n - i>.
         (arr : &array (a, n) >> _,
          i   : size_t i)
        :<!wrt> void =
      if i <> n then
        let
          fun
          find_new_position
                    {j : nat | j <= i}
                    .<j>.
                    (arr  : &array (a, n) >> _,
                     elem : a,
                     j    : size_t j)
              :<> [j : nat | j <= i] size_t j =
            if j = i2sz 0 then
              j
            else if ~(elem \lt arr[pred j]) then
              j
            else
              find_new_position (arr, elem, pred j)

        val j = find_new_position (arr, arr[i], i)
      in
        if j < i then
          array_subcirculate<a> (arr, j, i);
        sort (arr, succ i)
      end

    prval () = lemma_array_param arr
  in
    if n <> i2sz 0 then
      sort (arr, i2sz 1)
  end

(*------------------------------------------------------------------*)

implement
insertion_sort$lt<int> (x, y) =
  x < y

implement
main0 () =
  let
    #define SIZE 30
    var i : [i : nat] int i
    var arr : array (int, SIZE)
  in
    array_initize_elt<int> (arr, i2sz SIZE, 0);
    for (i := 0; i < SIZE; i := succ i)
      arr[i] := $extfcall (int, "rand") % 10;

    for (i := 0; i < SIZE; i := succ i)
      print! (" ", arr[i]);
    println! ();

    insertion_sort<int> (arr, i2sz SIZE);

    for (i := 0; i < SIZE; i := succ i)
      print! (" ", arr[i]);
    println! ()
  end
