MODULE MSItDemo;
(* Demo of iterative merge sort *)

IMPORT IO, Lib;
FROM MSIterat IMPORT IterativeMergeSort;

(* Procedure to display the values in the demo array *)
PROCEDURE Display( VAR a : ARRAY OF INTEGER);
VAR
  j, nrInLine : CARDINAL;
BEGIN
  nrInLine := 0;
  FOR j := 0 TO HIGH(a) DO
    IO.WrCard( a[j], 5); INC( nrInLine);
    IF (nrInLine = 10) THEN IO.WrLn; nrInLine := 0; END;
  END;
  IF (nrInLine > 0) THEN IO.WrLn; END;
END Display;

(* Main routine *)
CONST
  ArrayLength = 50;
VAR
  arr : ARRAY [0..ArrayLength - 1] OF INTEGER;
  m : CARDINAL;
BEGIN
  Lib.RANDOMIZE;
  FOR m := 0 TO ArrayLength - 1 DO arr[m] := Lib.RANDOM( 1000); END;
  IO.WrStr( 'Before:'); IO.WrLn; Display( arr);
  IterativeMergeSort( arr);
  IO.WrStr( 'After:'); IO.WrLn; Display( arr);
END MSItDemo.
