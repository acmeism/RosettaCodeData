V tutor = 1B

F pancakesort(&data)
   I data.len <= 1
      R
   I :tutor
      print()
   L(size) (data.len .< 1).step(-1)
      V maxindex = max(0 .< size, key' x -> @data[x])
      I maxindex + 1 != size
         I maxindex != 0
            I :tutor
               print(‘With: #. doflip  #.’.format(data.map(x -> String(x)).join(‘ ’), maxindex + 1))
            data.reverse_range(0 .< maxindex + 1)
         I :tutor
            print(‘With: #.  doflip #.’.format(data.map(x -> String(x)).join(‘ ’), size))
         data.reverse_range(0 .< size)
   I :tutor
      print()

V data = ‘6 7 2 1 8 9 5 3 4’.split(‘ ’)
print(‘Original List: ’data.join(‘ ’))
pancakesort(&data)
print(‘Pancake Sorted List: ’data.join(‘ ’))
