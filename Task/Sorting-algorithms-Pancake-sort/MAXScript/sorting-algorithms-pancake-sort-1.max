fn flipArr arr index =
(
	local new = #()
	for i = index to 1 by -1 do
	(
		append new arr[i]
	)
	join new (for i in (index+1) to arr.count collect arr[i])
	return new
)

fn pancakeSort arr =
(
	if arr.count < 2 then return arr
	else
	(
		for i = arr.count to 1 by -1 do
		(
			local newArr = for n in 1 to i collect arr[n]
			local oldArr = for o in (i+1) to arr.count collect arr[o]
			local maxIndices = for m in 1 to (newArr.count) where (newArr[m] == amax newArr) collect m
			local lastMaxIndex = maxIndices[maxIndices.count]
			newArr = flipArr newArr lastMaxIndex
			newArr = flipArr newArr newArr.count
			arr = join newArr oldArr
		)
		return arr
	)
)
