  [ dip [ 0 over size rot ]
    nested bsearchwith
      [ -1 peek
        dip [ -1 peek ] > ]
    drop ]                       is searchpiles ( [ n --> n )

  [ dup size dup 1 = iff
    [ drop 0 peek ] done
    2 / split
    recurse swap recurse
    merge ]                      is k-merge     (   [ --> [ )

  [ 1 split dip nested
    witheach
      [ 2dup dip dup
        searchpiles
        over size over = iff
          [ 2drop
            nested nested join ]
        else
          [ dup dip
              [ peek swap join
                swap ]
            poke ] ]
    k-merge ]                    is patience-sort ( [ --> [ )


  ' [ 0 1 2 3 4 5 6 7 8 9 ]
  shuffle dup echo cr
  patience-sort echo
