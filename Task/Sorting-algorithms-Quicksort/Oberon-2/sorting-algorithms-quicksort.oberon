MODULE QS;

IMPORT Out;

TYPE
  TItem = INTEGER;

CONST
  N = 10;

VAR
  I:LONGINT;
  A:ARRAY N OF INTEGER;

PROCEDURE Init(VAR A:ARRAY OF TItem);
BEGIN
  A[0] := 4; A[1] := 65; A[2] := 2; A[3] := -31; A[4] := 0;
  A[5] := 99; A[6] := 2; A[7] := 83; A[8] := 782; A[9] := 1;
END Init;

PROCEDURE QuickSort(VAR A:ARRAY OF TItem; Left,Right:LONGINT);
VAR
  I,J:LONGINT;
  Pivot,Temp:TItem;
BEGIN
  I := Left;
  J := Right;
  Pivot := A[(Left + Right) DIV 2];
  REPEAT
    WHILE Pivot > A[I] DO INC(I) END;
    WHILE Pivot < A[J] DO DEC(J) END;
    IF I <= J THEN
      Temp := A[I];
      A[I] := A[J];
      A[J] := Temp;
      INC(I);
      DEC(J);
    END;
  UNTIL I > J;
  IF Left < J THEN QuickSort(A, Left, J) END;
  IF I < Right THEN QuickSort(A, I, Right) END;
END QuickSort;

BEGIN
  Init(A);
  FOR I := 0 TO LEN(A)-1 DO
    Out.Int(A[I], 0); Out.Char(' ');
  END;
  Out.Ln;
  QuickSort(A, 0, LEN(A)-1);
  FOR I := 0 TO LEN(A)-1 DO
    Out.Int(A[I], 0); Out.Char(' ');
  END;
  Out.Ln;
END QS.
