templates quicksort
  templates partial
    def first: $(1);
    def last: $(2);
    def pivot: $@quicksort($first);
    @: $(1) + 1;
    $(2) -> #

    when <..~$@> do
      def limit: $;
      @quicksort($first): $@quicksort($limit);
      @quicksort($limit): $pivot;
      [ $first, $limit - 1 ] !
      [ $limit + 1, $last ] !

    when <?($@quicksort($) <$pivot~..>)> do
      $ - 1 -> #

    when <?($@quicksort($@) <..$pivot>)> do
      @: $@ + 1; $ -> #

    otherwise
      def temp: $@quicksort($@);
      @quicksort($@): $@quicksort($);
      @quicksort($): $temp;
      @: $@ + 1; $ - 1 -> #
  end partial
  @: $;
  [1, $@::length] -> #
  $@ !

  when <?($(1) <..~$(2)>)> do
    $ -> partial -> #
end quicksort

[4,5,3,8,1,2,6,7,9,8,5] -> quicksort -> !OUT::write
