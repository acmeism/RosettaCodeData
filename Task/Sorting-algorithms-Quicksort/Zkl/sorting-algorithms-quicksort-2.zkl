fcn qiSort(list,cmp='<){		// in place quick sort
   fcn(list,left,right,cmp){
      if (left<right){
	 // partition list
	 pivotIndex:=(left+right)/2; // or median of first,middle,last
	 pivot:=list[pivotIndex];
	 list.swap(pivotIndex,right);	// move pivot to end
	 pivotIndex:=left;
	 i:=left; do(right-left){	// foreach i in ([left..right-1])
	    if(cmp(list[i],pivot)){	// not cheap
	       list.swap(i,pivotIndex);
	       pivotIndex+=1;
	    }
	    i+=1;
	 }
	 list.swap(pivotIndex,right);	// move pivot to final place

	 // sort the partitions
         self.fcn(list,left,pivotIndex-1,cmp);
	 return(self.fcn(list,pivotIndex+1,right,cmp));
      }
   }(list,0,list.len()-1,cmp);
   list;
}
