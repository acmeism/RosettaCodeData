  [ 2 * 3 /mod 0 > + ]       is twothirds  ( n --> n )

  [ dup 0 peek over -1 peek
    2dup > iff
      [ rot 0 poke -1 poke ]
    else 2drop ]             is swapends   ( [ --> [ )

  [ swapends
    dup size 3 < if done
    dup size twothirds split
    swap recurse swap join
    dup size 3 / split
    recurse join
    dup size twothirds split
    swap recurse swap join ] is stoogesort ( [ --> [ )

  [] 33 times [ 90 random 10 + join ]
  dup echo cr
  stoogesort echo
