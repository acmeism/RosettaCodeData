For this task, the Stern-Brocot sequence is to be generated by an algorithm similar to that employed in generating the [[Fibonacci sequence]].

# The first and second members of the sequence are both 1:
#* &nbsp; &nbsp; 1, 1
# Start by considering the second member of the sequence
# Sum the considered member of the sequence and its precedent, (1 + 1) = 2, and append it to the end of the sequence:
#* &nbsp; &nbsp; 1, 1, 2
# Append the considered member of the sequence to the end of the sequence:
#* &nbsp; &nbsp; 1, 1, 2, 1
# Consider the next member of the series, (the third member i.e. 2)
# GOTO 3
#*
#* &nbsp; &nbsp; &nbsp; &nbsp; ─── Expanding another loop we get: ───
#*
# Sum the considered member of the sequence and its precedent, (2 + 1) = 3, and append it to the end of the sequence:
#* &nbsp; &nbsp; 1, 1, 2, 1, 3
# Append the considered member of the sequence to the end of the sequence:
#* &nbsp; &nbsp; 1, 1, 2, 1, 3, 2
# Consider the next member of the series, (the fourth member i.e. 1)


;The task is to:
* Create a function/method/subroutine/procedure/... to generate the Stern-Brocot sequence of integers using the method outlined above.
* Show the first fifteen members of the sequence. (This should be: 1, 1, 2, 1, 3, 2, 3, 1, 4, 3, 5, 2, 5, 3, 4)
* Show the (1-based) index of where the numbers 1-to-10 first appear in the sequence.
* Show the (1-based) index of where the number 100 first appears in the sequence.
* Check that the greatest common divisor of all the two consecutive members of the series up to the 1000<sup>th</sup> member, is always one.

<br>Show your output on this page.


;Related tasks:
:* &nbsp; [[Fusc sequence]].
:* &nbsp; [[Continued fraction/Arithmetic]]


;Ref:
* [https://www.youtube.com/watch?v=DpwUVExX27E Infinite Fractions - Numberphile] (Video).
* [http://www.ams.org/samplings/feature-column/fcarc-stern-brocot Trees, Teeth, and Time: The mathematics of clock making].
* [https://oeis.org/A002487 A002487] The On-Line Encyclopedia of Integer Sequences.
<br><br>

