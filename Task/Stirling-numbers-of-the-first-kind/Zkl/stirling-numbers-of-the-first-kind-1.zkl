fcn stirling1(n,k){
   var seen=Dictionary();	// cache for recursion
   if(n==k==0)      return(1);
   if(n==0 or k==0) return(0);

   z1,z2 := "%d,%d".fmt(n-1,k-1), "%d,%d".fmt(n-1,k);
   if(Void==(s1 := seen.find(z1))){ s1 = seen[z1] = stirling1(n - 1, k - 1) }
   if(Void==(s2 := seen.find(z2))){ s2 = seen[z2] = stirling1(n - 1, k)     }
   (n - 1)*s2 + s1;   // n is first to cast to BigInt (if using BigInts)
}
