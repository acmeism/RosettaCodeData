main =>
    N = 98,
    PD = new_array(N*N), % PD[I] = no. of product decompositions of I
    foreach(I in 1..N*N) PD[I] = 0 end,
    foreach(X in 2..N-1, Y in X+1..N) PD[X * Y] := PD[X * Y] + 1 end,

    % Fact 1: S says "P does not know X and Y.", i.e.
    % For every possible sum decomposition of the number X+Y, the product has in turn more than one product decomposition:
    Solutions1 = [[X,Y] : X in 2..N-1, Y in X+1..100-X, foreach(XX in 2..X+Y-3) PD[XX * (X+Y-XX)] > 1 end],

    % Fact 2: P says "Now I know X and Y.", i.e.
    % The number X*Y has only one product decomposition for which fact 1 is true:
    Solutions2 = [[X,Y] : [X,Y] in Solutions1, foreach([XX,YY] in Solutions1, XX * YY = X * Y) XX = X, YY = Y end],

    % Fact 3: S says "Now I also know X and Y.", i.e.
    % The number X+Y has only one sum decomposition for which fact 2 is true.
    Solutions3 = [[X,Y] : [X,Y] in Solutions2, foreach([XX,YY] in Solutions2, XX + YY = X + Y) XX = X, YY = Y end],

    println(Solutions3).
