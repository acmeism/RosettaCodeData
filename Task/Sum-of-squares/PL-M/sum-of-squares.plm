100H: /* CALCULATE THE SUM OF THE SQUARES OF THE ELEMENTS OF AN ARRAY       */

   /* CP/M BDOS SYSTEM CALL AND I/O ROUTINES                                */
   BDOS: PROCEDURE( FN, ARG ); DECLARE FN BYTE, ARG ADDRESS; GOTO 5; END;
   PR$CHAR:   PROCEDURE( C ); DECLARE C BYTE;    CALL BDOS( 2, C );  END;
   PR$STRING: PROCEDURE( S ); DECLARE S ADDRESS; CALL BDOS( 9, S );  END;
   PR$NL:     PROCEDURE;   CALL PR$CHAR( 0DH ); CALL PR$CHAR( 0AH ); END;
   PR$NUMBER: PROCEDURE( N ); /* PRINTS A NUMBER IN THE MINIMUN FIELD WIDTH */
      DECLARE N ADDRESS;
      DECLARE V ADDRESS, N$STR ( 6 )BYTE, W BYTE;
      V = N;
      W = LAST( N$STR );
      N$STR( W ) = '$';
      N$STR( W := W - 1 ) = '0' + ( V MOD 10 );
      DO WHILE( ( V := V / 10 ) > 0 );
         N$STR( W := W - 1 ) = '0' + ( V MOD 10 );
      END;
      CALL PR$STRING( .N$STR( W ) );
   END PR$NUMBER;

   /* TASK                                                                  */

   /* RETURNS THE SUM OF THE SQUARES OF THE ARRAY AT A$PTR, UB MUST BE THE  */
   /*         UB MUST BE THE UPPER-BOUND OF THE ARRAY                       */
   SUM$OF$SQUARES: PROCEDURE( A$PTR, UB )ADDRESS;
      DECLARE ( A$PTR, UB ) ADDRESS;
      DECLARE ( I, SUM    ) ADDRESS;
      DECLARE A BASED A$PTR ( 0 )ADDRESS;
      SUM = 0;
      DO I = 0 TO UB;
         SUM = SUM + ( A( I ) * A( I ) );
      END;
      RETURN SUM;
   END SUM$OF$SQUARES;

   DECLARE VALUES ( 5 )ADDRESS INITIAL( 1, 2, 3, 4, 5 );

   CALL PR$NUMBER( SUM$OF$SQUARES( .VALUES, LAST( VALUES ) ) );

EOF
