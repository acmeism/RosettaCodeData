fcn cubeSum{
   heap,n:=Heap(fcn([(a,_)],[(b,_)]){ a<=b }), 1;  // heap cnt maxes out @ 244
   while(1){
      while(heap.empty or heap.top[0]>n.pow(3)){ # could also pre-calculate cubes
	 heap.push(T(n.pow(3) + 1, n,1));
	 n+=1;
      }
      s,x,y:= sxy:=heap.pop();
      vm.yield(sxy);
      y+=1;
      if(y<x)    # should be y <= x?
	 heap.push(T(x.pow(3) + y.pow(3), x,y));
   }
}
fcn taxis{
   out:=List(T(0,0,0));
   foreach s in (Utils.Generator(cubeSum)){
      if(s[0]==out[-1][0]) out.append(s);
      else{
	 if(out.len()>1) vm.yield(out);
	 out.clear(s)
      }
   }
}
n:=0;
foreach x in (Utils.Generator(taxis)){
   n += 1;
   if(n >= 2006) break;
   if(n <= 25 or n >= 2000) println(n,": ",x);
}
