.model small
.stack 1024

.data

.code

start:

mov al,7
call PrintChar

mov ax,4C00h
int 21h            ;return to DOS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
PrintChar:		;Print AL to screen
	push cx
	push bx
	push ax
		cmp al,7
		jne skipBEL
			call RingBell
			jmp done_PrintChar
skipBEL:
		mov bl,15	;text color will be white
		mov ah,0Eh			
		int 10h		;prints ascii code stored in AL to the screen (this is a slightly different putc syscall)	
done_PrintChar:
	pop ax
	pop bx
	pop cx
	ret
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
RingBell:
	push ax
	push cx
	push dx
        ;if BEL is the argument passed to PrintChar, it will call this function and not actually print anything or advance the cursor
        ;this uses the built-in beeper to simulate a beep

		mov al,10110110b	;select counter 2, 16-bit mode
		out 43h, al
		
		mov ax,0C00h		;set pitch of beep - this is somewhat high but isn't too annoying. Feel free to adjust this value
		out 42h,al
		mov al,ah
		out 42h,al


		mov al,3		
		out 61h,al			;enable sound and timer mode

		mov cx,0FFFFh
		mov dx,0Fh			;set up loop counters
		
beepdelay:					;delay lasts about half a second
		loop beepdelay
		mov cx,0FFFFh
		dec dx
		jnz beepdelay
		
		mov al,0			;mute
		out 61h,al			;cut the sound

                ; mov bl,15
                ; mov ax,0E20h                  ;print a spacebar to the terminal
                ; int 10h                       ;uncomment these 3 lines if you want the BEL to "take up space" in the output stream
	pop dx
	pop cx
	pop ax
	ret

end start
