import util.

go =>
  Jobs = read_file_lines("mlijobs.txt"),
  Counts = asum(Jobs).to_array, % convert to array for speed
  Max = max(Counts),
  MaxIxs = [I : I in 1..Counts.length, Counts[I] == Max],
  printf("Max number of licenses is %d.\n", Max),
  printf("Interval:\n%w\n", [Jobs[J,15..33] : J in MaxIxs].join("\n")),
  nl.

% Accumulative sum
asum(List) = Asum =>
  asum(List,[],Asum).
asum([],Asum0,Asum) =>
  Asum = Asum0.reverse().
asum([H|T],[],Asum) =>
  C = cond(slice(H,9,11) == "OUT", 1, -1),
  asum(T,[C],Asum).
asum([H|T],Asum0,Asum) =>
  Asum0 = [Last|_],
  C = cond(slice(H,9,11) == "OUT", 1, -1),
  asum(T,[Last+C|Asum0],Asum).
