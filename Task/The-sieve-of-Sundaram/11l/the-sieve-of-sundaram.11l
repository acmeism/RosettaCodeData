F sieve_of_Sundaram(nth, print_all = 1B)
   ‘
    The sieve of Sundaram is a simple deterministic algorithm for finding all the
    prime numbers up to a specified integer. This function is modified from the
    Wikipedia entry wiki/Sieve_of_Sundaram, to give primes to their nth rather
    than the Wikipedia function that gives primes less than n.
   ’
   assert(nth > 0, ‘nth must be a positive integer’)
   V k = Int((2.4 * nth * log(nth)) I/ 2)
   V integers_list = [1B] * k
   L(i) 1 .< k
      V j = Int64(i)
      L i + j + 2 * i * j < k
         integers_list[Int(i + j + 2 * i * j)] = 0B
         j++
   V pcount = 0
   L(i) 1 .. k
      I integers_list[i]
         pcount++
         I print_all
            print(f:‘{2 * i + 1:4}’, end' ‘ ’)
            I pcount % 10 == 0
               print()

         I pcount == nth
            print("\nSundaram primes start with 3. The "nth‘th Sundaram prime is ’(2 * i + 1)".\n")
            L.break

sieve_of_Sundaram(100, 1B)

sieve_of_Sundaram(1000000, 0B)
