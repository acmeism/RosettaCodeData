type Employee(name,id,salary,department) with Lookup

func Employee.ToString() {
    "$\(this.salary) (name: \(this.name), id: \(this.id), department: \(this.department)"
}

let employees = [
    Employee("Tyler Bennett","E10297",32000,"D101"),
    Employee("John Rappl","E21437",47000,"D050"),
    Employee("George Woltman","E00127",53500,"D101"),
    Employee("Adam Smith","E63535",18000,"D202"),
    Employee("Claire Buckman","E39876",27800,"D202"),
    Employee("David McClellan","E04242",41500,"D101"),
    Employee("Rich Holcomb","E01234",49500,"D202"),
    Employee("Nathan Adams","E41298",21900,"D050"),
    Employee("Richard Potter","E43128",15900,"D101"),
    Employee("David Motsinger","E27002",19250,"D202"),
    Employee("Tim Sampair","E03033",27000,"D101"),
    Employee("Kim Arlich","E10001",57000,"D190"),
    Employee("Timothy Grove","E16398",29900,"D190")
]

func topNSalaries(n) {
    //We sort employees based on salary
    employees.Sort((x,y) => y.salary - x.salary)
    let max =
        if n > employees.Length() - 1 {
            employees.Length() - 1
        } else {
            n
        }
    for i in 0..max {
        yield employees[i]
    }
}

var seq = topNSalaries(5)

for e in seq {
    print(e)
}
