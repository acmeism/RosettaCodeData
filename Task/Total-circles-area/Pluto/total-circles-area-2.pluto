local class point
    function __construct(public x, public y) end
end

local class circle
    function __construct(public x, public y, public r) end
end

local circles = {
    new circle( 1.6417233788,  1.6121789534, 0.0848270516),
    new circle(-1.4944608174,  1.2077959613, 1.1039549836),
    new circle( 0.6110294452, -0.6907087527, 0.9089162485),
    new circle( 0.3844862411,  0.2923344616, 0.2375743054),
    new circle(-0.2495892950, -0.3832854473, 1.0845181219),
    new circle( 1.7813504266,  1.6178237031, 0.8162655711),
    new circle(-0.1985249206, -0.8343333301, 0.0538864941),
    new circle(-1.7011985145, -0.1263820964, 0.4776976918),
    new circle(-0.4319462812,  1.4104420482, 0.7886291537),
    new circle( 0.2178372997, -0.9499557344, 0.0357871187),
    new circle(-0.6294854565, -1.3078893852, 0.7653357688),
    new circle( 1.7952608455,  0.6281269104, 0.2727652452),
    new circle( 1.4168575317,  1.0683357171, 1.1016025378),
    new circle( 1.4637371396,  0.9463877418, 1.1846214562),
    new circle(-0.5263668798,  1.7315156631, 1.4428514068),
    new circle(-1.2197352481,  0.9144146579, 1.0727263474),
    new circle(-0.1389358881,  0.1092805780, 0.7350208828),
    new circle( 1.5293954595,  0.0030278255, 1.2472867347),
    new circle(-0.5258728625,  1.3782633069, 1.3495508831),
    new circle(-0.1403562064,  0.2437382535, 1.3804956588),
    new circle( 0.8055826339, -0.0482092025, 0.3327165165),
    new circle(-0.6311979224,  0.7184578971, 0.2491045282),
    new circle( 1.4685857879, -0.8347049536, 1.3670667538),
    new circle(-0.6855727502,  1.6465021616, 1.0593087096),
    new circle( 0.0152957411,  0.0638919221, 0.9771215985)
}

local sq = |v| -> v * v

local function area_scan(precision)

    local function sect(c, y)
        local dr = math.sqrt(sq(c.r) - sq(y - c.y))
        return new point(c.x - dr, c.x + dr)
    end

    local cm1 = circles:mapped(|c| -> c.y + c.r)
    local cm2 = circles:mapped(|c| -> c.y - c.r)
    local ys = {}
    table.move(cm1, 1, #cm1, 1, ys)
    table.move(cm2, 1, #cm2, #ys + 1, ys)
    local mins = math.floor(ys:min() / precision)
    local maxs = math.ceil (ys:max() / precision)
    local total = 0
    for x = mins, maxs do
        local y = x * precision
        local right = -1 / 0
        local points = circles:filtered(|c| -> math.abs(y - c.y) < c.r)
                              :reorder()
                              :map(|c| -> sect(c, y))
                              :sort(|p1, p2| -> p1.x < p2.x)
        for points as p do
            if p.y > right then
                total += p.y - math.max(p.x, right)
                right = p.y
            end
        end
    end
    return total * precision
end

local p = 1e-5
print($"Approximate area = {area_scan(p)}")
