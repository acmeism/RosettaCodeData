Given a flat list of integers greater than zero, representing object nesting
levels, e.g. <code>[1, 2, 4]</code>,
generate a tree formed from nested lists of those nesting level integers where:
* Every int appears, in order, at its depth of nesting.
* If the next level int is greater than the previous then it appears in a sub-list of the list containing the previous item


The generated tree data structure should ideally be in a languages nested list format that can
be used for further calculations rather than something just calculated for printing.


An input of <code>[1, 2, 4]</code> should produce the equivalent of: <code><nowiki>[1, [2, [[4]]]]</nowiki></code>
where 1 is at depth1, 2 is two deep and 4 is nested 4 deep.

<code>[1, 2, 4, 2, 2, 1]</code> should produce <code><nowiki>[1, [2, [[4]], 2, 2], 1]</nowiki></code>. <br>
All the nesting integers are in the same order but at the correct nesting
levels.

Similarly <code>[3, 1, 3, 1]</code> should generate <code><nowiki>[[[3]], 1, [[3]], 1]</nowiki></code>

;Task:
Generate and show here the results for the following inputs:
:* <code>[]</code>
:* <code>[1, 2, 4]</code>
:* <code>[3, 1, 3, 1]</code>
:* <code>[1, 2, 3, 1]</code>
:* <code>[3, 2, 1, 3]</code>
:* <code>[3, 3, 3, 1, 1, 3, 3, 3]</code>


