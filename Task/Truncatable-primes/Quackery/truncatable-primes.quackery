  1000000 eratosthenes

  [ false swap
    number$ witheach
      [ char 0 =
        if [ conclude not ] ] ] is haszero      ( n --> b )

  [ 10 / ]                      is truncright   ( n --> n )

  [ number$
    behead drop $->n drop ]     is truncleft    ( n --> n )

  [ dup isprime not iff
      [ drop false ] done
    dup haszero iff
      [ drop false ] done
    true swap
    [ truncleft
      dup 0 > while
      dup isprime not iff
        [ dip not ] done
      again ] drop ]           is ltruncatable ( n --> b )

  [ dup isprime not iff
      [ drop false ] done
    dup haszero iff
      [ drop false ] done
    true swap
    [ truncright
      dup 0 > while
      dup isprime not iff
        [ dip not ] done
      again ] drop ]           is rtruncatable ( n --> b )

  say "Left:  "
  1000000 times [ i ltruncatable if [ i echo conclude ] ]
  cr
  say "Right: "
  1000000 times [ i rtruncatable if [ i echo conclude ] ]
  cr
