Dim As Integer nEnunciados = 12, intento, enun, errado
Dim As Integer Afirm(nEnunciados), T(nEnunciados)

For intento = 0 To 2^nEnunciados-1
    REM Postular respuesta:
    For enun = 1 To 12
        T(enun) = (intento And 2^(enun-1)) <> 0
    Next enum

    REM Prueba de consistencia:
    Afirm(1)  = T(1) = (nEnunciados = 12)
    Afirm(2)  = T(2) = ((T(7)+T(8)+T(9)+T(10)+T(11)+T(12)) = -3)
    Afirm(3)  = T(3) = ((T(2)+T(4)+T(6)+T(8)+T(10)+T(12)) = -2)
    Afirm(4)  = T(4) = ((Not T(5) Or (T(6) And T(7))))
    Afirm(5)  = T(5) = (Not T(2) And Not T(3) And Not T(4))
    Afirm(6)  = T(6) = ((T(1)+T(3)+T(5)+T(7)+T(9)+T(11)) = -4)
    Afirm(7)  = T(7) = ((T(2) Or T(3)))
    Afirm(8)  = T(8) = ((Not T(7) Or (T(5) And T(6))))
    Afirm(9)  = T(9) = ((T(1)+T(2)+T(3)+T(4)+T(5)+T(6)) = -3)
    Afirm(10) = T(10) = (T(11) And T(12))
    Afirm(11) = T(11) = ((T(7)+T(8)+T(9)) = -1)
    Afirm(12) = T(12) = ((T(1)+T(2)+T(3)+T(4)+T(5)+T(6) + T(7)+T(8)+T(9)+T(10)+T(11)) = -4)

    Dim As Integer suma = 0
    For cont As Integer = 1 To 12
        suma += Afirm(cont)
    Next cont

    Select Case suma
    Case -11
        Color 7: Print "Casi resuelto, con los enunciados ";
        For enun = 1 To 12
            If T(enun) Then Print ; enun; " ";
            If Not Afirm(enun) Then errado = enun
        Next enun
        Print "verdaderos (falsos"; errado; ")."
    Case -12
        Color 10: Print "Â­Resuelto! con los enunciados ";
        For enun = 1 To 12
            If T(enun) Then Print ; enun; " ";
        Next enun
        Print "verdaderos."
    End Select
Next intento
Sleep
