F randN(n)
   ‘1,0 random generator factory with 1 appearing 1/n'th of the time’
   R () -> random:(@=n) == 0

F unbiased(biased)
   ‘uses a biased() generator of 1 or 0, to create an unbiased one’
   V (this, that) = (biased(), biased())
   L this == that
      (this, that) = (biased(), biased())
   R this

L(n) 3..6
   V biased = randN(n)
   V v = (0.<1000000).map(x -> @biased())
   V (v1, v0) = (v.count(1), v.count(0))
   print(‘Biased(#.):  count1=#., count0=#., percent=#.2’.format(n, v1, v0, 100.0 * v1 / (v1 + v0)))

   v = (0.<1000000).map(x -> unbiased(@biased))
   (v1, v0) = (v.count(1), v.count(0))
   print(‘  Unbiased: count1=#., count0=#., percent=#.2’.format(v1, v0, 100.0 * v1 / (v1 + v0)))
