import extensions;

extension op : IntNumber
{
    bool randN()
        = randomGenerator.nextInt(self) == 0;

    get bool Unbiased()
    {
        bool flip1 := self.randN();
        bool flip2 := self.randN();

        while (flip1 == flip2)
        {
            flip1 := self.randN();
            flip2 := self.randN()
        };

        ^ flip1
    }
}

public program()
{
    for(int n := 3, n <= 6, n += 1)
    {
        int biasedZero := 0;
        int biasedOne := 0;
        int unbiasedZero := 0;
        int unbiasedOne := 0;

        for(int i := 0, i < 100000, i += 1)
        {
            if(n.randN()) { biasedOne += 1 } else { biasedZero += 1 };
            if(n.Unbiased) { unbiasedOne += 1 } else { unbiasedZero += 1 }
        };

        console
            .printLineFormatted("(N = {0}):".padRight(17) + "# of 0"$9"# of 1"$9"% of 0"$9"% of 1", n)
            .printLineFormatted("Biased:".padRight(15) + "{0}"$9"{1}"$9"{2}"$9"{3}",
                                    biasedZero, biasedOne, biasedZero / 1000, biasedOne / 1000)
            .printLineFormatted("Unbiased:".padRight(15) + "{0}"$9"{1}"$9"{2}"$9"{3}",
                                    unbiasedZero, unbiasedOne, unbiasedZero / 1000, unbiasedOne / 1000)
    }
}
