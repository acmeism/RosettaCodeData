V limit = 10'000'000
V is_prime = [0B] * 2 [+] [1B] * (limit - 1)
L(n) 0 .< Int(limit ^ 0.5 + 1.5)
   I is_prime[n]
      L(i) (n * n .< limit + 1).step(n)
         is_prime[i] = 0B

F unprimeable(a)
   I :is_prime[a]
      R 0B
   V d = 1
   L d <= a
      V base = (a I/ (d * 10)) * (d * 10) + (a % d)
      I any((base .< base + d * 10).step(d).map(y -> :is_prime[y]))
         R 0B
      d *= 10
   R 1B

F unprime(n)
   [Int] r
   L(a) 1..
      I unprimeable(a)
         r [+]= a
         I r.len == n
            L.break
   R r

print(‘First 35:’)
print(unprime(35).map(i -> String(i)).join(‘ ’))

print("\nThe 600-th:")
print(unprime(600).last)
print()

V first = [0] * 10
V need = 10
L(p) 1..
   I unprimeable(p)
      V i = p % 10
      I first[i] != 0
         L.continue

      first[i] = p
      I --need == 0
         L.break

L(v) first
   print(L.index‘ ending: ’v)
