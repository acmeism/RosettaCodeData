val .luhntest = f(.s) {
    val .t = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]
    val .numbers = s2n .s
    val .oddeven = len(.numbers) rem 2

    for[=0] .i of .numbers {
        _for += if(.i rem 2 == .oddeven: .numbers[.i]; .t[.numbers[.i]+1])
    } div 10
}

val .isintest = f(.s) {
    matching(re/^[A-Z][A-Z][0-9A-Z]{9}[0-9]$/, .s) and
        .luhntest(join s2n .s)
}

val .tests = h{
    "US0378331005":  true,
    "US0373831005": false,
    "U50378331005": false,
    "AU0000XVGZA3": true,
    "AU0000VXGZA3": true,
    "FR0000988040": true,
    "US03378331005": false,
}

for .key in sort(keys .tests) {
    val .pass = .isintest(.key)
    write .key, ": ", .pass
    writeln if(.pass == .tests[.key]: ""; " (ISIN TEST FAILED)")
}
