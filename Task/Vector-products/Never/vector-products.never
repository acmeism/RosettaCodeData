func printv(a[d] : float) -> int {
    prints("[" + a[0] + ", " + a[1] + ", " + a[2] + "]\n");
    0
}

func dot(a[d1] : float, b[d2] : float) -> float {
    a[0] * b[0] + a[1] * b[1] + a[2] * b[2]
}

func cross(a[d1] : float, b[d2] : float) -> [_] : float {
    [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ] : float
}

func scalar_triple(a[d1] : float, b[d2] : float, c[d3] : float) -> float {
    dot(a, cross(b, c))
}

func vector_triple(a[d1] : float, b[d2] : float, c[d3] : float) -> [_] : float {
    cross(a, cross(b, c))
}

func main() -> int {
    var a = [ 3.0, 4.0, 5.0 ] : float;
    var b = [ 4.0, 3.0, 5.0 ] : float;
    var c = [ -5.0, -12.0, -13.0 ] : float;

    printv(a);
    printv(b);
    printv(c);
    printf(dot(a, b));
    printv(cross(a, b));
    printf(scalar_triple(a, b, c));
    printv(vector_triple(a, b, c));
    0
}
