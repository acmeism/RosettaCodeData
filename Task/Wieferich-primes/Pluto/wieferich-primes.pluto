do  -- find some Wierferich Primes: primes p where p^2 evenly divides 2^(p-1)-1

    local bigint            = require( "pluto:bigint" ) -- standard Pluto big integers
    local int               = require( "int" )          -- RC integer module, includes some prime utilities
    local maxNumber <const> = 5000                      -- maximum number we will consider
    local primeList <const> = int.primes( maxNumber )   -- get a list of primes up to maxNumber

    -- find the first two Wierferich Primes
    local b0 <const>, b1 <const> = new bigint( 0 ), new bigint( 1 )
    local pPos, twoToPMinus1, power, wCount = 1, b1, 0, 0
    for primeList as p do
        if wCount == 2 then break end
        while power < ( p - 1 ) do
            twoToPMinus1 += twoToPMinus1
            power        += 1
        end
        local p2 <const> = new bigint( p * p )
        if ( twoToPMinus1 - b1 ) % p2 == b0 then
            io.write( " ", p )
            wCount += 1
        end
        pPos += 1
    end
end
