main =>
  MinLen = 3,
  MaxLen = 9,
  Chars = "ndeokgelw",
  MustContain = 'k',

  WordList = "unixdict.txt",
  Words = read_file_lines(WordList),
  Res = word_wheel(Chars,Words,MustContain,MinLen, MaxLen),
  println(Res),
  println(len=Res.len),
  nl.

word_wheel(Chars,Words,MustContain,MinLen,MaxLen) = Res.reverse =>
  Chars := to_lowercase(Chars),
  D = make_hash(Chars),
  Res = [],
  foreach(W in Words, W.len >= MinLen, W.len <= MaxLen, membchk(MustContain,W))
    WD = make_hash(W),
    Check = true,
    foreach(C in keys(WD), break(Check == false))
      if not D.has_key(C) ; WD.get(C,0) > D.get(C,0) then
        Check := false
      end
    end,
    if Check == true then
      Res := [W|Res]
    end
  end.

% Returns a map of the elements and their occurrences
% in the list L.
make_hash(L) = D =>
  D = new_map(),
  foreach(E in L)
    D.put(E,D.get(E,0)+1)
  end.
