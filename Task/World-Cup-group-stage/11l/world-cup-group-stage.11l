V games = [‘12’, ‘13’, ‘14’, ‘23’, ‘24’, ‘34’]
V results = ‘000000’

F numberToBase(=n, b)
   I n == 0
      R ‘0’
   V digits = ‘’
   L n != 0
      digits ‘’= String(Int(n % b))
      n I/= b
   R reversed(digits)

F nextResult()
   I :results == ‘222222’
      R 0B
   V res = Int(:results, radix' 3) + 1
   :results = numberToBase(res, 3).zfill(6)
   R 1B

V points = [[0] * 10] * 4
L
   V records = [0] * 4
   L(i) 0 .< games.len
      S results[i]
         ‘2’
            records[games[i][0].code - ‘1’.code] += 3
         ‘1’
            records[games[i][0].code - ‘1’.code]++
            records[games[i][1].code - ‘1’.code]++
         ‘0’
            records[games[i][1].code - ‘1’.code] += 3

   records.sort()
   L(i) 4
      points[i][records[i]]++

   I !nextResult()
      L.break

print(|‘POINTS       0    1    2    3    4    5    6    7    8    9
        -------------------------------------------------------------’)
V places = [‘1st’, ‘2nd’, ‘3rd’, ‘4th’]
L(i) 4
   print(places[i], end' ‘ place    ’)
   L(j) 10
      print(‘#<5’.format(points[3 - i][j]), end' ‘’)
   print()
