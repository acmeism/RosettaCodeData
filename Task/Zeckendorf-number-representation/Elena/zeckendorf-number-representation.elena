import system'routines;
import system'collections;
import system'text;
import extensions;
extension op
{
    fibonacci()
    {
        if (self < 2)
        {
            ^ self
        }
        else
        {
            ^ (self - 1).fibonacci() + (self - 2).fibonacci()
        };
    }

    zeckendorf()
    {
        var fibonacciNumbers := new List<int>();

        int num := self;
        int fibPosition := 2;
        int currentFibonaciNum := fibPosition.fibonacci();

        while (currentFibonaciNum <= num)
        {
            fibonacciNumbers.append:currentFibonaciNum;

            fibPosition := fibPosition + 1;
            currentFibonaciNum := fibPosition.fibonacci()
        };

        auto output := new TextBuilder();
        int temp := num;

        fibonacciNumbers.sequenceReverse().forEach:(item)
        {
            if (item <= temp)
            {
                output.write("1");
                temp := temp - item
            }
            else
            {
                output.write("0")
            }
        };

        ^ output.Value
    }
}

public program()
{
    for(int i := 1, i <= 20, i += 1)
    {
        console.printFormatted("{0} : {1}",i,i.zeckendorf()).writeLine()
    };

    console.readChar()
}
