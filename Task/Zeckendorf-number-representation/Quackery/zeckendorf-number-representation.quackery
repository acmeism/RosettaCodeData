  [ 2 base put
    echo
    base release ]        is binecho ( n -->   )

  [ 0 swap ' [ 2 1 ]
    [ 2dup 0 peek < iff
        [ behead drop ]
        done
      dup 0 peek
      over 1 peek
      + swap join again ]
    witheach
      [ rot 1 << unrot
        2dup < iff drop
        else
          [ -
            dip
              [ 1 | ] ] ]
    drop ]                is n->z    ( n --> z )

  [ 0 temp put
    1 1 rot
    [ dup while
      dup 1 & if
        [ over
          temp tally ]
      1 >>
      dip [ tuck + ]
      again ]
    2drop drop
    temp take ]           is z->n    ( z --> n )

   21 times
    [ i^ dup echo
      say " -> "
      n->z dup binecho
      say " -> "
      z->n echo cr ]
